Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> INS
Rule 1     INS -> INS I puntoycoma
Rule 2     INS -> I puntoycoma
Rule 3     INS -> INS error puntoycoma
Rule 4     INS -> error puntoycoma
Rule 5     I -> ASIGNACION
Rule 6     I -> ASIGNACION_STRUCT
Rule 7     I -> ASIGNACION_ARRAY
Rule 8     I -> FUNCION
Rule 9     I -> STRUCT
Rule 10    I -> LLAMADA
Rule 11    I -> IF
Rule 12    I -> WHILE
Rule 13    I -> FOR
Rule 14    I -> BREAK
Rule 15    I -> CONTINUE
Rule 16    I -> RETURN
Rule 17    BLOQUE -> INS end
Rule 18    BLOQUE_ABIERTO -> INS
Rule 19    TIPO -> Int64
Rule 20    TIPO -> Float64
Rule 21    TIPO -> Bool
Rule 22    TIPO -> Char
Rule 23    TIPO -> String
Rule 24    SCOPE -> local
Rule 25    SCOPE -> global
Rule 26    ASIGNACION -> id igual ASIGNACION_VALOR
Rule 27    ASIGNACION -> SCOPE id igual ASIGNACION_VALOR
Rule 28    ASIGNACION -> SCOPE id
Rule 29    ASIGNACION_VALOR -> E
Rule 30    ASIGNACION_VALOR -> E tipo TIPO
Rule 31    ASIGNACION_STRUCT -> ID igual E
Rule 32    ASIGNACION_ARRAY -> id IND igual E
Rule 33    IND -> IND corchete_A E corchete_B
Rule 34    IND -> corchete_A E corchete_B
Rule 35    FUNCION -> function id parentesis_A PAR parentesis_B BLOQUE
Rule 36    FUNCION -> function id parentesis_A parentesis_B BLOQUE
Rule 37    PAR -> PAR coma P
Rule 38    PAR -> P
Rule 39    P -> id
Rule 40    STRUCT -> struct id ATR end
Rule 41    STRUCT -> mutable struct id ATR end
Rule 42    ATR -> ATR A
Rule 43    ATR -> A
Rule 44    A -> id tipo TIPO puntoycoma
Rule 45    A -> id puntoycoma
Rule 46    EXP -> EXP coma E
Rule 47    EXP -> E
Rule 48    E -> E mas E
Rule 49    E -> E menos E
Rule 50    E -> E asterisco E
Rule 51    E -> E barra E
Rule 52    E -> E caret E
Rule 53    E -> E modulo E
Rule 54    E -> menos E
Rule 55    E -> E mayor E
Rule 56    E -> E menor E
Rule 57    E -> E mayor_igual E
Rule 58    E -> E menor_igual E
Rule 59    E -> E igualacion E
Rule 60    E -> E diferenciacion E
Rule 61    E -> E or E
Rule 62    E -> E and E
Rule 63    E -> not E
Rule 64    E -> parentesis_A E parentesis_B
Rule 65    E -> LLAMADA
Rule 66    E -> ACCESO_ARREGLO
Rule 67    E -> RANGO
Rule 68    E -> ARREGLO
Rule 69    E -> ID
Rule 70    E -> int64
Rule 71    E -> float64
Rule 72    E -> bool
Rule 73    E -> char
Rule 74    E -> string
Rule 75    E -> Nothing
Rule 76    ARREGLO -> corchete_A EXP corchete_B
Rule 77    ARREGLO -> corchete_A corchete_B
Rule 78    LLAMADA -> id parentesis_A EXP parentesis_B
Rule 79    LLAMADA -> id parentesis_A parentesis_B
Rule 80    ACCESO_ARREGLO -> id corchete_A E corchete_B
Rule 81    ID -> ID punto id
Rule 82    ID -> id
Rule 83    IF -> if E BLOQUE
Rule 84    IF -> if E BLOQUE_ABIERTO ELSE
Rule 85    IF -> if E BLOQUE_ABIERTO ELSEIF
Rule 86    ELSEIF -> elseif E BLOQUE
Rule 87    ELSEIF -> elseif E BLOQUE_ABIERTO ELSEIF
Rule 88    ELSEIF -> elseif E BLOQUE_ABIERTO ELSE
Rule 89    ELSE -> else BLOQUE
Rule 90    WHILE -> while E BLOQUE
Rule 91    FOR -> for id in E BLOQUE
Rule 92    RANGO -> E dospuntos E
Rule 93    BREAK -> break
Rule 94    CONTINUE -> continue
Rule 95    RETURN -> return E
Rule 96    RETURN -> return

Terminals, with rules where they appear

Bool                 : 21
Char                 : 22
Float64              : 20
Int64                : 19
Nothing              : 75
String               : 23
and                  : 62
asterisco            : 50
barra                : 51
bool                 : 72
break                : 93
caret                : 52
char                 : 73
coma                 : 37 46
continue             : 94
corchete_A           : 33 34 76 77 80
corchete_B           : 33 34 76 77 80
diferenciacion       : 60
dospuntos            : 92
else                 : 89
elseif               : 86 87 88
end                  : 17 40 41
error                : 3 4
float64              : 71
for                  : 91
function             : 35 36
global               : 25
id                   : 26 27 28 32 35 36 39 40 41 44 45 78 79 80 81 82 91
if                   : 83 84 85
igual                : 26 27 31 32
igualacion           : 59
in                   : 91
int64                : 70
local                : 24
mas                  : 48
mayor                : 55
mayor_igual          : 57
menor                : 56
menor_igual          : 58
menos                : 49 54
modulo               : 53
mutable              : 41
not                  : 63
or                   : 61
parentesis_A         : 35 36 64 78 79
parentesis_B         : 35 36 64 78 79
punto                : 81
puntoycoma           : 1 2 3 4 44 45
return               : 95 96
string               : 74
struct               : 40 41
tipo                 : 30 44
while                : 90

Nonterminals, with rules where they appear

A                    : 42 43
ACCESO_ARREGLO       : 66
ARREGLO              : 68
ASIGNACION           : 5
ASIGNACION_ARRAY     : 7
ASIGNACION_STRUCT    : 6
ASIGNACION_VALOR     : 26 27
ATR                  : 40 41 42
BLOQUE               : 35 36 83 86 89 90 91
BLOQUE_ABIERTO       : 84 85 87 88
BREAK                : 14
CONTINUE             : 15
E                    : 29 30 31 32 33 34 46 47 48 48 49 49 50 50 51 51 52 52 53 53 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 64 80 83 84 85 86 87 88 90 91 92 92 95
ELSE                 : 84 88
ELSEIF               : 85 87
EXP                  : 46 76 78
FOR                  : 13
FUNCION              : 8
I                    : 1 2
ID                   : 31 69 81
IF                   : 11
IND                  : 32 33
INS                  : 1 3 17 18 0
LLAMADA              : 10 65
P                    : 37 38
PAR                  : 35 37
RANGO                : 67
RETURN               : 16
SCOPE                : 27 28
STRUCT               : 9
TIPO                 : 30 44
WHILE                : 12

Parsing method: LALR

state 0

    (0) S' -> . INS
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . ASIGNACION_STRUCT
    (7) I -> . ASIGNACION_ARRAY
    (8) I -> . FUNCION
    (9) I -> . STRUCT
    (10) I -> . LLAMADA
    (11) I -> . IF
    (12) I -> . WHILE
    (13) I -> . FOR
    (14) I -> . BREAK
    (15) I -> . CONTINUE
    (16) I -> . RETURN
    (26) ASIGNACION -> . id igual ASIGNACION_VALOR
    (27) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (28) ASIGNACION -> . SCOPE id
    (31) ASIGNACION_STRUCT -> . ID igual E
    (32) ASIGNACION_ARRAY -> . id IND igual E
    (35) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (36) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (40) STRUCT -> . struct id ATR end
    (41) STRUCT -> . mutable struct id ATR end
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (83) IF -> . if E BLOQUE
    (84) IF -> . if E BLOQUE_ABIERTO ELSE
    (85) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (90) WHILE -> . while E BLOQUE
    (91) FOR -> . for id in E BLOQUE
    (93) BREAK -> . break
    (94) CONTINUE -> . continue
    (95) RETURN -> . return E
    (96) RETURN -> . return
    (24) SCOPE -> . local
    (25) SCOPE -> . global
    (81) ID -> . ID punto id
    (82) ID -> . id

    error           shift and go to state 3
    id              shift and go to state 16
    function        shift and go to state 19
    struct          shift and go to state 20
    mutable         shift and go to state 21
    if              shift and go to state 22
    while           shift and go to state 23
    for             shift and go to state 24
    break           shift and go to state 25
    continue        shift and go to state 26
    return          shift and go to state 27
    local           shift and go to state 28
    global          shift and go to state 29

    INS                            shift and go to state 1
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    ASIGNACION_STRUCT              shift and go to state 5
    ASIGNACION_ARRAY               shift and go to state 6
    FUNCION                        shift and go to state 7
    STRUCT                         shift and go to state 8
    LLAMADA                        shift and go to state 9
    IF                             shift and go to state 10
    WHILE                          shift and go to state 11
    FOR                            shift and go to state 12
    BREAK                          shift and go to state 13
    CONTINUE                       shift and go to state 14
    RETURN                         shift and go to state 15
    SCOPE                          shift and go to state 17
    ID                             shift and go to state 18

state 1

    (0) S' -> INS .
    (1) INS -> INS . I puntoycoma
    (3) INS -> INS . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . ASIGNACION_STRUCT
    (7) I -> . ASIGNACION_ARRAY
    (8) I -> . FUNCION
    (9) I -> . STRUCT
    (10) I -> . LLAMADA
    (11) I -> . IF
    (12) I -> . WHILE
    (13) I -> . FOR
    (14) I -> . BREAK
    (15) I -> . CONTINUE
    (16) I -> . RETURN
    (26) ASIGNACION -> . id igual ASIGNACION_VALOR
    (27) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (28) ASIGNACION -> . SCOPE id
    (31) ASIGNACION_STRUCT -> . ID igual E
    (32) ASIGNACION_ARRAY -> . id IND igual E
    (35) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (36) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (40) STRUCT -> . struct id ATR end
    (41) STRUCT -> . mutable struct id ATR end
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (83) IF -> . if E BLOQUE
    (84) IF -> . if E BLOQUE_ABIERTO ELSE
    (85) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (90) WHILE -> . while E BLOQUE
    (91) FOR -> . for id in E BLOQUE
    (93) BREAK -> . break
    (94) CONTINUE -> . continue
    (95) RETURN -> . return E
    (96) RETURN -> . return
    (24) SCOPE -> . local
    (25) SCOPE -> . global
    (81) ID -> . ID punto id
    (82) ID -> . id

    error           shift and go to state 31
    id              shift and go to state 16
    function        shift and go to state 19
    struct          shift and go to state 20
    mutable         shift and go to state 21
    if              shift and go to state 22
    while           shift and go to state 23
    for             shift and go to state 24
    break           shift and go to state 25
    continue        shift and go to state 26
    return          shift and go to state 27
    local           shift and go to state 28
    global          shift and go to state 29

    I                              shift and go to state 30
    ASIGNACION                     shift and go to state 4
    ASIGNACION_STRUCT              shift and go to state 5
    ASIGNACION_ARRAY               shift and go to state 6
    FUNCION                        shift and go to state 7
    STRUCT                         shift and go to state 8
    LLAMADA                        shift and go to state 9
    IF                             shift and go to state 10
    WHILE                          shift and go to state 11
    FOR                            shift and go to state 12
    BREAK                          shift and go to state 13
    CONTINUE                       shift and go to state 14
    RETURN                         shift and go to state 15
    SCOPE                          shift and go to state 17
    ID                             shift and go to state 18

state 2

    (2) INS -> I . puntoycoma

    puntoycoma      shift and go to state 32


state 3

    (4) INS -> error . puntoycoma

    puntoycoma      shift and go to state 33


state 4

    (5) I -> ASIGNACION .

    puntoycoma      reduce using rule 5 (I -> ASIGNACION .)


state 5

    (6) I -> ASIGNACION_STRUCT .

    puntoycoma      reduce using rule 6 (I -> ASIGNACION_STRUCT .)


state 6

    (7) I -> ASIGNACION_ARRAY .

    puntoycoma      reduce using rule 7 (I -> ASIGNACION_ARRAY .)


state 7

    (8) I -> FUNCION .

    puntoycoma      reduce using rule 8 (I -> FUNCION .)


state 8

    (9) I -> STRUCT .

    puntoycoma      reduce using rule 9 (I -> STRUCT .)


state 9

    (10) I -> LLAMADA .

    puntoycoma      reduce using rule 10 (I -> LLAMADA .)


state 10

    (11) I -> IF .

    puntoycoma      reduce using rule 11 (I -> IF .)


state 11

    (12) I -> WHILE .

    puntoycoma      reduce using rule 12 (I -> WHILE .)


state 12

    (13) I -> FOR .

    puntoycoma      reduce using rule 13 (I -> FOR .)


state 13

    (14) I -> BREAK .

    puntoycoma      reduce using rule 14 (I -> BREAK .)


state 14

    (15) I -> CONTINUE .

    puntoycoma      reduce using rule 15 (I -> CONTINUE .)


state 15

    (16) I -> RETURN .

    puntoycoma      reduce using rule 16 (I -> RETURN .)


state 16

    (26) ASIGNACION -> id . igual ASIGNACION_VALOR
    (32) ASIGNACION_ARRAY -> id . IND igual E
    (78) LLAMADA -> id . parentesis_A EXP parentesis_B
    (79) LLAMADA -> id . parentesis_A parentesis_B
    (82) ID -> id .
    (33) IND -> . IND corchete_A E corchete_B
    (34) IND -> . corchete_A E corchete_B

  ! shift/reduce conflict for igual resolved as shift
    igual           shift and go to state 34
    parentesis_A    shift and go to state 36
    punto           reduce using rule 82 (ID -> id .)
    corchete_A      shift and go to state 37

  ! igual           [ reduce using rule 82 (ID -> id .) ]

    IND                            shift and go to state 35

state 17

    (27) ASIGNACION -> SCOPE . id igual ASIGNACION_VALOR
    (28) ASIGNACION -> SCOPE . id

    id              shift and go to state 38


state 18

    (31) ASIGNACION_STRUCT -> ID . igual E
    (81) ID -> ID . punto id

    igual           shift and go to state 39
    punto           shift and go to state 40


state 19

    (35) FUNCION -> function . id parentesis_A PAR parentesis_B BLOQUE
    (36) FUNCION -> function . id parentesis_A parentesis_B BLOQUE

    id              shift and go to state 41


state 20

    (40) STRUCT -> struct . id ATR end

    id              shift and go to state 42


state 21

    (41) STRUCT -> mutable . struct id ATR end

    struct          shift and go to state 43


state 22

    (83) IF -> if . E BLOQUE
    (84) IF -> if . E BLOQUE_ABIERTO ELSE
    (85) IF -> if . E BLOQUE_ABIERTO ELSEIF
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 44
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 23

    (90) WHILE -> while . E BLOQUE
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 61
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 24

    (91) FOR -> for . id in E BLOQUE

    id              shift and go to state 62


state 25

    (93) BREAK -> break .

    puntoycoma      reduce using rule 93 (BREAK -> break .)


state 26

    (94) CONTINUE -> continue .

    puntoycoma      reduce using rule 94 (CONTINUE -> continue .)


state 27

    (95) RETURN -> return . E
    (96) RETURN -> return .
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    puntoycoma      reduce using rule 96 (RETURN -> return .)
    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 63
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 28

    (24) SCOPE -> local .

    id              reduce using rule 24 (SCOPE -> local .)


state 29

    (25) SCOPE -> global .

    id              reduce using rule 25 (SCOPE -> global .)


state 30

    (1) INS -> INS I . puntoycoma

    puntoycoma      shift and go to state 64


state 31

    (3) INS -> INS error . puntoycoma

    puntoycoma      shift and go to state 65


state 32

    (2) INS -> I puntoycoma .

    error           reduce using rule 2 (INS -> I puntoycoma .)
    id              reduce using rule 2 (INS -> I puntoycoma .)
    function        reduce using rule 2 (INS -> I puntoycoma .)
    struct          reduce using rule 2 (INS -> I puntoycoma .)
    mutable         reduce using rule 2 (INS -> I puntoycoma .)
    if              reduce using rule 2 (INS -> I puntoycoma .)
    while           reduce using rule 2 (INS -> I puntoycoma .)
    for             reduce using rule 2 (INS -> I puntoycoma .)
    break           reduce using rule 2 (INS -> I puntoycoma .)
    continue        reduce using rule 2 (INS -> I puntoycoma .)
    return          reduce using rule 2 (INS -> I puntoycoma .)
    local           reduce using rule 2 (INS -> I puntoycoma .)
    global          reduce using rule 2 (INS -> I puntoycoma .)
    $end            reduce using rule 2 (INS -> I puntoycoma .)
    end             reduce using rule 2 (INS -> I puntoycoma .)
    else            reduce using rule 2 (INS -> I puntoycoma .)
    elseif          reduce using rule 2 (INS -> I puntoycoma .)


state 33

    (4) INS -> error puntoycoma .

    error           reduce using rule 4 (INS -> error puntoycoma .)
    id              reduce using rule 4 (INS -> error puntoycoma .)
    function        reduce using rule 4 (INS -> error puntoycoma .)
    struct          reduce using rule 4 (INS -> error puntoycoma .)
    mutable         reduce using rule 4 (INS -> error puntoycoma .)
    if              reduce using rule 4 (INS -> error puntoycoma .)
    while           reduce using rule 4 (INS -> error puntoycoma .)
    for             reduce using rule 4 (INS -> error puntoycoma .)
    break           reduce using rule 4 (INS -> error puntoycoma .)
    continue        reduce using rule 4 (INS -> error puntoycoma .)
    return          reduce using rule 4 (INS -> error puntoycoma .)
    local           reduce using rule 4 (INS -> error puntoycoma .)
    global          reduce using rule 4 (INS -> error puntoycoma .)
    $end            reduce using rule 4 (INS -> error puntoycoma .)
    end             reduce using rule 4 (INS -> error puntoycoma .)
    else            reduce using rule 4 (INS -> error puntoycoma .)
    elseif          reduce using rule 4 (INS -> error puntoycoma .)


state 34

    (26) ASIGNACION -> id igual . ASIGNACION_VALOR
    (29) ASIGNACION_VALOR -> . E
    (30) ASIGNACION_VALOR -> . E tipo TIPO
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    ASIGNACION_VALOR               shift and go to state 66
    E                              shift and go to state 67
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 35

    (32) ASIGNACION_ARRAY -> id IND . igual E
    (33) IND -> IND . corchete_A E corchete_B

    igual           shift and go to state 68
    corchete_A      shift and go to state 69


state 36

    (78) LLAMADA -> id parentesis_A . EXP parentesis_B
    (79) LLAMADA -> id parentesis_A . parentesis_B
    (46) EXP -> . EXP coma E
    (47) EXP -> . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    parentesis_B    shift and go to state 71
    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    EXP                            shift and go to state 70
    E                              shift and go to state 72
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 37

    (34) IND -> corchete_A . E corchete_B
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 73
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 38

    (27) ASIGNACION -> SCOPE id . igual ASIGNACION_VALOR
    (28) ASIGNACION -> SCOPE id .

    igual           shift and go to state 74
    puntoycoma      reduce using rule 28 (ASIGNACION -> SCOPE id .)


state 39

    (31) ASIGNACION_STRUCT -> ID igual . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    ID                             shift and go to state 52
    E                              shift and go to state 75
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51

state 40

    (81) ID -> ID punto . id

    id              shift and go to state 76


state 41

    (35) FUNCION -> function id . parentesis_A PAR parentesis_B BLOQUE
    (36) FUNCION -> function id . parentesis_A parentesis_B BLOQUE

    parentesis_A    shift and go to state 77


state 42

    (40) STRUCT -> struct id . ATR end
    (42) ATR -> . ATR A
    (43) ATR -> . A
    (44) A -> . id tipo TIPO puntoycoma
    (45) A -> . id puntoycoma

    id              shift and go to state 78

    ATR                            shift and go to state 79
    A                              shift and go to state 80

state 43

    (41) STRUCT -> mutable struct . id ATR end

    id              shift and go to state 81


state 44

    (83) IF -> if E . BLOQUE
    (84) IF -> if E . BLOQUE_ABIERTO ELSE
    (85) IF -> if E . BLOQUE_ABIERTO ELSEIF
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E
    (17) BLOQUE -> . INS end
    (18) BLOQUE_ABIERTO -> . INS
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . ASIGNACION_STRUCT
    (7) I -> . ASIGNACION_ARRAY
    (8) I -> . FUNCION
    (9) I -> . STRUCT
    (10) I -> . LLAMADA
    (11) I -> . IF
    (12) I -> . WHILE
    (13) I -> . FOR
    (14) I -> . BREAK
    (15) I -> . CONTINUE
    (16) I -> . RETURN
    (26) ASIGNACION -> . id igual ASIGNACION_VALOR
    (27) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (28) ASIGNACION -> . SCOPE id
    (31) ASIGNACION_STRUCT -> . ID igual E
    (32) ASIGNACION_ARRAY -> . id IND igual E
    (35) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (36) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (40) STRUCT -> . struct id ATR end
    (41) STRUCT -> . mutable struct id ATR end
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (83) IF -> . if E BLOQUE
    (84) IF -> . if E BLOQUE_ABIERTO ELSE
    (85) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (90) WHILE -> . while E BLOQUE
    (91) FOR -> . for id in E BLOQUE
    (93) BREAK -> . break
    (94) CONTINUE -> . continue
    (95) RETURN -> . return E
    (96) RETURN -> . return
    (24) SCOPE -> . local
    (25) SCOPE -> . global
    (81) ID -> . ID punto id
    (82) ID -> . id

    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    or              shift and go to state 96
    and             shift and go to state 97
    dospuntos       shift and go to state 98
    error           shift and go to state 3
    id              shift and go to state 16
    function        shift and go to state 19
    struct          shift and go to state 20
    mutable         shift and go to state 21
    if              shift and go to state 22
    while           shift and go to state 23
    for             shift and go to state 24
    break           shift and go to state 25
    continue        shift and go to state 26
    return          shift and go to state 27
    local           shift and go to state 28
    global          shift and go to state 29

    BLOQUE                         shift and go to state 82
    BLOQUE_ABIERTO                 shift and go to state 83
    INS                            shift and go to state 99
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    ASIGNACION_STRUCT              shift and go to state 5
    ASIGNACION_ARRAY               shift and go to state 6
    FUNCION                        shift and go to state 7
    STRUCT                         shift and go to state 8
    LLAMADA                        shift and go to state 9
    IF                             shift and go to state 10
    WHILE                          shift and go to state 11
    FOR                            shift and go to state 12
    BREAK                          shift and go to state 13
    CONTINUE                       shift and go to state 14
    RETURN                         shift and go to state 15
    SCOPE                          shift and go to state 17
    ID                             shift and go to state 18

state 45

    (54) E -> menos . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 100
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 46

    (63) E -> not . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 101
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 47

    (64) E -> parentesis_A . E parentesis_B
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 102
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 48

    (65) E -> LLAMADA .

    mas             reduce using rule 65 (E -> LLAMADA .)
    menos           reduce using rule 65 (E -> LLAMADA .)
    asterisco       reduce using rule 65 (E -> LLAMADA .)
    barra           reduce using rule 65 (E -> LLAMADA .)
    caret           reduce using rule 65 (E -> LLAMADA .)
    modulo          reduce using rule 65 (E -> LLAMADA .)
    mayor           reduce using rule 65 (E -> LLAMADA .)
    menor           reduce using rule 65 (E -> LLAMADA .)
    mayor_igual     reduce using rule 65 (E -> LLAMADA .)
    menor_igual     reduce using rule 65 (E -> LLAMADA .)
    igualacion      reduce using rule 65 (E -> LLAMADA .)
    diferenciacion  reduce using rule 65 (E -> LLAMADA .)
    or              reduce using rule 65 (E -> LLAMADA .)
    and             reduce using rule 65 (E -> LLAMADA .)
    dospuntos       reduce using rule 65 (E -> LLAMADA .)
    error           reduce using rule 65 (E -> LLAMADA .)
    id              reduce using rule 65 (E -> LLAMADA .)
    function        reduce using rule 65 (E -> LLAMADA .)
    struct          reduce using rule 65 (E -> LLAMADA .)
    mutable         reduce using rule 65 (E -> LLAMADA .)
    if              reduce using rule 65 (E -> LLAMADA .)
    while           reduce using rule 65 (E -> LLAMADA .)
    for             reduce using rule 65 (E -> LLAMADA .)
    break           reduce using rule 65 (E -> LLAMADA .)
    continue        reduce using rule 65 (E -> LLAMADA .)
    return          reduce using rule 65 (E -> LLAMADA .)
    local           reduce using rule 65 (E -> LLAMADA .)
    global          reduce using rule 65 (E -> LLAMADA .)
    puntoycoma      reduce using rule 65 (E -> LLAMADA .)
    tipo            reduce using rule 65 (E -> LLAMADA .)
    parentesis_B    reduce using rule 65 (E -> LLAMADA .)
    coma            reduce using rule 65 (E -> LLAMADA .)
    corchete_B      reduce using rule 65 (E -> LLAMADA .)


state 49

    (66) E -> ACCESO_ARREGLO .

    mas             reduce using rule 66 (E -> ACCESO_ARREGLO .)
    menos           reduce using rule 66 (E -> ACCESO_ARREGLO .)
    asterisco       reduce using rule 66 (E -> ACCESO_ARREGLO .)
    barra           reduce using rule 66 (E -> ACCESO_ARREGLO .)
    caret           reduce using rule 66 (E -> ACCESO_ARREGLO .)
    modulo          reduce using rule 66 (E -> ACCESO_ARREGLO .)
    mayor           reduce using rule 66 (E -> ACCESO_ARREGLO .)
    menor           reduce using rule 66 (E -> ACCESO_ARREGLO .)
    mayor_igual     reduce using rule 66 (E -> ACCESO_ARREGLO .)
    menor_igual     reduce using rule 66 (E -> ACCESO_ARREGLO .)
    igualacion      reduce using rule 66 (E -> ACCESO_ARREGLO .)
    diferenciacion  reduce using rule 66 (E -> ACCESO_ARREGLO .)
    or              reduce using rule 66 (E -> ACCESO_ARREGLO .)
    and             reduce using rule 66 (E -> ACCESO_ARREGLO .)
    dospuntos       reduce using rule 66 (E -> ACCESO_ARREGLO .)
    error           reduce using rule 66 (E -> ACCESO_ARREGLO .)
    id              reduce using rule 66 (E -> ACCESO_ARREGLO .)
    function        reduce using rule 66 (E -> ACCESO_ARREGLO .)
    struct          reduce using rule 66 (E -> ACCESO_ARREGLO .)
    mutable         reduce using rule 66 (E -> ACCESO_ARREGLO .)
    if              reduce using rule 66 (E -> ACCESO_ARREGLO .)
    while           reduce using rule 66 (E -> ACCESO_ARREGLO .)
    for             reduce using rule 66 (E -> ACCESO_ARREGLO .)
    break           reduce using rule 66 (E -> ACCESO_ARREGLO .)
    continue        reduce using rule 66 (E -> ACCESO_ARREGLO .)
    return          reduce using rule 66 (E -> ACCESO_ARREGLO .)
    local           reduce using rule 66 (E -> ACCESO_ARREGLO .)
    global          reduce using rule 66 (E -> ACCESO_ARREGLO .)
    puntoycoma      reduce using rule 66 (E -> ACCESO_ARREGLO .)
    tipo            reduce using rule 66 (E -> ACCESO_ARREGLO .)
    parentesis_B    reduce using rule 66 (E -> ACCESO_ARREGLO .)
    coma            reduce using rule 66 (E -> ACCESO_ARREGLO .)
    corchete_B      reduce using rule 66 (E -> ACCESO_ARREGLO .)


state 50

    (67) E -> RANGO .

    mas             reduce using rule 67 (E -> RANGO .)
    menos           reduce using rule 67 (E -> RANGO .)
    asterisco       reduce using rule 67 (E -> RANGO .)
    barra           reduce using rule 67 (E -> RANGO .)
    caret           reduce using rule 67 (E -> RANGO .)
    modulo          reduce using rule 67 (E -> RANGO .)
    mayor           reduce using rule 67 (E -> RANGO .)
    menor           reduce using rule 67 (E -> RANGO .)
    mayor_igual     reduce using rule 67 (E -> RANGO .)
    menor_igual     reduce using rule 67 (E -> RANGO .)
    igualacion      reduce using rule 67 (E -> RANGO .)
    diferenciacion  reduce using rule 67 (E -> RANGO .)
    or              reduce using rule 67 (E -> RANGO .)
    and             reduce using rule 67 (E -> RANGO .)
    dospuntos       reduce using rule 67 (E -> RANGO .)
    error           reduce using rule 67 (E -> RANGO .)
    id              reduce using rule 67 (E -> RANGO .)
    function        reduce using rule 67 (E -> RANGO .)
    struct          reduce using rule 67 (E -> RANGO .)
    mutable         reduce using rule 67 (E -> RANGO .)
    if              reduce using rule 67 (E -> RANGO .)
    while           reduce using rule 67 (E -> RANGO .)
    for             reduce using rule 67 (E -> RANGO .)
    break           reduce using rule 67 (E -> RANGO .)
    continue        reduce using rule 67 (E -> RANGO .)
    return          reduce using rule 67 (E -> RANGO .)
    local           reduce using rule 67 (E -> RANGO .)
    global          reduce using rule 67 (E -> RANGO .)
    puntoycoma      reduce using rule 67 (E -> RANGO .)
    tipo            reduce using rule 67 (E -> RANGO .)
    parentesis_B    reduce using rule 67 (E -> RANGO .)
    coma            reduce using rule 67 (E -> RANGO .)
    corchete_B      reduce using rule 67 (E -> RANGO .)


state 51

    (68) E -> ARREGLO .

    mas             reduce using rule 68 (E -> ARREGLO .)
    menos           reduce using rule 68 (E -> ARREGLO .)
    asterisco       reduce using rule 68 (E -> ARREGLO .)
    barra           reduce using rule 68 (E -> ARREGLO .)
    caret           reduce using rule 68 (E -> ARREGLO .)
    modulo          reduce using rule 68 (E -> ARREGLO .)
    mayor           reduce using rule 68 (E -> ARREGLO .)
    menor           reduce using rule 68 (E -> ARREGLO .)
    mayor_igual     reduce using rule 68 (E -> ARREGLO .)
    menor_igual     reduce using rule 68 (E -> ARREGLO .)
    igualacion      reduce using rule 68 (E -> ARREGLO .)
    diferenciacion  reduce using rule 68 (E -> ARREGLO .)
    or              reduce using rule 68 (E -> ARREGLO .)
    and             reduce using rule 68 (E -> ARREGLO .)
    dospuntos       reduce using rule 68 (E -> ARREGLO .)
    error           reduce using rule 68 (E -> ARREGLO .)
    id              reduce using rule 68 (E -> ARREGLO .)
    function        reduce using rule 68 (E -> ARREGLO .)
    struct          reduce using rule 68 (E -> ARREGLO .)
    mutable         reduce using rule 68 (E -> ARREGLO .)
    if              reduce using rule 68 (E -> ARREGLO .)
    while           reduce using rule 68 (E -> ARREGLO .)
    for             reduce using rule 68 (E -> ARREGLO .)
    break           reduce using rule 68 (E -> ARREGLO .)
    continue        reduce using rule 68 (E -> ARREGLO .)
    return          reduce using rule 68 (E -> ARREGLO .)
    local           reduce using rule 68 (E -> ARREGLO .)
    global          reduce using rule 68 (E -> ARREGLO .)
    puntoycoma      reduce using rule 68 (E -> ARREGLO .)
    tipo            reduce using rule 68 (E -> ARREGLO .)
    parentesis_B    reduce using rule 68 (E -> ARREGLO .)
    coma            reduce using rule 68 (E -> ARREGLO .)
    corchete_B      reduce using rule 68 (E -> ARREGLO .)


state 52

    (69) E -> ID .
    (81) ID -> ID . punto id

    mas             reduce using rule 69 (E -> ID .)
    menos           reduce using rule 69 (E -> ID .)
    asterisco       reduce using rule 69 (E -> ID .)
    barra           reduce using rule 69 (E -> ID .)
    caret           reduce using rule 69 (E -> ID .)
    modulo          reduce using rule 69 (E -> ID .)
    mayor           reduce using rule 69 (E -> ID .)
    menor           reduce using rule 69 (E -> ID .)
    mayor_igual     reduce using rule 69 (E -> ID .)
    menor_igual     reduce using rule 69 (E -> ID .)
    igualacion      reduce using rule 69 (E -> ID .)
    diferenciacion  reduce using rule 69 (E -> ID .)
    or              reduce using rule 69 (E -> ID .)
    and             reduce using rule 69 (E -> ID .)
    dospuntos       reduce using rule 69 (E -> ID .)
    error           reduce using rule 69 (E -> ID .)
    id              reduce using rule 69 (E -> ID .)
    function        reduce using rule 69 (E -> ID .)
    struct          reduce using rule 69 (E -> ID .)
    mutable         reduce using rule 69 (E -> ID .)
    if              reduce using rule 69 (E -> ID .)
    while           reduce using rule 69 (E -> ID .)
    for             reduce using rule 69 (E -> ID .)
    break           reduce using rule 69 (E -> ID .)
    continue        reduce using rule 69 (E -> ID .)
    return          reduce using rule 69 (E -> ID .)
    local           reduce using rule 69 (E -> ID .)
    global          reduce using rule 69 (E -> ID .)
    puntoycoma      reduce using rule 69 (E -> ID .)
    tipo            reduce using rule 69 (E -> ID .)
    parentesis_B    reduce using rule 69 (E -> ID .)
    coma            reduce using rule 69 (E -> ID .)
    corchete_B      reduce using rule 69 (E -> ID .)
    punto           shift and go to state 40


state 53

    (70) E -> int64 .

    mas             reduce using rule 70 (E -> int64 .)
    menos           reduce using rule 70 (E -> int64 .)
    asterisco       reduce using rule 70 (E -> int64 .)
    barra           reduce using rule 70 (E -> int64 .)
    caret           reduce using rule 70 (E -> int64 .)
    modulo          reduce using rule 70 (E -> int64 .)
    mayor           reduce using rule 70 (E -> int64 .)
    menor           reduce using rule 70 (E -> int64 .)
    mayor_igual     reduce using rule 70 (E -> int64 .)
    menor_igual     reduce using rule 70 (E -> int64 .)
    igualacion      reduce using rule 70 (E -> int64 .)
    diferenciacion  reduce using rule 70 (E -> int64 .)
    or              reduce using rule 70 (E -> int64 .)
    and             reduce using rule 70 (E -> int64 .)
    dospuntos       reduce using rule 70 (E -> int64 .)
    error           reduce using rule 70 (E -> int64 .)
    id              reduce using rule 70 (E -> int64 .)
    function        reduce using rule 70 (E -> int64 .)
    struct          reduce using rule 70 (E -> int64 .)
    mutable         reduce using rule 70 (E -> int64 .)
    if              reduce using rule 70 (E -> int64 .)
    while           reduce using rule 70 (E -> int64 .)
    for             reduce using rule 70 (E -> int64 .)
    break           reduce using rule 70 (E -> int64 .)
    continue        reduce using rule 70 (E -> int64 .)
    return          reduce using rule 70 (E -> int64 .)
    local           reduce using rule 70 (E -> int64 .)
    global          reduce using rule 70 (E -> int64 .)
    puntoycoma      reduce using rule 70 (E -> int64 .)
    tipo            reduce using rule 70 (E -> int64 .)
    parentesis_B    reduce using rule 70 (E -> int64 .)
    coma            reduce using rule 70 (E -> int64 .)
    corchete_B      reduce using rule 70 (E -> int64 .)


state 54

    (71) E -> float64 .

    mas             reduce using rule 71 (E -> float64 .)
    menos           reduce using rule 71 (E -> float64 .)
    asterisco       reduce using rule 71 (E -> float64 .)
    barra           reduce using rule 71 (E -> float64 .)
    caret           reduce using rule 71 (E -> float64 .)
    modulo          reduce using rule 71 (E -> float64 .)
    mayor           reduce using rule 71 (E -> float64 .)
    menor           reduce using rule 71 (E -> float64 .)
    mayor_igual     reduce using rule 71 (E -> float64 .)
    menor_igual     reduce using rule 71 (E -> float64 .)
    igualacion      reduce using rule 71 (E -> float64 .)
    diferenciacion  reduce using rule 71 (E -> float64 .)
    or              reduce using rule 71 (E -> float64 .)
    and             reduce using rule 71 (E -> float64 .)
    dospuntos       reduce using rule 71 (E -> float64 .)
    error           reduce using rule 71 (E -> float64 .)
    id              reduce using rule 71 (E -> float64 .)
    function        reduce using rule 71 (E -> float64 .)
    struct          reduce using rule 71 (E -> float64 .)
    mutable         reduce using rule 71 (E -> float64 .)
    if              reduce using rule 71 (E -> float64 .)
    while           reduce using rule 71 (E -> float64 .)
    for             reduce using rule 71 (E -> float64 .)
    break           reduce using rule 71 (E -> float64 .)
    continue        reduce using rule 71 (E -> float64 .)
    return          reduce using rule 71 (E -> float64 .)
    local           reduce using rule 71 (E -> float64 .)
    global          reduce using rule 71 (E -> float64 .)
    puntoycoma      reduce using rule 71 (E -> float64 .)
    tipo            reduce using rule 71 (E -> float64 .)
    parentesis_B    reduce using rule 71 (E -> float64 .)
    coma            reduce using rule 71 (E -> float64 .)
    corchete_B      reduce using rule 71 (E -> float64 .)


state 55

    (72) E -> bool .

    mas             reduce using rule 72 (E -> bool .)
    menos           reduce using rule 72 (E -> bool .)
    asterisco       reduce using rule 72 (E -> bool .)
    barra           reduce using rule 72 (E -> bool .)
    caret           reduce using rule 72 (E -> bool .)
    modulo          reduce using rule 72 (E -> bool .)
    mayor           reduce using rule 72 (E -> bool .)
    menor           reduce using rule 72 (E -> bool .)
    mayor_igual     reduce using rule 72 (E -> bool .)
    menor_igual     reduce using rule 72 (E -> bool .)
    igualacion      reduce using rule 72 (E -> bool .)
    diferenciacion  reduce using rule 72 (E -> bool .)
    or              reduce using rule 72 (E -> bool .)
    and             reduce using rule 72 (E -> bool .)
    dospuntos       reduce using rule 72 (E -> bool .)
    error           reduce using rule 72 (E -> bool .)
    id              reduce using rule 72 (E -> bool .)
    function        reduce using rule 72 (E -> bool .)
    struct          reduce using rule 72 (E -> bool .)
    mutable         reduce using rule 72 (E -> bool .)
    if              reduce using rule 72 (E -> bool .)
    while           reduce using rule 72 (E -> bool .)
    for             reduce using rule 72 (E -> bool .)
    break           reduce using rule 72 (E -> bool .)
    continue        reduce using rule 72 (E -> bool .)
    return          reduce using rule 72 (E -> bool .)
    local           reduce using rule 72 (E -> bool .)
    global          reduce using rule 72 (E -> bool .)
    puntoycoma      reduce using rule 72 (E -> bool .)
    tipo            reduce using rule 72 (E -> bool .)
    parentesis_B    reduce using rule 72 (E -> bool .)
    coma            reduce using rule 72 (E -> bool .)
    corchete_B      reduce using rule 72 (E -> bool .)


state 56

    (73) E -> char .

    mas             reduce using rule 73 (E -> char .)
    menos           reduce using rule 73 (E -> char .)
    asterisco       reduce using rule 73 (E -> char .)
    barra           reduce using rule 73 (E -> char .)
    caret           reduce using rule 73 (E -> char .)
    modulo          reduce using rule 73 (E -> char .)
    mayor           reduce using rule 73 (E -> char .)
    menor           reduce using rule 73 (E -> char .)
    mayor_igual     reduce using rule 73 (E -> char .)
    menor_igual     reduce using rule 73 (E -> char .)
    igualacion      reduce using rule 73 (E -> char .)
    diferenciacion  reduce using rule 73 (E -> char .)
    or              reduce using rule 73 (E -> char .)
    and             reduce using rule 73 (E -> char .)
    dospuntos       reduce using rule 73 (E -> char .)
    error           reduce using rule 73 (E -> char .)
    id              reduce using rule 73 (E -> char .)
    function        reduce using rule 73 (E -> char .)
    struct          reduce using rule 73 (E -> char .)
    mutable         reduce using rule 73 (E -> char .)
    if              reduce using rule 73 (E -> char .)
    while           reduce using rule 73 (E -> char .)
    for             reduce using rule 73 (E -> char .)
    break           reduce using rule 73 (E -> char .)
    continue        reduce using rule 73 (E -> char .)
    return          reduce using rule 73 (E -> char .)
    local           reduce using rule 73 (E -> char .)
    global          reduce using rule 73 (E -> char .)
    puntoycoma      reduce using rule 73 (E -> char .)
    tipo            reduce using rule 73 (E -> char .)
    parentesis_B    reduce using rule 73 (E -> char .)
    coma            reduce using rule 73 (E -> char .)
    corchete_B      reduce using rule 73 (E -> char .)


state 57

    (74) E -> string .

    mas             reduce using rule 74 (E -> string .)
    menos           reduce using rule 74 (E -> string .)
    asterisco       reduce using rule 74 (E -> string .)
    barra           reduce using rule 74 (E -> string .)
    caret           reduce using rule 74 (E -> string .)
    modulo          reduce using rule 74 (E -> string .)
    mayor           reduce using rule 74 (E -> string .)
    menor           reduce using rule 74 (E -> string .)
    mayor_igual     reduce using rule 74 (E -> string .)
    menor_igual     reduce using rule 74 (E -> string .)
    igualacion      reduce using rule 74 (E -> string .)
    diferenciacion  reduce using rule 74 (E -> string .)
    or              reduce using rule 74 (E -> string .)
    and             reduce using rule 74 (E -> string .)
    dospuntos       reduce using rule 74 (E -> string .)
    error           reduce using rule 74 (E -> string .)
    id              reduce using rule 74 (E -> string .)
    function        reduce using rule 74 (E -> string .)
    struct          reduce using rule 74 (E -> string .)
    mutable         reduce using rule 74 (E -> string .)
    if              reduce using rule 74 (E -> string .)
    while           reduce using rule 74 (E -> string .)
    for             reduce using rule 74 (E -> string .)
    break           reduce using rule 74 (E -> string .)
    continue        reduce using rule 74 (E -> string .)
    return          reduce using rule 74 (E -> string .)
    local           reduce using rule 74 (E -> string .)
    global          reduce using rule 74 (E -> string .)
    puntoycoma      reduce using rule 74 (E -> string .)
    tipo            reduce using rule 74 (E -> string .)
    parentesis_B    reduce using rule 74 (E -> string .)
    coma            reduce using rule 74 (E -> string .)
    corchete_B      reduce using rule 74 (E -> string .)


state 58

    (75) E -> Nothing .

    mas             reduce using rule 75 (E -> Nothing .)
    menos           reduce using rule 75 (E -> Nothing .)
    asterisco       reduce using rule 75 (E -> Nothing .)
    barra           reduce using rule 75 (E -> Nothing .)
    caret           reduce using rule 75 (E -> Nothing .)
    modulo          reduce using rule 75 (E -> Nothing .)
    mayor           reduce using rule 75 (E -> Nothing .)
    menor           reduce using rule 75 (E -> Nothing .)
    mayor_igual     reduce using rule 75 (E -> Nothing .)
    menor_igual     reduce using rule 75 (E -> Nothing .)
    igualacion      reduce using rule 75 (E -> Nothing .)
    diferenciacion  reduce using rule 75 (E -> Nothing .)
    or              reduce using rule 75 (E -> Nothing .)
    and             reduce using rule 75 (E -> Nothing .)
    dospuntos       reduce using rule 75 (E -> Nothing .)
    error           reduce using rule 75 (E -> Nothing .)
    id              reduce using rule 75 (E -> Nothing .)
    function        reduce using rule 75 (E -> Nothing .)
    struct          reduce using rule 75 (E -> Nothing .)
    mutable         reduce using rule 75 (E -> Nothing .)
    if              reduce using rule 75 (E -> Nothing .)
    while           reduce using rule 75 (E -> Nothing .)
    for             reduce using rule 75 (E -> Nothing .)
    break           reduce using rule 75 (E -> Nothing .)
    continue        reduce using rule 75 (E -> Nothing .)
    return          reduce using rule 75 (E -> Nothing .)
    local           reduce using rule 75 (E -> Nothing .)
    global          reduce using rule 75 (E -> Nothing .)
    puntoycoma      reduce using rule 75 (E -> Nothing .)
    tipo            reduce using rule 75 (E -> Nothing .)
    parentesis_B    reduce using rule 75 (E -> Nothing .)
    coma            reduce using rule 75 (E -> Nothing .)
    corchete_B      reduce using rule 75 (E -> Nothing .)


state 59

    (78) LLAMADA -> id . parentesis_A EXP parentesis_B
    (79) LLAMADA -> id . parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> id . corchete_A E corchete_B
    (82) ID -> id .

    parentesis_A    shift and go to state 36
    corchete_A      shift and go to state 103
    punto           reduce using rule 82 (ID -> id .)
    mas             reduce using rule 82 (ID -> id .)
    menos           reduce using rule 82 (ID -> id .)
    asterisco       reduce using rule 82 (ID -> id .)
    barra           reduce using rule 82 (ID -> id .)
    caret           reduce using rule 82 (ID -> id .)
    modulo          reduce using rule 82 (ID -> id .)
    mayor           reduce using rule 82 (ID -> id .)
    menor           reduce using rule 82 (ID -> id .)
    mayor_igual     reduce using rule 82 (ID -> id .)
    menor_igual     reduce using rule 82 (ID -> id .)
    igualacion      reduce using rule 82 (ID -> id .)
    diferenciacion  reduce using rule 82 (ID -> id .)
    or              reduce using rule 82 (ID -> id .)
    and             reduce using rule 82 (ID -> id .)
    dospuntos       reduce using rule 82 (ID -> id .)
    error           reduce using rule 82 (ID -> id .)
    id              reduce using rule 82 (ID -> id .)
    function        reduce using rule 82 (ID -> id .)
    struct          reduce using rule 82 (ID -> id .)
    mutable         reduce using rule 82 (ID -> id .)
    if              reduce using rule 82 (ID -> id .)
    while           reduce using rule 82 (ID -> id .)
    for             reduce using rule 82 (ID -> id .)
    break           reduce using rule 82 (ID -> id .)
    continue        reduce using rule 82 (ID -> id .)
    return          reduce using rule 82 (ID -> id .)
    local           reduce using rule 82 (ID -> id .)
    global          reduce using rule 82 (ID -> id .)
    puntoycoma      reduce using rule 82 (ID -> id .)
    tipo            reduce using rule 82 (ID -> id .)
    parentesis_B    reduce using rule 82 (ID -> id .)
    coma            reduce using rule 82 (ID -> id .)
    corchete_B      reduce using rule 82 (ID -> id .)


state 60

    (76) ARREGLO -> corchete_A . EXP corchete_B
    (77) ARREGLO -> corchete_A . corchete_B
    (46) EXP -> . EXP coma E
    (47) EXP -> . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    corchete_B      shift and go to state 105
    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    EXP                            shift and go to state 104
    E                              shift and go to state 72
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 61

    (90) WHILE -> while E . BLOQUE
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E
    (17) BLOQUE -> . INS end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . ASIGNACION_STRUCT
    (7) I -> . ASIGNACION_ARRAY
    (8) I -> . FUNCION
    (9) I -> . STRUCT
    (10) I -> . LLAMADA
    (11) I -> . IF
    (12) I -> . WHILE
    (13) I -> . FOR
    (14) I -> . BREAK
    (15) I -> . CONTINUE
    (16) I -> . RETURN
    (26) ASIGNACION -> . id igual ASIGNACION_VALOR
    (27) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (28) ASIGNACION -> . SCOPE id
    (31) ASIGNACION_STRUCT -> . ID igual E
    (32) ASIGNACION_ARRAY -> . id IND igual E
    (35) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (36) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (40) STRUCT -> . struct id ATR end
    (41) STRUCT -> . mutable struct id ATR end
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (83) IF -> . if E BLOQUE
    (84) IF -> . if E BLOQUE_ABIERTO ELSE
    (85) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (90) WHILE -> . while E BLOQUE
    (91) FOR -> . for id in E BLOQUE
    (93) BREAK -> . break
    (94) CONTINUE -> . continue
    (95) RETURN -> . return E
    (96) RETURN -> . return
    (24) SCOPE -> . local
    (25) SCOPE -> . global
    (81) ID -> . ID punto id
    (82) ID -> . id

    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    or              shift and go to state 96
    and             shift and go to state 97
    dospuntos       shift and go to state 98
    error           shift and go to state 3
    id              shift and go to state 16
    function        shift and go to state 19
    struct          shift and go to state 20
    mutable         shift and go to state 21
    if              shift and go to state 22
    while           shift and go to state 23
    for             shift and go to state 24
    break           shift and go to state 25
    continue        shift and go to state 26
    return          shift and go to state 27
    local           shift and go to state 28
    global          shift and go to state 29

    BLOQUE                         shift and go to state 106
    INS                            shift and go to state 107
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    ASIGNACION_STRUCT              shift and go to state 5
    ASIGNACION_ARRAY               shift and go to state 6
    FUNCION                        shift and go to state 7
    STRUCT                         shift and go to state 8
    LLAMADA                        shift and go to state 9
    IF                             shift and go to state 10
    WHILE                          shift and go to state 11
    FOR                            shift and go to state 12
    BREAK                          shift and go to state 13
    CONTINUE                       shift and go to state 14
    RETURN                         shift and go to state 15
    SCOPE                          shift and go to state 17
    ID                             shift and go to state 18

state 62

    (91) FOR -> for id . in E BLOQUE

    in              shift and go to state 108


state 63

    (95) RETURN -> return E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    puntoycoma      reduce using rule 95 (RETURN -> return E .)
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    or              shift and go to state 96
    and             shift and go to state 97
    dospuntos       shift and go to state 98


state 64

    (1) INS -> INS I puntoycoma .

    error           reduce using rule 1 (INS -> INS I puntoycoma .)
    id              reduce using rule 1 (INS -> INS I puntoycoma .)
    function        reduce using rule 1 (INS -> INS I puntoycoma .)
    struct          reduce using rule 1 (INS -> INS I puntoycoma .)
    mutable         reduce using rule 1 (INS -> INS I puntoycoma .)
    if              reduce using rule 1 (INS -> INS I puntoycoma .)
    while           reduce using rule 1 (INS -> INS I puntoycoma .)
    for             reduce using rule 1 (INS -> INS I puntoycoma .)
    break           reduce using rule 1 (INS -> INS I puntoycoma .)
    continue        reduce using rule 1 (INS -> INS I puntoycoma .)
    return          reduce using rule 1 (INS -> INS I puntoycoma .)
    local           reduce using rule 1 (INS -> INS I puntoycoma .)
    global          reduce using rule 1 (INS -> INS I puntoycoma .)
    $end            reduce using rule 1 (INS -> INS I puntoycoma .)
    end             reduce using rule 1 (INS -> INS I puntoycoma .)
    else            reduce using rule 1 (INS -> INS I puntoycoma .)
    elseif          reduce using rule 1 (INS -> INS I puntoycoma .)


state 65

    (3) INS -> INS error puntoycoma .

    error           reduce using rule 3 (INS -> INS error puntoycoma .)
    id              reduce using rule 3 (INS -> INS error puntoycoma .)
    function        reduce using rule 3 (INS -> INS error puntoycoma .)
    struct          reduce using rule 3 (INS -> INS error puntoycoma .)
    mutable         reduce using rule 3 (INS -> INS error puntoycoma .)
    if              reduce using rule 3 (INS -> INS error puntoycoma .)
    while           reduce using rule 3 (INS -> INS error puntoycoma .)
    for             reduce using rule 3 (INS -> INS error puntoycoma .)
    break           reduce using rule 3 (INS -> INS error puntoycoma .)
    continue        reduce using rule 3 (INS -> INS error puntoycoma .)
    return          reduce using rule 3 (INS -> INS error puntoycoma .)
    local           reduce using rule 3 (INS -> INS error puntoycoma .)
    global          reduce using rule 3 (INS -> INS error puntoycoma .)
    $end            reduce using rule 3 (INS -> INS error puntoycoma .)
    end             reduce using rule 3 (INS -> INS error puntoycoma .)
    else            reduce using rule 3 (INS -> INS error puntoycoma .)
    elseif          reduce using rule 3 (INS -> INS error puntoycoma .)


state 66

    (26) ASIGNACION -> id igual ASIGNACION_VALOR .

    puntoycoma      reduce using rule 26 (ASIGNACION -> id igual ASIGNACION_VALOR .)


state 67

    (29) ASIGNACION_VALOR -> E .
    (30) ASIGNACION_VALOR -> E . tipo TIPO
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    puntoycoma      reduce using rule 29 (ASIGNACION_VALOR -> E .)
    tipo            shift and go to state 109
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    or              shift and go to state 96
    and             shift and go to state 97
    dospuntos       shift and go to state 98


state 68

    (32) ASIGNACION_ARRAY -> id IND igual . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 110
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 69

    (33) IND -> IND corchete_A . E corchete_B
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 111
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 70

    (78) LLAMADA -> id parentesis_A EXP . parentesis_B
    (46) EXP -> EXP . coma E

    parentesis_B    shift and go to state 112
    coma            shift and go to state 113


state 71

    (79) LLAMADA -> id parentesis_A parentesis_B .

    puntoycoma      reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    mas             reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    menos           reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    asterisco       reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    barra           reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    caret           reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    modulo          reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    mayor           reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    menor           reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    mayor_igual     reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    menor_igual     reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    igualacion      reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    diferenciacion  reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    or              reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    and             reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    dospuntos       reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    error           reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    id              reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    function        reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    struct          reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    mutable         reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    if              reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    while           reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    for             reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    break           reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    continue        reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    return          reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    local           reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    global          reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    tipo            reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    parentesis_B    reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    coma            reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)
    corchete_B      reduce using rule 79 (LLAMADA -> id parentesis_A parentesis_B .)


state 72

    (47) EXP -> E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    parentesis_B    reduce using rule 47 (EXP -> E .)
    coma            reduce using rule 47 (EXP -> E .)
    corchete_B      reduce using rule 47 (EXP -> E .)
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    or              shift and go to state 96
    and             shift and go to state 97
    dospuntos       shift and go to state 98


state 73

    (34) IND -> corchete_A E . corchete_B
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    corchete_B      shift and go to state 114
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    or              shift and go to state 96
    and             shift and go to state 97
    dospuntos       shift and go to state 98


state 74

    (27) ASIGNACION -> SCOPE id igual . ASIGNACION_VALOR
    (29) ASIGNACION_VALOR -> . E
    (30) ASIGNACION_VALOR -> . E tipo TIPO
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    ASIGNACION_VALOR               shift and go to state 115
    E                              shift and go to state 67
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 75

    (31) ASIGNACION_STRUCT -> ID igual E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    puntoycoma      reduce using rule 31 (ASIGNACION_STRUCT -> ID igual E .)
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    or              shift and go to state 96
    and             shift and go to state 97
    dospuntos       shift and go to state 98


state 76

    (81) ID -> ID punto id .

    igual           reduce using rule 81 (ID -> ID punto id .)
    punto           reduce using rule 81 (ID -> ID punto id .)
    mas             reduce using rule 81 (ID -> ID punto id .)
    menos           reduce using rule 81 (ID -> ID punto id .)
    asterisco       reduce using rule 81 (ID -> ID punto id .)
    barra           reduce using rule 81 (ID -> ID punto id .)
    caret           reduce using rule 81 (ID -> ID punto id .)
    modulo          reduce using rule 81 (ID -> ID punto id .)
    mayor           reduce using rule 81 (ID -> ID punto id .)
    menor           reduce using rule 81 (ID -> ID punto id .)
    mayor_igual     reduce using rule 81 (ID -> ID punto id .)
    menor_igual     reduce using rule 81 (ID -> ID punto id .)
    igualacion      reduce using rule 81 (ID -> ID punto id .)
    diferenciacion  reduce using rule 81 (ID -> ID punto id .)
    or              reduce using rule 81 (ID -> ID punto id .)
    and             reduce using rule 81 (ID -> ID punto id .)
    dospuntos       reduce using rule 81 (ID -> ID punto id .)
    error           reduce using rule 81 (ID -> ID punto id .)
    id              reduce using rule 81 (ID -> ID punto id .)
    function        reduce using rule 81 (ID -> ID punto id .)
    struct          reduce using rule 81 (ID -> ID punto id .)
    mutable         reduce using rule 81 (ID -> ID punto id .)
    if              reduce using rule 81 (ID -> ID punto id .)
    while           reduce using rule 81 (ID -> ID punto id .)
    for             reduce using rule 81 (ID -> ID punto id .)
    break           reduce using rule 81 (ID -> ID punto id .)
    continue        reduce using rule 81 (ID -> ID punto id .)
    return          reduce using rule 81 (ID -> ID punto id .)
    local           reduce using rule 81 (ID -> ID punto id .)
    global          reduce using rule 81 (ID -> ID punto id .)
    puntoycoma      reduce using rule 81 (ID -> ID punto id .)
    tipo            reduce using rule 81 (ID -> ID punto id .)
    parentesis_B    reduce using rule 81 (ID -> ID punto id .)
    coma            reduce using rule 81 (ID -> ID punto id .)
    corchete_B      reduce using rule 81 (ID -> ID punto id .)


state 77

    (35) FUNCION -> function id parentesis_A . PAR parentesis_B BLOQUE
    (36) FUNCION -> function id parentesis_A . parentesis_B BLOQUE
    (37) PAR -> . PAR coma P
    (38) PAR -> . P
    (39) P -> . id

    parentesis_B    shift and go to state 118
    id              shift and go to state 116

    PAR                            shift and go to state 117
    P                              shift and go to state 119

state 78

    (44) A -> id . tipo TIPO puntoycoma
    (45) A -> id . puntoycoma

    tipo            shift and go to state 120
    puntoycoma      shift and go to state 121


state 79

    (40) STRUCT -> struct id ATR . end
    (42) ATR -> ATR . A
    (44) A -> . id tipo TIPO puntoycoma
    (45) A -> . id puntoycoma

    end             shift and go to state 122
    id              shift and go to state 78

    A                              shift and go to state 123

state 80

    (43) ATR -> A .

    end             reduce using rule 43 (ATR -> A .)
    id              reduce using rule 43 (ATR -> A .)


state 81

    (41) STRUCT -> mutable struct id . ATR end
    (42) ATR -> . ATR A
    (43) ATR -> . A
    (44) A -> . id tipo TIPO puntoycoma
    (45) A -> . id puntoycoma

    id              shift and go to state 78

    ATR                            shift and go to state 124
    A                              shift and go to state 80

state 82

    (83) IF -> if E BLOQUE .

    puntoycoma      reduce using rule 83 (IF -> if E BLOQUE .)


state 83

    (84) IF -> if E BLOQUE_ABIERTO . ELSE
    (85) IF -> if E BLOQUE_ABIERTO . ELSEIF
    (89) ELSE -> . else BLOQUE
    (86) ELSEIF -> . elseif E BLOQUE
    (87) ELSEIF -> . elseif E BLOQUE_ABIERTO ELSEIF
    (88) ELSEIF -> . elseif E BLOQUE_ABIERTO ELSE

    else            shift and go to state 127
    elseif          shift and go to state 128

    ELSE                           shift and go to state 125
    ELSEIF                         shift and go to state 126

state 84

    (48) E -> E mas . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 129
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 85

    (49) E -> E menos . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 130
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 86

    (50) E -> E asterisco . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 131
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 87

    (51) E -> E barra . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 132
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 88

    (52) E -> E caret . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 133
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 89

    (53) E -> E modulo . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 134
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 90

    (55) E -> E mayor . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 135
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 91

    (56) E -> E menor . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 136
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 92

    (57) E -> E mayor_igual . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 137
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 93

    (58) E -> E menor_igual . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 138
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 94

    (59) E -> E igualacion . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 139
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 95

    (60) E -> E diferenciacion . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 140
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 96

    (61) E -> E or . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 141
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 97

    (62) E -> E and . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 142
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 98

    (92) RANGO -> E dospuntos . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 143
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 99

    (17) BLOQUE -> INS . end
    (18) BLOQUE_ABIERTO -> INS .
    (1) INS -> INS . I puntoycoma
    (3) INS -> INS . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . ASIGNACION_STRUCT
    (7) I -> . ASIGNACION_ARRAY
    (8) I -> . FUNCION
    (9) I -> . STRUCT
    (10) I -> . LLAMADA
    (11) I -> . IF
    (12) I -> . WHILE
    (13) I -> . FOR
    (14) I -> . BREAK
    (15) I -> . CONTINUE
    (16) I -> . RETURN
    (26) ASIGNACION -> . id igual ASIGNACION_VALOR
    (27) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (28) ASIGNACION -> . SCOPE id
    (31) ASIGNACION_STRUCT -> . ID igual E
    (32) ASIGNACION_ARRAY -> . id IND igual E
    (35) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (36) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (40) STRUCT -> . struct id ATR end
    (41) STRUCT -> . mutable struct id ATR end
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (83) IF -> . if E BLOQUE
    (84) IF -> . if E BLOQUE_ABIERTO ELSE
    (85) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (90) WHILE -> . while E BLOQUE
    (91) FOR -> . for id in E BLOQUE
    (93) BREAK -> . break
    (94) CONTINUE -> . continue
    (95) RETURN -> . return E
    (96) RETURN -> . return
    (24) SCOPE -> . local
    (25) SCOPE -> . global
    (81) ID -> . ID punto id
    (82) ID -> . id

    end             shift and go to state 144
    else            reduce using rule 18 (BLOQUE_ABIERTO -> INS .)
    elseif          reduce using rule 18 (BLOQUE_ABIERTO -> INS .)
    error           shift and go to state 31
    id              shift and go to state 16
    function        shift and go to state 19
    struct          shift and go to state 20
    mutable         shift and go to state 21
    if              shift and go to state 22
    while           shift and go to state 23
    for             shift and go to state 24
    break           shift and go to state 25
    continue        shift and go to state 26
    return          shift and go to state 27
    local           shift and go to state 28
    global          shift and go to state 29

    I                              shift and go to state 30
    ASIGNACION                     shift and go to state 4
    ASIGNACION_STRUCT              shift and go to state 5
    ASIGNACION_ARRAY               shift and go to state 6
    FUNCION                        shift and go to state 7
    STRUCT                         shift and go to state 8
    LLAMADA                        shift and go to state 9
    IF                             shift and go to state 10
    WHILE                          shift and go to state 11
    FOR                            shift and go to state 12
    BREAK                          shift and go to state 13
    CONTINUE                       shift and go to state 14
    RETURN                         shift and go to state 15
    SCOPE                          shift and go to state 17
    ID                             shift and go to state 18

state 100

    (54) E -> menos E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    mas             reduce using rule 54 (E -> menos E .)
    menos           reduce using rule 54 (E -> menos E .)
    asterisco       reduce using rule 54 (E -> menos E .)
    barra           reduce using rule 54 (E -> menos E .)
    caret           reduce using rule 54 (E -> menos E .)
    modulo          reduce using rule 54 (E -> menos E .)
    mayor           reduce using rule 54 (E -> menos E .)
    menor           reduce using rule 54 (E -> menos E .)
    mayor_igual     reduce using rule 54 (E -> menos E .)
    menor_igual     reduce using rule 54 (E -> menos E .)
    igualacion      reduce using rule 54 (E -> menos E .)
    diferenciacion  reduce using rule 54 (E -> menos E .)
    or              reduce using rule 54 (E -> menos E .)
    and             reduce using rule 54 (E -> menos E .)
    dospuntos       reduce using rule 54 (E -> menos E .)
    error           reduce using rule 54 (E -> menos E .)
    id              reduce using rule 54 (E -> menos E .)
    function        reduce using rule 54 (E -> menos E .)
    struct          reduce using rule 54 (E -> menos E .)
    mutable         reduce using rule 54 (E -> menos E .)
    if              reduce using rule 54 (E -> menos E .)
    while           reduce using rule 54 (E -> menos E .)
    for             reduce using rule 54 (E -> menos E .)
    break           reduce using rule 54 (E -> menos E .)
    continue        reduce using rule 54 (E -> menos E .)
    return          reduce using rule 54 (E -> menos E .)
    local           reduce using rule 54 (E -> menos E .)
    global          reduce using rule 54 (E -> menos E .)
    puntoycoma      reduce using rule 54 (E -> menos E .)
    tipo            reduce using rule 54 (E -> menos E .)
    parentesis_B    reduce using rule 54 (E -> menos E .)
    coma            reduce using rule 54 (E -> menos E .)
    corchete_B      reduce using rule 54 (E -> menos E .)

  ! mas             [ shift and go to state 84 ]
  ! menos           [ shift and go to state 85 ]
  ! asterisco       [ shift and go to state 86 ]
  ! barra           [ shift and go to state 87 ]
  ! caret           [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! mayor           [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! mayor_igual     [ shift and go to state 92 ]
  ! menor_igual     [ shift and go to state 93 ]
  ! igualacion      [ shift and go to state 94 ]
  ! diferenciacion  [ shift and go to state 95 ]
  ! or              [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! dospuntos       [ shift and go to state 98 ]


state 101

    (63) E -> not E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    mas             reduce using rule 63 (E -> not E .)
    menos           reduce using rule 63 (E -> not E .)
    asterisco       reduce using rule 63 (E -> not E .)
    barra           reduce using rule 63 (E -> not E .)
    caret           reduce using rule 63 (E -> not E .)
    modulo          reduce using rule 63 (E -> not E .)
    mayor           reduce using rule 63 (E -> not E .)
    menor           reduce using rule 63 (E -> not E .)
    mayor_igual     reduce using rule 63 (E -> not E .)
    menor_igual     reduce using rule 63 (E -> not E .)
    igualacion      reduce using rule 63 (E -> not E .)
    diferenciacion  reduce using rule 63 (E -> not E .)
    or              reduce using rule 63 (E -> not E .)
    and             reduce using rule 63 (E -> not E .)
    dospuntos       reduce using rule 63 (E -> not E .)
    error           reduce using rule 63 (E -> not E .)
    id              reduce using rule 63 (E -> not E .)
    function        reduce using rule 63 (E -> not E .)
    struct          reduce using rule 63 (E -> not E .)
    mutable         reduce using rule 63 (E -> not E .)
    if              reduce using rule 63 (E -> not E .)
    while           reduce using rule 63 (E -> not E .)
    for             reduce using rule 63 (E -> not E .)
    break           reduce using rule 63 (E -> not E .)
    continue        reduce using rule 63 (E -> not E .)
    return          reduce using rule 63 (E -> not E .)
    local           reduce using rule 63 (E -> not E .)
    global          reduce using rule 63 (E -> not E .)
    puntoycoma      reduce using rule 63 (E -> not E .)
    tipo            reduce using rule 63 (E -> not E .)
    parentesis_B    reduce using rule 63 (E -> not E .)
    coma            reduce using rule 63 (E -> not E .)
    corchete_B      reduce using rule 63 (E -> not E .)

  ! mas             [ shift and go to state 84 ]
  ! menos           [ shift and go to state 85 ]
  ! asterisco       [ shift and go to state 86 ]
  ! barra           [ shift and go to state 87 ]
  ! caret           [ shift and go to state 88 ]
  ! modulo          [ shift and go to state 89 ]
  ! mayor           [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! mayor_igual     [ shift and go to state 92 ]
  ! menor_igual     [ shift and go to state 93 ]
  ! igualacion      [ shift and go to state 94 ]
  ! diferenciacion  [ shift and go to state 95 ]
  ! or              [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! dospuntos       [ shift and go to state 98 ]


state 102

    (64) E -> parentesis_A E . parentesis_B
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    parentesis_B    shift and go to state 145
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    or              shift and go to state 96
    and             shift and go to state 97
    dospuntos       shift and go to state 98


state 103

    (80) ACCESO_ARREGLO -> id corchete_A . E corchete_B
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 146
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 104

    (76) ARREGLO -> corchete_A EXP . corchete_B
    (46) EXP -> EXP . coma E

    corchete_B      shift and go to state 147
    coma            shift and go to state 113


state 105

    (77) ARREGLO -> corchete_A corchete_B .

    mas             reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    menos           reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    asterisco       reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    barra           reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    caret           reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    modulo          reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    mayor           reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    menor           reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    mayor_igual     reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    menor_igual     reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    igualacion      reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    diferenciacion  reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    or              reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    and             reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    dospuntos       reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    error           reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    id              reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    function        reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    struct          reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    mutable         reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    if              reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    while           reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    for             reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    break           reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    continue        reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    return          reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    local           reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    global          reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    puntoycoma      reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    tipo            reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    parentesis_B    reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    coma            reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)
    corchete_B      reduce using rule 77 (ARREGLO -> corchete_A corchete_B .)


state 106

    (90) WHILE -> while E BLOQUE .

    puntoycoma      reduce using rule 90 (WHILE -> while E BLOQUE .)


state 107

    (17) BLOQUE -> INS . end
    (1) INS -> INS . I puntoycoma
    (3) INS -> INS . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . ASIGNACION_STRUCT
    (7) I -> . ASIGNACION_ARRAY
    (8) I -> . FUNCION
    (9) I -> . STRUCT
    (10) I -> . LLAMADA
    (11) I -> . IF
    (12) I -> . WHILE
    (13) I -> . FOR
    (14) I -> . BREAK
    (15) I -> . CONTINUE
    (16) I -> . RETURN
    (26) ASIGNACION -> . id igual ASIGNACION_VALOR
    (27) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (28) ASIGNACION -> . SCOPE id
    (31) ASIGNACION_STRUCT -> . ID igual E
    (32) ASIGNACION_ARRAY -> . id IND igual E
    (35) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (36) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (40) STRUCT -> . struct id ATR end
    (41) STRUCT -> . mutable struct id ATR end
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (83) IF -> . if E BLOQUE
    (84) IF -> . if E BLOQUE_ABIERTO ELSE
    (85) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (90) WHILE -> . while E BLOQUE
    (91) FOR -> . for id in E BLOQUE
    (93) BREAK -> . break
    (94) CONTINUE -> . continue
    (95) RETURN -> . return E
    (96) RETURN -> . return
    (24) SCOPE -> . local
    (25) SCOPE -> . global
    (81) ID -> . ID punto id
    (82) ID -> . id

    end             shift and go to state 144
    error           shift and go to state 31
    id              shift and go to state 16
    function        shift and go to state 19
    struct          shift and go to state 20
    mutable         shift and go to state 21
    if              shift and go to state 22
    while           shift and go to state 23
    for             shift and go to state 24
    break           shift and go to state 25
    continue        shift and go to state 26
    return          shift and go to state 27
    local           shift and go to state 28
    global          shift and go to state 29

    I                              shift and go to state 30
    ASIGNACION                     shift and go to state 4
    ASIGNACION_STRUCT              shift and go to state 5
    ASIGNACION_ARRAY               shift and go to state 6
    FUNCION                        shift and go to state 7
    STRUCT                         shift and go to state 8
    LLAMADA                        shift and go to state 9
    IF                             shift and go to state 10
    WHILE                          shift and go to state 11
    FOR                            shift and go to state 12
    BREAK                          shift and go to state 13
    CONTINUE                       shift and go to state 14
    RETURN                         shift and go to state 15
    SCOPE                          shift and go to state 17
    ID                             shift and go to state 18

state 108

    (91) FOR -> for id in . E BLOQUE
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 148
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 109

    (30) ASIGNACION_VALOR -> E tipo . TIPO
    (19) TIPO -> . Int64
    (20) TIPO -> . Float64
    (21) TIPO -> . Bool
    (22) TIPO -> . Char
    (23) TIPO -> . String

    Int64           shift and go to state 150
    Float64         shift and go to state 151
    Bool            shift and go to state 152
    Char            shift and go to state 153
    String          shift and go to state 154

    TIPO                           shift and go to state 149

state 110

    (32) ASIGNACION_ARRAY -> id IND igual E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    puntoycoma      reduce using rule 32 (ASIGNACION_ARRAY -> id IND igual E .)
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    or              shift and go to state 96
    and             shift and go to state 97
    dospuntos       shift and go to state 98


state 111

    (33) IND -> IND corchete_A E . corchete_B
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    corchete_B      shift and go to state 155
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    or              shift and go to state 96
    and             shift and go to state 97
    dospuntos       shift and go to state 98


state 112

    (78) LLAMADA -> id parentesis_A EXP parentesis_B .

    puntoycoma      reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    mas             reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    menos           reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    asterisco       reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    barra           reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    caret           reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    modulo          reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    mayor           reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    menor           reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    mayor_igual     reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    menor_igual     reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    igualacion      reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    diferenciacion  reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    or              reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    and             reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    dospuntos       reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    error           reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    id              reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    function        reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    struct          reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    mutable         reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    if              reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    while           reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    for             reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    break           reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    continue        reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    return          reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    local           reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    global          reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    tipo            reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    parentesis_B    reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    coma            reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    corchete_B      reduce using rule 78 (LLAMADA -> id parentesis_A EXP parentesis_B .)


state 113

    (46) EXP -> EXP coma . E
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 156
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 114

    (34) IND -> corchete_A E corchete_B .

    igual           reduce using rule 34 (IND -> corchete_A E corchete_B .)
    corchete_A      reduce using rule 34 (IND -> corchete_A E corchete_B .)


state 115

    (27) ASIGNACION -> SCOPE id igual ASIGNACION_VALOR .

    puntoycoma      reduce using rule 27 (ASIGNACION -> SCOPE id igual ASIGNACION_VALOR .)


state 116

    (39) P -> id .

    parentesis_B    reduce using rule 39 (P -> id .)
    coma            reduce using rule 39 (P -> id .)


state 117

    (35) FUNCION -> function id parentesis_A PAR . parentesis_B BLOQUE
    (37) PAR -> PAR . coma P

    parentesis_B    shift and go to state 157
    coma            shift and go to state 158


state 118

    (36) FUNCION -> function id parentesis_A parentesis_B . BLOQUE
    (17) BLOQUE -> . INS end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . ASIGNACION_STRUCT
    (7) I -> . ASIGNACION_ARRAY
    (8) I -> . FUNCION
    (9) I -> . STRUCT
    (10) I -> . LLAMADA
    (11) I -> . IF
    (12) I -> . WHILE
    (13) I -> . FOR
    (14) I -> . BREAK
    (15) I -> . CONTINUE
    (16) I -> . RETURN
    (26) ASIGNACION -> . id igual ASIGNACION_VALOR
    (27) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (28) ASIGNACION -> . SCOPE id
    (31) ASIGNACION_STRUCT -> . ID igual E
    (32) ASIGNACION_ARRAY -> . id IND igual E
    (35) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (36) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (40) STRUCT -> . struct id ATR end
    (41) STRUCT -> . mutable struct id ATR end
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (83) IF -> . if E BLOQUE
    (84) IF -> . if E BLOQUE_ABIERTO ELSE
    (85) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (90) WHILE -> . while E BLOQUE
    (91) FOR -> . for id in E BLOQUE
    (93) BREAK -> . break
    (94) CONTINUE -> . continue
    (95) RETURN -> . return E
    (96) RETURN -> . return
    (24) SCOPE -> . local
    (25) SCOPE -> . global
    (81) ID -> . ID punto id
    (82) ID -> . id

    error           shift and go to state 3
    id              shift and go to state 16
    function        shift and go to state 19
    struct          shift and go to state 20
    mutable         shift and go to state 21
    if              shift and go to state 22
    while           shift and go to state 23
    for             shift and go to state 24
    break           shift and go to state 25
    continue        shift and go to state 26
    return          shift and go to state 27
    local           shift and go to state 28
    global          shift and go to state 29

    BLOQUE                         shift and go to state 159
    INS                            shift and go to state 107
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    ASIGNACION_STRUCT              shift and go to state 5
    ASIGNACION_ARRAY               shift and go to state 6
    FUNCION                        shift and go to state 7
    STRUCT                         shift and go to state 8
    LLAMADA                        shift and go to state 9
    IF                             shift and go to state 10
    WHILE                          shift and go to state 11
    FOR                            shift and go to state 12
    BREAK                          shift and go to state 13
    CONTINUE                       shift and go to state 14
    RETURN                         shift and go to state 15
    SCOPE                          shift and go to state 17
    ID                             shift and go to state 18

state 119

    (38) PAR -> P .

    parentesis_B    reduce using rule 38 (PAR -> P .)
    coma            reduce using rule 38 (PAR -> P .)


state 120

    (44) A -> id tipo . TIPO puntoycoma
    (19) TIPO -> . Int64
    (20) TIPO -> . Float64
    (21) TIPO -> . Bool
    (22) TIPO -> . Char
    (23) TIPO -> . String

    Int64           shift and go to state 150
    Float64         shift and go to state 151
    Bool            shift and go to state 152
    Char            shift and go to state 153
    String          shift and go to state 154

    TIPO                           shift and go to state 160

state 121

    (45) A -> id puntoycoma .

    end             reduce using rule 45 (A -> id puntoycoma .)
    id              reduce using rule 45 (A -> id puntoycoma .)


state 122

    (40) STRUCT -> struct id ATR end .

    puntoycoma      reduce using rule 40 (STRUCT -> struct id ATR end .)


state 123

    (42) ATR -> ATR A .

    end             reduce using rule 42 (ATR -> ATR A .)
    id              reduce using rule 42 (ATR -> ATR A .)


state 124

    (41) STRUCT -> mutable struct id ATR . end
    (42) ATR -> ATR . A
    (44) A -> . id tipo TIPO puntoycoma
    (45) A -> . id puntoycoma

    end             shift and go to state 161
    id              shift and go to state 78

    A                              shift and go to state 123

state 125

    (84) IF -> if E BLOQUE_ABIERTO ELSE .

    puntoycoma      reduce using rule 84 (IF -> if E BLOQUE_ABIERTO ELSE .)


state 126

    (85) IF -> if E BLOQUE_ABIERTO ELSEIF .

    puntoycoma      reduce using rule 85 (IF -> if E BLOQUE_ABIERTO ELSEIF .)


state 127

    (89) ELSE -> else . BLOQUE
    (17) BLOQUE -> . INS end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . ASIGNACION_STRUCT
    (7) I -> . ASIGNACION_ARRAY
    (8) I -> . FUNCION
    (9) I -> . STRUCT
    (10) I -> . LLAMADA
    (11) I -> . IF
    (12) I -> . WHILE
    (13) I -> . FOR
    (14) I -> . BREAK
    (15) I -> . CONTINUE
    (16) I -> . RETURN
    (26) ASIGNACION -> . id igual ASIGNACION_VALOR
    (27) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (28) ASIGNACION -> . SCOPE id
    (31) ASIGNACION_STRUCT -> . ID igual E
    (32) ASIGNACION_ARRAY -> . id IND igual E
    (35) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (36) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (40) STRUCT -> . struct id ATR end
    (41) STRUCT -> . mutable struct id ATR end
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (83) IF -> . if E BLOQUE
    (84) IF -> . if E BLOQUE_ABIERTO ELSE
    (85) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (90) WHILE -> . while E BLOQUE
    (91) FOR -> . for id in E BLOQUE
    (93) BREAK -> . break
    (94) CONTINUE -> . continue
    (95) RETURN -> . return E
    (96) RETURN -> . return
    (24) SCOPE -> . local
    (25) SCOPE -> . global
    (81) ID -> . ID punto id
    (82) ID -> . id

    error           shift and go to state 3
    id              shift and go to state 16
    function        shift and go to state 19
    struct          shift and go to state 20
    mutable         shift and go to state 21
    if              shift and go to state 22
    while           shift and go to state 23
    for             shift and go to state 24
    break           shift and go to state 25
    continue        shift and go to state 26
    return          shift and go to state 27
    local           shift and go to state 28
    global          shift and go to state 29

    BLOQUE                         shift and go to state 162
    INS                            shift and go to state 107
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    ASIGNACION_STRUCT              shift and go to state 5
    ASIGNACION_ARRAY               shift and go to state 6
    FUNCION                        shift and go to state 7
    STRUCT                         shift and go to state 8
    LLAMADA                        shift and go to state 9
    IF                             shift and go to state 10
    WHILE                          shift and go to state 11
    FOR                            shift and go to state 12
    BREAK                          shift and go to state 13
    CONTINUE                       shift and go to state 14
    RETURN                         shift and go to state 15
    SCOPE                          shift and go to state 17
    ID                             shift and go to state 18

state 128

    (86) ELSEIF -> elseif . E BLOQUE
    (87) ELSEIF -> elseif . E BLOQUE_ABIERTO ELSEIF
    (88) ELSEIF -> elseif . E BLOQUE_ABIERTO ELSE
    (48) E -> . E mas E
    (49) E -> . E menos E
    (50) E -> . E asterisco E
    (51) E -> . E barra E
    (52) E -> . E caret E
    (53) E -> . E modulo E
    (54) E -> . menos E
    (55) E -> . E mayor E
    (56) E -> . E menor E
    (57) E -> . E mayor_igual E
    (58) E -> . E menor_igual E
    (59) E -> . E igualacion E
    (60) E -> . E diferenciacion E
    (61) E -> . E or E
    (62) E -> . E and E
    (63) E -> . not E
    (64) E -> . parentesis_A E parentesis_B
    (65) E -> . LLAMADA
    (66) E -> . ACCESO_ARREGLO
    (67) E -> . RANGO
    (68) E -> . ARREGLO
    (69) E -> . ID
    (70) E -> . int64
    (71) E -> . float64
    (72) E -> . bool
    (73) E -> . char
    (74) E -> . string
    (75) E -> . Nothing
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (80) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (92) RANGO -> . E dospuntos E
    (76) ARREGLO -> . corchete_A EXP corchete_B
    (77) ARREGLO -> . corchete_A corchete_B
    (81) ID -> . ID punto id
    (82) ID -> . id

    menos           shift and go to state 45
    not             shift and go to state 46
    parentesis_A    shift and go to state 47
    int64           shift and go to state 53
    float64         shift and go to state 54
    bool            shift and go to state 55
    char            shift and go to state 56
    string          shift and go to state 57
    Nothing         shift and go to state 58
    id              shift and go to state 59
    corchete_A      shift and go to state 60

    E                              shift and go to state 163
    LLAMADA                        shift and go to state 48
    ACCESO_ARREGLO                 shift and go to state 49
    RANGO                          shift and go to state 50
    ARREGLO                        shift and go to state 51
    ID                             shift and go to state 52

state 129

    (48) E -> E mas E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    mas             reduce using rule 48 (E -> E mas E .)
    menos           reduce using rule 48 (E -> E mas E .)
    mayor           reduce using rule 48 (E -> E mas E .)
    menor           reduce using rule 48 (E -> E mas E .)
    mayor_igual     reduce using rule 48 (E -> E mas E .)
    menor_igual     reduce using rule 48 (E -> E mas E .)
    igualacion      reduce using rule 48 (E -> E mas E .)
    diferenciacion  reduce using rule 48 (E -> E mas E .)
    or              reduce using rule 48 (E -> E mas E .)
    and             reduce using rule 48 (E -> E mas E .)
    dospuntos       reduce using rule 48 (E -> E mas E .)
    error           reduce using rule 48 (E -> E mas E .)
    id              reduce using rule 48 (E -> E mas E .)
    function        reduce using rule 48 (E -> E mas E .)
    struct          reduce using rule 48 (E -> E mas E .)
    mutable         reduce using rule 48 (E -> E mas E .)
    if              reduce using rule 48 (E -> E mas E .)
    while           reduce using rule 48 (E -> E mas E .)
    for             reduce using rule 48 (E -> E mas E .)
    break           reduce using rule 48 (E -> E mas E .)
    continue        reduce using rule 48 (E -> E mas E .)
    return          reduce using rule 48 (E -> E mas E .)
    local           reduce using rule 48 (E -> E mas E .)
    global          reduce using rule 48 (E -> E mas E .)
    puntoycoma      reduce using rule 48 (E -> E mas E .)
    tipo            reduce using rule 48 (E -> E mas E .)
    parentesis_B    reduce using rule 48 (E -> E mas E .)
    coma            reduce using rule 48 (E -> E mas E .)
    corchete_B      reduce using rule 48 (E -> E mas E .)
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89

  ! asterisco       [ reduce using rule 48 (E -> E mas E .) ]
  ! barra           [ reduce using rule 48 (E -> E mas E .) ]
  ! caret           [ reduce using rule 48 (E -> E mas E .) ]
  ! modulo          [ reduce using rule 48 (E -> E mas E .) ]
  ! mas             [ shift and go to state 84 ]
  ! menos           [ shift and go to state 85 ]
  ! mayor           [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! mayor_igual     [ shift and go to state 92 ]
  ! menor_igual     [ shift and go to state 93 ]
  ! igualacion      [ shift and go to state 94 ]
  ! diferenciacion  [ shift and go to state 95 ]
  ! or              [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! dospuntos       [ shift and go to state 98 ]


state 130

    (49) E -> E menos E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    mas             reduce using rule 49 (E -> E menos E .)
    menos           reduce using rule 49 (E -> E menos E .)
    mayor           reduce using rule 49 (E -> E menos E .)
    menor           reduce using rule 49 (E -> E menos E .)
    mayor_igual     reduce using rule 49 (E -> E menos E .)
    menor_igual     reduce using rule 49 (E -> E menos E .)
    igualacion      reduce using rule 49 (E -> E menos E .)
    diferenciacion  reduce using rule 49 (E -> E menos E .)
    or              reduce using rule 49 (E -> E menos E .)
    and             reduce using rule 49 (E -> E menos E .)
    dospuntos       reduce using rule 49 (E -> E menos E .)
    error           reduce using rule 49 (E -> E menos E .)
    id              reduce using rule 49 (E -> E menos E .)
    function        reduce using rule 49 (E -> E menos E .)
    struct          reduce using rule 49 (E -> E menos E .)
    mutable         reduce using rule 49 (E -> E menos E .)
    if              reduce using rule 49 (E -> E menos E .)
    while           reduce using rule 49 (E -> E menos E .)
    for             reduce using rule 49 (E -> E menos E .)
    break           reduce using rule 49 (E -> E menos E .)
    continue        reduce using rule 49 (E -> E menos E .)
    return          reduce using rule 49 (E -> E menos E .)
    local           reduce using rule 49 (E -> E menos E .)
    global          reduce using rule 49 (E -> E menos E .)
    puntoycoma      reduce using rule 49 (E -> E menos E .)
    tipo            reduce using rule 49 (E -> E menos E .)
    parentesis_B    reduce using rule 49 (E -> E menos E .)
    coma            reduce using rule 49 (E -> E menos E .)
    corchete_B      reduce using rule 49 (E -> E menos E .)
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89

  ! asterisco       [ reduce using rule 49 (E -> E menos E .) ]
  ! barra           [ reduce using rule 49 (E -> E menos E .) ]
  ! caret           [ reduce using rule 49 (E -> E menos E .) ]
  ! modulo          [ reduce using rule 49 (E -> E menos E .) ]
  ! mas             [ shift and go to state 84 ]
  ! menos           [ shift and go to state 85 ]
  ! mayor           [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! mayor_igual     [ shift and go to state 92 ]
  ! menor_igual     [ shift and go to state 93 ]
  ! igualacion      [ shift and go to state 94 ]
  ! diferenciacion  [ shift and go to state 95 ]
  ! or              [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! dospuntos       [ shift and go to state 98 ]


state 131

    (50) E -> E asterisco E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    mas             reduce using rule 50 (E -> E asterisco E .)
    menos           reduce using rule 50 (E -> E asterisco E .)
    asterisco       reduce using rule 50 (E -> E asterisco E .)
    barra           reduce using rule 50 (E -> E asterisco E .)
    modulo          reduce using rule 50 (E -> E asterisco E .)
    mayor           reduce using rule 50 (E -> E asterisco E .)
    menor           reduce using rule 50 (E -> E asterisco E .)
    mayor_igual     reduce using rule 50 (E -> E asterisco E .)
    menor_igual     reduce using rule 50 (E -> E asterisco E .)
    igualacion      reduce using rule 50 (E -> E asterisco E .)
    diferenciacion  reduce using rule 50 (E -> E asterisco E .)
    or              reduce using rule 50 (E -> E asterisco E .)
    and             reduce using rule 50 (E -> E asterisco E .)
    dospuntos       reduce using rule 50 (E -> E asterisco E .)
    error           reduce using rule 50 (E -> E asterisco E .)
    id              reduce using rule 50 (E -> E asterisco E .)
    function        reduce using rule 50 (E -> E asterisco E .)
    struct          reduce using rule 50 (E -> E asterisco E .)
    mutable         reduce using rule 50 (E -> E asterisco E .)
    if              reduce using rule 50 (E -> E asterisco E .)
    while           reduce using rule 50 (E -> E asterisco E .)
    for             reduce using rule 50 (E -> E asterisco E .)
    break           reduce using rule 50 (E -> E asterisco E .)
    continue        reduce using rule 50 (E -> E asterisco E .)
    return          reduce using rule 50 (E -> E asterisco E .)
    local           reduce using rule 50 (E -> E asterisco E .)
    global          reduce using rule 50 (E -> E asterisco E .)
    puntoycoma      reduce using rule 50 (E -> E asterisco E .)
    tipo            reduce using rule 50 (E -> E asterisco E .)
    parentesis_B    reduce using rule 50 (E -> E asterisco E .)
    coma            reduce using rule 50 (E -> E asterisco E .)
    corchete_B      reduce using rule 50 (E -> E asterisco E .)
    caret           shift and go to state 88

  ! caret           [ reduce using rule 50 (E -> E asterisco E .) ]
  ! mas             [ shift and go to state 84 ]
  ! menos           [ shift and go to state 85 ]
  ! asterisco       [ shift and go to state 86 ]
  ! barra           [ shift and go to state 87 ]
  ! modulo          [ shift and go to state 89 ]
  ! mayor           [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! mayor_igual     [ shift and go to state 92 ]
  ! menor_igual     [ shift and go to state 93 ]
  ! igualacion      [ shift and go to state 94 ]
  ! diferenciacion  [ shift and go to state 95 ]
  ! or              [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! dospuntos       [ shift and go to state 98 ]


state 132

    (51) E -> E barra E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    mas             reduce using rule 51 (E -> E barra E .)
    menos           reduce using rule 51 (E -> E barra E .)
    asterisco       reduce using rule 51 (E -> E barra E .)
    barra           reduce using rule 51 (E -> E barra E .)
    modulo          reduce using rule 51 (E -> E barra E .)
    mayor           reduce using rule 51 (E -> E barra E .)
    menor           reduce using rule 51 (E -> E barra E .)
    mayor_igual     reduce using rule 51 (E -> E barra E .)
    menor_igual     reduce using rule 51 (E -> E barra E .)
    igualacion      reduce using rule 51 (E -> E barra E .)
    diferenciacion  reduce using rule 51 (E -> E barra E .)
    or              reduce using rule 51 (E -> E barra E .)
    and             reduce using rule 51 (E -> E barra E .)
    dospuntos       reduce using rule 51 (E -> E barra E .)
    error           reduce using rule 51 (E -> E barra E .)
    id              reduce using rule 51 (E -> E barra E .)
    function        reduce using rule 51 (E -> E barra E .)
    struct          reduce using rule 51 (E -> E barra E .)
    mutable         reduce using rule 51 (E -> E barra E .)
    if              reduce using rule 51 (E -> E barra E .)
    while           reduce using rule 51 (E -> E barra E .)
    for             reduce using rule 51 (E -> E barra E .)
    break           reduce using rule 51 (E -> E barra E .)
    continue        reduce using rule 51 (E -> E barra E .)
    return          reduce using rule 51 (E -> E barra E .)
    local           reduce using rule 51 (E -> E barra E .)
    global          reduce using rule 51 (E -> E barra E .)
    puntoycoma      reduce using rule 51 (E -> E barra E .)
    tipo            reduce using rule 51 (E -> E barra E .)
    parentesis_B    reduce using rule 51 (E -> E barra E .)
    coma            reduce using rule 51 (E -> E barra E .)
    corchete_B      reduce using rule 51 (E -> E barra E .)
    caret           shift and go to state 88

  ! caret           [ reduce using rule 51 (E -> E barra E .) ]
  ! mas             [ shift and go to state 84 ]
  ! menos           [ shift and go to state 85 ]
  ! asterisco       [ shift and go to state 86 ]
  ! barra           [ shift and go to state 87 ]
  ! modulo          [ shift and go to state 89 ]
  ! mayor           [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! mayor_igual     [ shift and go to state 92 ]
  ! menor_igual     [ shift and go to state 93 ]
  ! igualacion      [ shift and go to state 94 ]
  ! diferenciacion  [ shift and go to state 95 ]
  ! or              [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! dospuntos       [ shift and go to state 98 ]


state 133

    (52) E -> E caret E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    mas             reduce using rule 52 (E -> E caret E .)
    menos           reduce using rule 52 (E -> E caret E .)
    asterisco       reduce using rule 52 (E -> E caret E .)
    barra           reduce using rule 52 (E -> E caret E .)
    modulo          reduce using rule 52 (E -> E caret E .)
    mayor           reduce using rule 52 (E -> E caret E .)
    menor           reduce using rule 52 (E -> E caret E .)
    mayor_igual     reduce using rule 52 (E -> E caret E .)
    menor_igual     reduce using rule 52 (E -> E caret E .)
    igualacion      reduce using rule 52 (E -> E caret E .)
    diferenciacion  reduce using rule 52 (E -> E caret E .)
    or              reduce using rule 52 (E -> E caret E .)
    and             reduce using rule 52 (E -> E caret E .)
    dospuntos       reduce using rule 52 (E -> E caret E .)
    error           reduce using rule 52 (E -> E caret E .)
    id              reduce using rule 52 (E -> E caret E .)
    function        reduce using rule 52 (E -> E caret E .)
    struct          reduce using rule 52 (E -> E caret E .)
    mutable         reduce using rule 52 (E -> E caret E .)
    if              reduce using rule 52 (E -> E caret E .)
    while           reduce using rule 52 (E -> E caret E .)
    for             reduce using rule 52 (E -> E caret E .)
    break           reduce using rule 52 (E -> E caret E .)
    continue        reduce using rule 52 (E -> E caret E .)
    return          reduce using rule 52 (E -> E caret E .)
    local           reduce using rule 52 (E -> E caret E .)
    global          reduce using rule 52 (E -> E caret E .)
    puntoycoma      reduce using rule 52 (E -> E caret E .)
    tipo            reduce using rule 52 (E -> E caret E .)
    parentesis_B    reduce using rule 52 (E -> E caret E .)
    coma            reduce using rule 52 (E -> E caret E .)
    corchete_B      reduce using rule 52 (E -> E caret E .)
    caret           shift and go to state 88

  ! caret           [ reduce using rule 52 (E -> E caret E .) ]
  ! mas             [ shift and go to state 84 ]
  ! menos           [ shift and go to state 85 ]
  ! asterisco       [ shift and go to state 86 ]
  ! barra           [ shift and go to state 87 ]
  ! modulo          [ shift and go to state 89 ]
  ! mayor           [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! mayor_igual     [ shift and go to state 92 ]
  ! menor_igual     [ shift and go to state 93 ]
  ! igualacion      [ shift and go to state 94 ]
  ! diferenciacion  [ shift and go to state 95 ]
  ! or              [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! dospuntos       [ shift and go to state 98 ]


state 134

    (53) E -> E modulo E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    mas             reduce using rule 53 (E -> E modulo E .)
    menos           reduce using rule 53 (E -> E modulo E .)
    asterisco       reduce using rule 53 (E -> E modulo E .)
    barra           reduce using rule 53 (E -> E modulo E .)
    modulo          reduce using rule 53 (E -> E modulo E .)
    mayor           reduce using rule 53 (E -> E modulo E .)
    menor           reduce using rule 53 (E -> E modulo E .)
    mayor_igual     reduce using rule 53 (E -> E modulo E .)
    menor_igual     reduce using rule 53 (E -> E modulo E .)
    igualacion      reduce using rule 53 (E -> E modulo E .)
    diferenciacion  reduce using rule 53 (E -> E modulo E .)
    or              reduce using rule 53 (E -> E modulo E .)
    and             reduce using rule 53 (E -> E modulo E .)
    dospuntos       reduce using rule 53 (E -> E modulo E .)
    error           reduce using rule 53 (E -> E modulo E .)
    id              reduce using rule 53 (E -> E modulo E .)
    function        reduce using rule 53 (E -> E modulo E .)
    struct          reduce using rule 53 (E -> E modulo E .)
    mutable         reduce using rule 53 (E -> E modulo E .)
    if              reduce using rule 53 (E -> E modulo E .)
    while           reduce using rule 53 (E -> E modulo E .)
    for             reduce using rule 53 (E -> E modulo E .)
    break           reduce using rule 53 (E -> E modulo E .)
    continue        reduce using rule 53 (E -> E modulo E .)
    return          reduce using rule 53 (E -> E modulo E .)
    local           reduce using rule 53 (E -> E modulo E .)
    global          reduce using rule 53 (E -> E modulo E .)
    puntoycoma      reduce using rule 53 (E -> E modulo E .)
    tipo            reduce using rule 53 (E -> E modulo E .)
    parentesis_B    reduce using rule 53 (E -> E modulo E .)
    coma            reduce using rule 53 (E -> E modulo E .)
    corchete_B      reduce using rule 53 (E -> E modulo E .)
    caret           shift and go to state 88

  ! caret           [ reduce using rule 53 (E -> E modulo E .) ]
  ! mas             [ shift and go to state 84 ]
  ! menos           [ shift and go to state 85 ]
  ! asterisco       [ shift and go to state 86 ]
  ! barra           [ shift and go to state 87 ]
  ! modulo          [ shift and go to state 89 ]
  ! mayor           [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! mayor_igual     [ shift and go to state 92 ]
  ! menor_igual     [ shift and go to state 93 ]
  ! igualacion      [ shift and go to state 94 ]
  ! diferenciacion  [ shift and go to state 95 ]
  ! or              [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! dospuntos       [ shift and go to state 98 ]


state 135

    (55) E -> E mayor E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    mayor           reduce using rule 55 (E -> E mayor E .)
    menor           reduce using rule 55 (E -> E mayor E .)
    mayor_igual     reduce using rule 55 (E -> E mayor E .)
    menor_igual     reduce using rule 55 (E -> E mayor E .)
    igualacion      reduce using rule 55 (E -> E mayor E .)
    diferenciacion  reduce using rule 55 (E -> E mayor E .)
    or              reduce using rule 55 (E -> E mayor E .)
    and             reduce using rule 55 (E -> E mayor E .)
    dospuntos       reduce using rule 55 (E -> E mayor E .)
    error           reduce using rule 55 (E -> E mayor E .)
    id              reduce using rule 55 (E -> E mayor E .)
    function        reduce using rule 55 (E -> E mayor E .)
    struct          reduce using rule 55 (E -> E mayor E .)
    mutable         reduce using rule 55 (E -> E mayor E .)
    if              reduce using rule 55 (E -> E mayor E .)
    while           reduce using rule 55 (E -> E mayor E .)
    for             reduce using rule 55 (E -> E mayor E .)
    break           reduce using rule 55 (E -> E mayor E .)
    continue        reduce using rule 55 (E -> E mayor E .)
    return          reduce using rule 55 (E -> E mayor E .)
    local           reduce using rule 55 (E -> E mayor E .)
    global          reduce using rule 55 (E -> E mayor E .)
    puntoycoma      reduce using rule 55 (E -> E mayor E .)
    tipo            reduce using rule 55 (E -> E mayor E .)
    parentesis_B    reduce using rule 55 (E -> E mayor E .)
    coma            reduce using rule 55 (E -> E mayor E .)
    corchete_B      reduce using rule 55 (E -> E mayor E .)
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89

  ! mas             [ reduce using rule 55 (E -> E mayor E .) ]
  ! menos           [ reduce using rule 55 (E -> E mayor E .) ]
  ! asterisco       [ reduce using rule 55 (E -> E mayor E .) ]
  ! barra           [ reduce using rule 55 (E -> E mayor E .) ]
  ! caret           [ reduce using rule 55 (E -> E mayor E .) ]
  ! modulo          [ reduce using rule 55 (E -> E mayor E .) ]
  ! mayor           [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! mayor_igual     [ shift and go to state 92 ]
  ! menor_igual     [ shift and go to state 93 ]
  ! igualacion      [ shift and go to state 94 ]
  ! diferenciacion  [ shift and go to state 95 ]
  ! or              [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! dospuntos       [ shift and go to state 98 ]


state 136

    (56) E -> E menor E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    mayor           reduce using rule 56 (E -> E menor E .)
    menor           reduce using rule 56 (E -> E menor E .)
    mayor_igual     reduce using rule 56 (E -> E menor E .)
    menor_igual     reduce using rule 56 (E -> E menor E .)
    igualacion      reduce using rule 56 (E -> E menor E .)
    diferenciacion  reduce using rule 56 (E -> E menor E .)
    or              reduce using rule 56 (E -> E menor E .)
    and             reduce using rule 56 (E -> E menor E .)
    dospuntos       reduce using rule 56 (E -> E menor E .)
    error           reduce using rule 56 (E -> E menor E .)
    id              reduce using rule 56 (E -> E menor E .)
    function        reduce using rule 56 (E -> E menor E .)
    struct          reduce using rule 56 (E -> E menor E .)
    mutable         reduce using rule 56 (E -> E menor E .)
    if              reduce using rule 56 (E -> E menor E .)
    while           reduce using rule 56 (E -> E menor E .)
    for             reduce using rule 56 (E -> E menor E .)
    break           reduce using rule 56 (E -> E menor E .)
    continue        reduce using rule 56 (E -> E menor E .)
    return          reduce using rule 56 (E -> E menor E .)
    local           reduce using rule 56 (E -> E menor E .)
    global          reduce using rule 56 (E -> E menor E .)
    puntoycoma      reduce using rule 56 (E -> E menor E .)
    tipo            reduce using rule 56 (E -> E menor E .)
    parentesis_B    reduce using rule 56 (E -> E menor E .)
    coma            reduce using rule 56 (E -> E menor E .)
    corchete_B      reduce using rule 56 (E -> E menor E .)
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89

  ! mas             [ reduce using rule 56 (E -> E menor E .) ]
  ! menos           [ reduce using rule 56 (E -> E menor E .) ]
  ! asterisco       [ reduce using rule 56 (E -> E menor E .) ]
  ! barra           [ reduce using rule 56 (E -> E menor E .) ]
  ! caret           [ reduce using rule 56 (E -> E menor E .) ]
  ! modulo          [ reduce using rule 56 (E -> E menor E .) ]
  ! mayor           [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! mayor_igual     [ shift and go to state 92 ]
  ! menor_igual     [ shift and go to state 93 ]
  ! igualacion      [ shift and go to state 94 ]
  ! diferenciacion  [ shift and go to state 95 ]
  ! or              [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! dospuntos       [ shift and go to state 98 ]


state 137

    (57) E -> E mayor_igual E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    mayor           reduce using rule 57 (E -> E mayor_igual E .)
    menor           reduce using rule 57 (E -> E mayor_igual E .)
    mayor_igual     reduce using rule 57 (E -> E mayor_igual E .)
    menor_igual     reduce using rule 57 (E -> E mayor_igual E .)
    igualacion      reduce using rule 57 (E -> E mayor_igual E .)
    diferenciacion  reduce using rule 57 (E -> E mayor_igual E .)
    or              reduce using rule 57 (E -> E mayor_igual E .)
    and             reduce using rule 57 (E -> E mayor_igual E .)
    dospuntos       reduce using rule 57 (E -> E mayor_igual E .)
    error           reduce using rule 57 (E -> E mayor_igual E .)
    id              reduce using rule 57 (E -> E mayor_igual E .)
    function        reduce using rule 57 (E -> E mayor_igual E .)
    struct          reduce using rule 57 (E -> E mayor_igual E .)
    mutable         reduce using rule 57 (E -> E mayor_igual E .)
    if              reduce using rule 57 (E -> E mayor_igual E .)
    while           reduce using rule 57 (E -> E mayor_igual E .)
    for             reduce using rule 57 (E -> E mayor_igual E .)
    break           reduce using rule 57 (E -> E mayor_igual E .)
    continue        reduce using rule 57 (E -> E mayor_igual E .)
    return          reduce using rule 57 (E -> E mayor_igual E .)
    local           reduce using rule 57 (E -> E mayor_igual E .)
    global          reduce using rule 57 (E -> E mayor_igual E .)
    puntoycoma      reduce using rule 57 (E -> E mayor_igual E .)
    tipo            reduce using rule 57 (E -> E mayor_igual E .)
    parentesis_B    reduce using rule 57 (E -> E mayor_igual E .)
    coma            reduce using rule 57 (E -> E mayor_igual E .)
    corchete_B      reduce using rule 57 (E -> E mayor_igual E .)
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89

  ! mas             [ reduce using rule 57 (E -> E mayor_igual E .) ]
  ! menos           [ reduce using rule 57 (E -> E mayor_igual E .) ]
  ! asterisco       [ reduce using rule 57 (E -> E mayor_igual E .) ]
  ! barra           [ reduce using rule 57 (E -> E mayor_igual E .) ]
  ! caret           [ reduce using rule 57 (E -> E mayor_igual E .) ]
  ! modulo          [ reduce using rule 57 (E -> E mayor_igual E .) ]
  ! mayor           [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! mayor_igual     [ shift and go to state 92 ]
  ! menor_igual     [ shift and go to state 93 ]
  ! igualacion      [ shift and go to state 94 ]
  ! diferenciacion  [ shift and go to state 95 ]
  ! or              [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! dospuntos       [ shift and go to state 98 ]


state 138

    (58) E -> E menor_igual E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    mayor           reduce using rule 58 (E -> E menor_igual E .)
    menor           reduce using rule 58 (E -> E menor_igual E .)
    mayor_igual     reduce using rule 58 (E -> E menor_igual E .)
    menor_igual     reduce using rule 58 (E -> E menor_igual E .)
    igualacion      reduce using rule 58 (E -> E menor_igual E .)
    diferenciacion  reduce using rule 58 (E -> E menor_igual E .)
    or              reduce using rule 58 (E -> E menor_igual E .)
    and             reduce using rule 58 (E -> E menor_igual E .)
    dospuntos       reduce using rule 58 (E -> E menor_igual E .)
    error           reduce using rule 58 (E -> E menor_igual E .)
    id              reduce using rule 58 (E -> E menor_igual E .)
    function        reduce using rule 58 (E -> E menor_igual E .)
    struct          reduce using rule 58 (E -> E menor_igual E .)
    mutable         reduce using rule 58 (E -> E menor_igual E .)
    if              reduce using rule 58 (E -> E menor_igual E .)
    while           reduce using rule 58 (E -> E menor_igual E .)
    for             reduce using rule 58 (E -> E menor_igual E .)
    break           reduce using rule 58 (E -> E menor_igual E .)
    continue        reduce using rule 58 (E -> E menor_igual E .)
    return          reduce using rule 58 (E -> E menor_igual E .)
    local           reduce using rule 58 (E -> E menor_igual E .)
    global          reduce using rule 58 (E -> E menor_igual E .)
    puntoycoma      reduce using rule 58 (E -> E menor_igual E .)
    tipo            reduce using rule 58 (E -> E menor_igual E .)
    parentesis_B    reduce using rule 58 (E -> E menor_igual E .)
    coma            reduce using rule 58 (E -> E menor_igual E .)
    corchete_B      reduce using rule 58 (E -> E menor_igual E .)
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89

  ! mas             [ reduce using rule 58 (E -> E menor_igual E .) ]
  ! menos           [ reduce using rule 58 (E -> E menor_igual E .) ]
  ! asterisco       [ reduce using rule 58 (E -> E menor_igual E .) ]
  ! barra           [ reduce using rule 58 (E -> E menor_igual E .) ]
  ! caret           [ reduce using rule 58 (E -> E menor_igual E .) ]
  ! modulo          [ reduce using rule 58 (E -> E menor_igual E .) ]
  ! mayor           [ shift and go to state 90 ]
  ! menor           [ shift and go to state 91 ]
  ! mayor_igual     [ shift and go to state 92 ]
  ! menor_igual     [ shift and go to state 93 ]
  ! igualacion      [ shift and go to state 94 ]
  ! diferenciacion  [ shift and go to state 95 ]
  ! or              [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! dospuntos       [ shift and go to state 98 ]


state 139

    (59) E -> E igualacion E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    igualacion      reduce using rule 59 (E -> E igualacion E .)
    diferenciacion  reduce using rule 59 (E -> E igualacion E .)
    or              reduce using rule 59 (E -> E igualacion E .)
    and             reduce using rule 59 (E -> E igualacion E .)
    dospuntos       reduce using rule 59 (E -> E igualacion E .)
    error           reduce using rule 59 (E -> E igualacion E .)
    id              reduce using rule 59 (E -> E igualacion E .)
    function        reduce using rule 59 (E -> E igualacion E .)
    struct          reduce using rule 59 (E -> E igualacion E .)
    mutable         reduce using rule 59 (E -> E igualacion E .)
    if              reduce using rule 59 (E -> E igualacion E .)
    while           reduce using rule 59 (E -> E igualacion E .)
    for             reduce using rule 59 (E -> E igualacion E .)
    break           reduce using rule 59 (E -> E igualacion E .)
    continue        reduce using rule 59 (E -> E igualacion E .)
    return          reduce using rule 59 (E -> E igualacion E .)
    local           reduce using rule 59 (E -> E igualacion E .)
    global          reduce using rule 59 (E -> E igualacion E .)
    puntoycoma      reduce using rule 59 (E -> E igualacion E .)
    tipo            reduce using rule 59 (E -> E igualacion E .)
    parentesis_B    reduce using rule 59 (E -> E igualacion E .)
    coma            reduce using rule 59 (E -> E igualacion E .)
    corchete_B      reduce using rule 59 (E -> E igualacion E .)
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93

  ! mas             [ reduce using rule 59 (E -> E igualacion E .) ]
  ! menos           [ reduce using rule 59 (E -> E igualacion E .) ]
  ! asterisco       [ reduce using rule 59 (E -> E igualacion E .) ]
  ! barra           [ reduce using rule 59 (E -> E igualacion E .) ]
  ! caret           [ reduce using rule 59 (E -> E igualacion E .) ]
  ! modulo          [ reduce using rule 59 (E -> E igualacion E .) ]
  ! mayor           [ reduce using rule 59 (E -> E igualacion E .) ]
  ! menor           [ reduce using rule 59 (E -> E igualacion E .) ]
  ! mayor_igual     [ reduce using rule 59 (E -> E igualacion E .) ]
  ! menor_igual     [ reduce using rule 59 (E -> E igualacion E .) ]
  ! igualacion      [ shift and go to state 94 ]
  ! diferenciacion  [ shift and go to state 95 ]
  ! or              [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! dospuntos       [ shift and go to state 98 ]


state 140

    (60) E -> E diferenciacion E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    igualacion      reduce using rule 60 (E -> E diferenciacion E .)
    diferenciacion  reduce using rule 60 (E -> E diferenciacion E .)
    or              reduce using rule 60 (E -> E diferenciacion E .)
    and             reduce using rule 60 (E -> E diferenciacion E .)
    dospuntos       reduce using rule 60 (E -> E diferenciacion E .)
    error           reduce using rule 60 (E -> E diferenciacion E .)
    id              reduce using rule 60 (E -> E diferenciacion E .)
    function        reduce using rule 60 (E -> E diferenciacion E .)
    struct          reduce using rule 60 (E -> E diferenciacion E .)
    mutable         reduce using rule 60 (E -> E diferenciacion E .)
    if              reduce using rule 60 (E -> E diferenciacion E .)
    while           reduce using rule 60 (E -> E diferenciacion E .)
    for             reduce using rule 60 (E -> E diferenciacion E .)
    break           reduce using rule 60 (E -> E diferenciacion E .)
    continue        reduce using rule 60 (E -> E diferenciacion E .)
    return          reduce using rule 60 (E -> E diferenciacion E .)
    local           reduce using rule 60 (E -> E diferenciacion E .)
    global          reduce using rule 60 (E -> E diferenciacion E .)
    puntoycoma      reduce using rule 60 (E -> E diferenciacion E .)
    tipo            reduce using rule 60 (E -> E diferenciacion E .)
    parentesis_B    reduce using rule 60 (E -> E diferenciacion E .)
    coma            reduce using rule 60 (E -> E diferenciacion E .)
    corchete_B      reduce using rule 60 (E -> E diferenciacion E .)
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93

  ! mas             [ reduce using rule 60 (E -> E diferenciacion E .) ]
  ! menos           [ reduce using rule 60 (E -> E diferenciacion E .) ]
  ! asterisco       [ reduce using rule 60 (E -> E diferenciacion E .) ]
  ! barra           [ reduce using rule 60 (E -> E diferenciacion E .) ]
  ! caret           [ reduce using rule 60 (E -> E diferenciacion E .) ]
  ! modulo          [ reduce using rule 60 (E -> E diferenciacion E .) ]
  ! mayor           [ reduce using rule 60 (E -> E diferenciacion E .) ]
  ! menor           [ reduce using rule 60 (E -> E diferenciacion E .) ]
  ! mayor_igual     [ reduce using rule 60 (E -> E diferenciacion E .) ]
  ! menor_igual     [ reduce using rule 60 (E -> E diferenciacion E .) ]
  ! igualacion      [ shift and go to state 94 ]
  ! diferenciacion  [ shift and go to state 95 ]
  ! or              [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! dospuntos       [ shift and go to state 98 ]


state 141

    (61) E -> E or E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    or              reduce using rule 61 (E -> E or E .)
    dospuntos       reduce using rule 61 (E -> E or E .)
    error           reduce using rule 61 (E -> E or E .)
    id              reduce using rule 61 (E -> E or E .)
    function        reduce using rule 61 (E -> E or E .)
    struct          reduce using rule 61 (E -> E or E .)
    mutable         reduce using rule 61 (E -> E or E .)
    if              reduce using rule 61 (E -> E or E .)
    while           reduce using rule 61 (E -> E or E .)
    for             reduce using rule 61 (E -> E or E .)
    break           reduce using rule 61 (E -> E or E .)
    continue        reduce using rule 61 (E -> E or E .)
    return          reduce using rule 61 (E -> E or E .)
    local           reduce using rule 61 (E -> E or E .)
    global          reduce using rule 61 (E -> E or E .)
    puntoycoma      reduce using rule 61 (E -> E or E .)
    tipo            reduce using rule 61 (E -> E or E .)
    parentesis_B    reduce using rule 61 (E -> E or E .)
    coma            reduce using rule 61 (E -> E or E .)
    corchete_B      reduce using rule 61 (E -> E or E .)
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    and             shift and go to state 97

  ! mas             [ reduce using rule 61 (E -> E or E .) ]
  ! menos           [ reduce using rule 61 (E -> E or E .) ]
  ! asterisco       [ reduce using rule 61 (E -> E or E .) ]
  ! barra           [ reduce using rule 61 (E -> E or E .) ]
  ! caret           [ reduce using rule 61 (E -> E or E .) ]
  ! modulo          [ reduce using rule 61 (E -> E or E .) ]
  ! mayor           [ reduce using rule 61 (E -> E or E .) ]
  ! menor           [ reduce using rule 61 (E -> E or E .) ]
  ! mayor_igual     [ reduce using rule 61 (E -> E or E .) ]
  ! menor_igual     [ reduce using rule 61 (E -> E or E .) ]
  ! igualacion      [ reduce using rule 61 (E -> E or E .) ]
  ! diferenciacion  [ reduce using rule 61 (E -> E or E .) ]
  ! and             [ reduce using rule 61 (E -> E or E .) ]
  ! or              [ shift and go to state 96 ]
  ! dospuntos       [ shift and go to state 98 ]


state 142

    (62) E -> E and E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    or              reduce using rule 62 (E -> E and E .)
    and             reduce using rule 62 (E -> E and E .)
    dospuntos       reduce using rule 62 (E -> E and E .)
    error           reduce using rule 62 (E -> E and E .)
    id              reduce using rule 62 (E -> E and E .)
    function        reduce using rule 62 (E -> E and E .)
    struct          reduce using rule 62 (E -> E and E .)
    mutable         reduce using rule 62 (E -> E and E .)
    if              reduce using rule 62 (E -> E and E .)
    while           reduce using rule 62 (E -> E and E .)
    for             reduce using rule 62 (E -> E and E .)
    break           reduce using rule 62 (E -> E and E .)
    continue        reduce using rule 62 (E -> E and E .)
    return          reduce using rule 62 (E -> E and E .)
    local           reduce using rule 62 (E -> E and E .)
    global          reduce using rule 62 (E -> E and E .)
    puntoycoma      reduce using rule 62 (E -> E and E .)
    tipo            reduce using rule 62 (E -> E and E .)
    parentesis_B    reduce using rule 62 (E -> E and E .)
    coma            reduce using rule 62 (E -> E and E .)
    corchete_B      reduce using rule 62 (E -> E and E .)
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95

  ! mas             [ reduce using rule 62 (E -> E and E .) ]
  ! menos           [ reduce using rule 62 (E -> E and E .) ]
  ! asterisco       [ reduce using rule 62 (E -> E and E .) ]
  ! barra           [ reduce using rule 62 (E -> E and E .) ]
  ! caret           [ reduce using rule 62 (E -> E and E .) ]
  ! modulo          [ reduce using rule 62 (E -> E and E .) ]
  ! mayor           [ reduce using rule 62 (E -> E and E .) ]
  ! menor           [ reduce using rule 62 (E -> E and E .) ]
  ! mayor_igual     [ reduce using rule 62 (E -> E and E .) ]
  ! menor_igual     [ reduce using rule 62 (E -> E and E .) ]
  ! igualacion      [ reduce using rule 62 (E -> E and E .) ]
  ! diferenciacion  [ reduce using rule 62 (E -> E and E .) ]
  ! or              [ shift and go to state 96 ]
  ! and             [ shift and go to state 97 ]
  ! dospuntos       [ shift and go to state 98 ]


state 143

    (92) RANGO -> E dospuntos E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for asterisco resolved as shift
  ! shift/reduce conflict for barra resolved as shift
  ! shift/reduce conflict for caret resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igualacion resolved as shift
  ! shift/reduce conflict for diferenciacion resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for dospuntos resolved as shift
    error           reduce using rule 92 (RANGO -> E dospuntos E .)
    id              reduce using rule 92 (RANGO -> E dospuntos E .)
    function        reduce using rule 92 (RANGO -> E dospuntos E .)
    struct          reduce using rule 92 (RANGO -> E dospuntos E .)
    mutable         reduce using rule 92 (RANGO -> E dospuntos E .)
    if              reduce using rule 92 (RANGO -> E dospuntos E .)
    while           reduce using rule 92 (RANGO -> E dospuntos E .)
    for             reduce using rule 92 (RANGO -> E dospuntos E .)
    break           reduce using rule 92 (RANGO -> E dospuntos E .)
    continue        reduce using rule 92 (RANGO -> E dospuntos E .)
    return          reduce using rule 92 (RANGO -> E dospuntos E .)
    local           reduce using rule 92 (RANGO -> E dospuntos E .)
    global          reduce using rule 92 (RANGO -> E dospuntos E .)
    puntoycoma      reduce using rule 92 (RANGO -> E dospuntos E .)
    tipo            reduce using rule 92 (RANGO -> E dospuntos E .)
    parentesis_B    reduce using rule 92 (RANGO -> E dospuntos E .)
    coma            reduce using rule 92 (RANGO -> E dospuntos E .)
    corchete_B      reduce using rule 92 (RANGO -> E dospuntos E .)
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    or              shift and go to state 96
    and             shift and go to state 97
    dospuntos       shift and go to state 98

  ! mas             [ reduce using rule 92 (RANGO -> E dospuntos E .) ]
  ! menos           [ reduce using rule 92 (RANGO -> E dospuntos E .) ]
  ! asterisco       [ reduce using rule 92 (RANGO -> E dospuntos E .) ]
  ! barra           [ reduce using rule 92 (RANGO -> E dospuntos E .) ]
  ! caret           [ reduce using rule 92 (RANGO -> E dospuntos E .) ]
  ! modulo          [ reduce using rule 92 (RANGO -> E dospuntos E .) ]
  ! mayor           [ reduce using rule 92 (RANGO -> E dospuntos E .) ]
  ! menor           [ reduce using rule 92 (RANGO -> E dospuntos E .) ]
  ! mayor_igual     [ reduce using rule 92 (RANGO -> E dospuntos E .) ]
  ! menor_igual     [ reduce using rule 92 (RANGO -> E dospuntos E .) ]
  ! igualacion      [ reduce using rule 92 (RANGO -> E dospuntos E .) ]
  ! diferenciacion  [ reduce using rule 92 (RANGO -> E dospuntos E .) ]
  ! or              [ reduce using rule 92 (RANGO -> E dospuntos E .) ]
  ! and             [ reduce using rule 92 (RANGO -> E dospuntos E .) ]
  ! dospuntos       [ reduce using rule 92 (RANGO -> E dospuntos E .) ]


state 144

    (17) BLOQUE -> INS end .

    puntoycoma      reduce using rule 17 (BLOQUE -> INS end .)


state 145

    (64) E -> parentesis_A E parentesis_B .

    mas             reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    menos           reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    asterisco       reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    barra           reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    caret           reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    modulo          reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    mayor           reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    menor           reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    mayor_igual     reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    menor_igual     reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    igualacion      reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    diferenciacion  reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    or              reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    and             reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    dospuntos       reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    error           reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    id              reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    function        reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    struct          reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    mutable         reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    if              reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    while           reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    for             reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    break           reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    continue        reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    return          reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    local           reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    global          reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    puntoycoma      reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    tipo            reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    parentesis_B    reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    coma            reduce using rule 64 (E -> parentesis_A E parentesis_B .)
    corchete_B      reduce using rule 64 (E -> parentesis_A E parentesis_B .)


state 146

    (80) ACCESO_ARREGLO -> id corchete_A E . corchete_B
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    corchete_B      shift and go to state 164
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    or              shift and go to state 96
    and             shift and go to state 97
    dospuntos       shift and go to state 98


state 147

    (76) ARREGLO -> corchete_A EXP corchete_B .

    mas             reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    menos           reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    asterisco       reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    barra           reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    caret           reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    modulo          reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    mayor           reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    menor           reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    mayor_igual     reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    menor_igual     reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    igualacion      reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    diferenciacion  reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    or              reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    and             reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    dospuntos       reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    error           reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    id              reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    function        reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    struct          reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    mutable         reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    if              reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    while           reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    for             reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    break           reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    continue        reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    return          reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    local           reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    global          reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    puntoycoma      reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    tipo            reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    parentesis_B    reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    coma            reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)
    corchete_B      reduce using rule 76 (ARREGLO -> corchete_A EXP corchete_B .)


state 148

    (91) FOR -> for id in E . BLOQUE
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E
    (17) BLOQUE -> . INS end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . ASIGNACION_STRUCT
    (7) I -> . ASIGNACION_ARRAY
    (8) I -> . FUNCION
    (9) I -> . STRUCT
    (10) I -> . LLAMADA
    (11) I -> . IF
    (12) I -> . WHILE
    (13) I -> . FOR
    (14) I -> . BREAK
    (15) I -> . CONTINUE
    (16) I -> . RETURN
    (26) ASIGNACION -> . id igual ASIGNACION_VALOR
    (27) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (28) ASIGNACION -> . SCOPE id
    (31) ASIGNACION_STRUCT -> . ID igual E
    (32) ASIGNACION_ARRAY -> . id IND igual E
    (35) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (36) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (40) STRUCT -> . struct id ATR end
    (41) STRUCT -> . mutable struct id ATR end
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (83) IF -> . if E BLOQUE
    (84) IF -> . if E BLOQUE_ABIERTO ELSE
    (85) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (90) WHILE -> . while E BLOQUE
    (91) FOR -> . for id in E BLOQUE
    (93) BREAK -> . break
    (94) CONTINUE -> . continue
    (95) RETURN -> . return E
    (96) RETURN -> . return
    (24) SCOPE -> . local
    (25) SCOPE -> . global
    (81) ID -> . ID punto id
    (82) ID -> . id

    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    or              shift and go to state 96
    and             shift and go to state 97
    dospuntos       shift and go to state 98
    error           shift and go to state 3
    id              shift and go to state 16
    function        shift and go to state 19
    struct          shift and go to state 20
    mutable         shift and go to state 21
    if              shift and go to state 22
    while           shift and go to state 23
    for             shift and go to state 24
    break           shift and go to state 25
    continue        shift and go to state 26
    return          shift and go to state 27
    local           shift and go to state 28
    global          shift and go to state 29

    BLOQUE                         shift and go to state 165
    INS                            shift and go to state 107
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    ASIGNACION_STRUCT              shift and go to state 5
    ASIGNACION_ARRAY               shift and go to state 6
    FUNCION                        shift and go to state 7
    STRUCT                         shift and go to state 8
    LLAMADA                        shift and go to state 9
    IF                             shift and go to state 10
    WHILE                          shift and go to state 11
    FOR                            shift and go to state 12
    BREAK                          shift and go to state 13
    CONTINUE                       shift and go to state 14
    RETURN                         shift and go to state 15
    SCOPE                          shift and go to state 17
    ID                             shift and go to state 18

state 149

    (30) ASIGNACION_VALOR -> E tipo TIPO .

    puntoycoma      reduce using rule 30 (ASIGNACION_VALOR -> E tipo TIPO .)


state 150

    (19) TIPO -> Int64 .

    puntoycoma      reduce using rule 19 (TIPO -> Int64 .)


state 151

    (20) TIPO -> Float64 .

    puntoycoma      reduce using rule 20 (TIPO -> Float64 .)


state 152

    (21) TIPO -> Bool .

    puntoycoma      reduce using rule 21 (TIPO -> Bool .)


state 153

    (22) TIPO -> Char .

    puntoycoma      reduce using rule 22 (TIPO -> Char .)


state 154

    (23) TIPO -> String .

    puntoycoma      reduce using rule 23 (TIPO -> String .)


state 155

    (33) IND -> IND corchete_A E corchete_B .

    igual           reduce using rule 33 (IND -> IND corchete_A E corchete_B .)
    corchete_A      reduce using rule 33 (IND -> IND corchete_A E corchete_B .)


state 156

    (46) EXP -> EXP coma E .
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E

    parentesis_B    reduce using rule 46 (EXP -> EXP coma E .)
    coma            reduce using rule 46 (EXP -> EXP coma E .)
    corchete_B      reduce using rule 46 (EXP -> EXP coma E .)
    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    or              shift and go to state 96
    and             shift and go to state 97
    dospuntos       shift and go to state 98


state 157

    (35) FUNCION -> function id parentesis_A PAR parentesis_B . BLOQUE
    (17) BLOQUE -> . INS end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . ASIGNACION_STRUCT
    (7) I -> . ASIGNACION_ARRAY
    (8) I -> . FUNCION
    (9) I -> . STRUCT
    (10) I -> . LLAMADA
    (11) I -> . IF
    (12) I -> . WHILE
    (13) I -> . FOR
    (14) I -> . BREAK
    (15) I -> . CONTINUE
    (16) I -> . RETURN
    (26) ASIGNACION -> . id igual ASIGNACION_VALOR
    (27) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (28) ASIGNACION -> . SCOPE id
    (31) ASIGNACION_STRUCT -> . ID igual E
    (32) ASIGNACION_ARRAY -> . id IND igual E
    (35) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (36) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (40) STRUCT -> . struct id ATR end
    (41) STRUCT -> . mutable struct id ATR end
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (83) IF -> . if E BLOQUE
    (84) IF -> . if E BLOQUE_ABIERTO ELSE
    (85) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (90) WHILE -> . while E BLOQUE
    (91) FOR -> . for id in E BLOQUE
    (93) BREAK -> . break
    (94) CONTINUE -> . continue
    (95) RETURN -> . return E
    (96) RETURN -> . return
    (24) SCOPE -> . local
    (25) SCOPE -> . global
    (81) ID -> . ID punto id
    (82) ID -> . id

    error           shift and go to state 3
    id              shift and go to state 16
    function        shift and go to state 19
    struct          shift and go to state 20
    mutable         shift and go to state 21
    if              shift and go to state 22
    while           shift and go to state 23
    for             shift and go to state 24
    break           shift and go to state 25
    continue        shift and go to state 26
    return          shift and go to state 27
    local           shift and go to state 28
    global          shift and go to state 29

    BLOQUE                         shift and go to state 166
    INS                            shift and go to state 107
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    ASIGNACION_STRUCT              shift and go to state 5
    ASIGNACION_ARRAY               shift and go to state 6
    FUNCION                        shift and go to state 7
    STRUCT                         shift and go to state 8
    LLAMADA                        shift and go to state 9
    IF                             shift and go to state 10
    WHILE                          shift and go to state 11
    FOR                            shift and go to state 12
    BREAK                          shift and go to state 13
    CONTINUE                       shift and go to state 14
    RETURN                         shift and go to state 15
    SCOPE                          shift and go to state 17
    ID                             shift and go to state 18

state 158

    (37) PAR -> PAR coma . P
    (39) P -> . id

    id              shift and go to state 116

    P                              shift and go to state 167

state 159

    (36) FUNCION -> function id parentesis_A parentesis_B BLOQUE .

    puntoycoma      reduce using rule 36 (FUNCION -> function id parentesis_A parentesis_B BLOQUE .)


state 160

    (44) A -> id tipo TIPO . puntoycoma

    puntoycoma      shift and go to state 168


state 161

    (41) STRUCT -> mutable struct id ATR end .

    puntoycoma      reduce using rule 41 (STRUCT -> mutable struct id ATR end .)


state 162

    (89) ELSE -> else BLOQUE .

    puntoycoma      reduce using rule 89 (ELSE -> else BLOQUE .)


state 163

    (86) ELSEIF -> elseif E . BLOQUE
    (87) ELSEIF -> elseif E . BLOQUE_ABIERTO ELSEIF
    (88) ELSEIF -> elseif E . BLOQUE_ABIERTO ELSE
    (48) E -> E . mas E
    (49) E -> E . menos E
    (50) E -> E . asterisco E
    (51) E -> E . barra E
    (52) E -> E . caret E
    (53) E -> E . modulo E
    (55) E -> E . mayor E
    (56) E -> E . menor E
    (57) E -> E . mayor_igual E
    (58) E -> E . menor_igual E
    (59) E -> E . igualacion E
    (60) E -> E . diferenciacion E
    (61) E -> E . or E
    (62) E -> E . and E
    (92) RANGO -> E . dospuntos E
    (17) BLOQUE -> . INS end
    (18) BLOQUE_ABIERTO -> . INS
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . ASIGNACION_STRUCT
    (7) I -> . ASIGNACION_ARRAY
    (8) I -> . FUNCION
    (9) I -> . STRUCT
    (10) I -> . LLAMADA
    (11) I -> . IF
    (12) I -> . WHILE
    (13) I -> . FOR
    (14) I -> . BREAK
    (15) I -> . CONTINUE
    (16) I -> . RETURN
    (26) ASIGNACION -> . id igual ASIGNACION_VALOR
    (27) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (28) ASIGNACION -> . SCOPE id
    (31) ASIGNACION_STRUCT -> . ID igual E
    (32) ASIGNACION_ARRAY -> . id IND igual E
    (35) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (36) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (40) STRUCT -> . struct id ATR end
    (41) STRUCT -> . mutable struct id ATR end
    (78) LLAMADA -> . id parentesis_A EXP parentesis_B
    (79) LLAMADA -> . id parentesis_A parentesis_B
    (83) IF -> . if E BLOQUE
    (84) IF -> . if E BLOQUE_ABIERTO ELSE
    (85) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (90) WHILE -> . while E BLOQUE
    (91) FOR -> . for id in E BLOQUE
    (93) BREAK -> . break
    (94) CONTINUE -> . continue
    (95) RETURN -> . return E
    (96) RETURN -> . return
    (24) SCOPE -> . local
    (25) SCOPE -> . global
    (81) ID -> . ID punto id
    (82) ID -> . id

    mas             shift and go to state 84
    menos           shift and go to state 85
    asterisco       shift and go to state 86
    barra           shift and go to state 87
    caret           shift and go to state 88
    modulo          shift and go to state 89
    mayor           shift and go to state 90
    menor           shift and go to state 91
    mayor_igual     shift and go to state 92
    menor_igual     shift and go to state 93
    igualacion      shift and go to state 94
    diferenciacion  shift and go to state 95
    or              shift and go to state 96
    and             shift and go to state 97
    dospuntos       shift and go to state 98
    error           shift and go to state 3
    id              shift and go to state 16
    function        shift and go to state 19
    struct          shift and go to state 20
    mutable         shift and go to state 21
    if              shift and go to state 22
    while           shift and go to state 23
    for             shift and go to state 24
    break           shift and go to state 25
    continue        shift and go to state 26
    return          shift and go to state 27
    local           shift and go to state 28
    global          shift and go to state 29

    BLOQUE                         shift and go to state 169
    BLOQUE_ABIERTO                 shift and go to state 170
    INS                            shift and go to state 99
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    ASIGNACION_STRUCT              shift and go to state 5
    ASIGNACION_ARRAY               shift and go to state 6
    FUNCION                        shift and go to state 7
    STRUCT                         shift and go to state 8
    LLAMADA                        shift and go to state 9
    IF                             shift and go to state 10
    WHILE                          shift and go to state 11
    FOR                            shift and go to state 12
    BREAK                          shift and go to state 13
    CONTINUE                       shift and go to state 14
    RETURN                         shift and go to state 15
    SCOPE                          shift and go to state 17
    ID                             shift and go to state 18

state 164

    (80) ACCESO_ARREGLO -> id corchete_A E corchete_B .

    mas             reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    menos           reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    asterisco       reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    barra           reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    caret           reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    modulo          reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    mayor           reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    menor           reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    mayor_igual     reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    menor_igual     reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    igualacion      reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    diferenciacion  reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    or              reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    and             reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    dospuntos       reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    error           reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    id              reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    function        reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    struct          reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    mutable         reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    if              reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    while           reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    for             reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    break           reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    continue        reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    return          reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    local           reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    global          reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    puntoycoma      reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    tipo            reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    parentesis_B    reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    coma            reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    corchete_B      reduce using rule 80 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)


state 165

    (91) FOR -> for id in E BLOQUE .

    puntoycoma      reduce using rule 91 (FOR -> for id in E BLOQUE .)


state 166

    (35) FUNCION -> function id parentesis_A PAR parentesis_B BLOQUE .

    puntoycoma      reduce using rule 35 (FUNCION -> function id parentesis_A PAR parentesis_B BLOQUE .)


state 167

    (37) PAR -> PAR coma P .

    parentesis_B    reduce using rule 37 (PAR -> PAR coma P .)
    coma            reduce using rule 37 (PAR -> PAR coma P .)


state 168

    (44) A -> id tipo TIPO puntoycoma .

    end             reduce using rule 44 (A -> id tipo TIPO puntoycoma .)
    id              reduce using rule 44 (A -> id tipo TIPO puntoycoma .)


state 169

    (86) ELSEIF -> elseif E BLOQUE .

    puntoycoma      reduce using rule 86 (ELSEIF -> elseif E BLOQUE .)


state 170

    (87) ELSEIF -> elseif E BLOQUE_ABIERTO . ELSEIF
    (88) ELSEIF -> elseif E BLOQUE_ABIERTO . ELSE
    (86) ELSEIF -> . elseif E BLOQUE
    (87) ELSEIF -> . elseif E BLOQUE_ABIERTO ELSEIF
    (88) ELSEIF -> . elseif E BLOQUE_ABIERTO ELSE
    (89) ELSE -> . else BLOQUE

    elseif          shift and go to state 128
    else            shift and go to state 127

    ELSEIF                         shift and go to state 171
    ELSE                           shift and go to state 172

state 171

    (87) ELSEIF -> elseif E BLOQUE_ABIERTO ELSEIF .

    puntoycoma      reduce using rule 87 (ELSEIF -> elseif E BLOQUE_ABIERTO ELSEIF .)


state 172

    (88) ELSEIF -> elseif E BLOQUE_ABIERTO ELSE .

    puntoycoma      reduce using rule 88 (ELSEIF -> elseif E BLOQUE_ABIERTO ELSE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for igual in state 16 resolved as shift
WARNING: shift/reduce conflict for mas in state 143 resolved as shift
WARNING: shift/reduce conflict for menos in state 143 resolved as shift
WARNING: shift/reduce conflict for asterisco in state 143 resolved as shift
WARNING: shift/reduce conflict for barra in state 143 resolved as shift
WARNING: shift/reduce conflict for caret in state 143 resolved as shift
WARNING: shift/reduce conflict for modulo in state 143 resolved as shift
WARNING: shift/reduce conflict for mayor in state 143 resolved as shift
WARNING: shift/reduce conflict for menor in state 143 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 143 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 143 resolved as shift
WARNING: shift/reduce conflict for igualacion in state 143 resolved as shift
WARNING: shift/reduce conflict for diferenciacion in state 143 resolved as shift
WARNING: shift/reduce conflict for or in state 143 resolved as shift
WARNING: shift/reduce conflict for and in state 143 resolved as shift
WARNING: shift/reduce conflict for dospuntos in state 143 resolved as shift
