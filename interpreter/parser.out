Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> INS
Rule 1     INS -> INS I puntoycoma
Rule 2     INS -> I puntoycoma
Rule 3     I -> ASIGNACION
Rule 4     I -> FUNCION
Rule 5     I -> STRUCT
Rule 6     I -> LLAMADA
Rule 7     I -> IF
Rule 8     I -> WHILE
Rule 9     I -> FOR
Rule 10    I -> BREAK
Rule 11    I -> CONTINUE
Rule 12    I -> RETURN
Rule 13    I -> error puntoycoma
Rule 14    BLOQUE -> INS end
Rule 15    BLOQUE -> end
Rule 16    TIPO -> tipo_int64
Rule 17    TIPO -> tipo_float64
Rule 18    TIPO -> tipo_bool
Rule 19    TIPO -> tipo_char
Rule 20    TIPO -> tipo_string
Rule 21    ASIGNACION -> ID igual ASIGNACION_VALOR
Rule 22    ASIGNACION -> global id igual ASIGNACION_VALOR
Rule 23    ASIGNACION -> global id
Rule 24    ASIGNACION -> local id igual ASIGNACION_VALOR
Rule 25    ASIGNACION -> local id
Rule 26    ASIGNACION_VALOR -> E
Rule 27    ASIGNACION_VALOR -> E tipo TIPO
Rule 28    FUNCION -> function id parentesis_A PAR parentesis_B BLOQUE
Rule 29    FUNCION -> function id parentesis_A parentesis_B BLOQUE
Rule 30    PAR -> PAR coma P
Rule 31    PAR -> P
Rule 32    P -> id
Rule 33    STRUCT -> struct id ATR end
Rule 34    STRUCT -> mutable struct id ATR end
Rule 35    ATR -> ATR A
Rule 36    ATR -> A
Rule 37    A -> id tipo TIPO puntoycoma
Rule 38    A -> id puntoycoma
Rule 39    EXP -> EXP coma E
Rule 40    EXP -> E
Rule 41    E -> E mas E
Rule 42    E -> E menos E
Rule 43    E -> E asterisco E
Rule 44    E -> E barra E
Rule 45    E -> E caret E
Rule 46    E -> E modulo E
Rule 47    E -> menos E
Rule 48    E -> E mayor E
Rule 49    E -> E menor E
Rule 50    E -> E mayor_igual E
Rule 51    E -> E menor_igual E
Rule 52    E -> E igualacion E
Rule 53    E -> E diferenciacion E
Rule 54    E -> E or E
Rule 55    E -> E and E
Rule 56    E -> not E
Rule 57    E -> parentesis_A E parentesis_B
Rule 58    E -> LLAMADA
Rule 59    E -> ACCESO_ARREGLO
Rule 60    E -> ARREGLO
Rule 61    E -> ID
Rule 62    E -> int64
Rule 63    E -> float64
Rule 64    E -> bool
Rule 65    E -> char
Rule 66    E -> string
Rule 67    E -> nothing
Rule 68    ARREGLO -> corchete_A EXP corchete_B
Rule 69    ARREGLO -> corchete_A corchete_B
Rule 70    LLAMADA -> id parentesis_A EXP parentesis_B
Rule 71    LLAMADA -> id parentesis_A parentesis_B
Rule 72    ACCESO_ARREGLO -> id corchete_A E corchete_B
Rule 73    ID -> ID punto id
Rule 74    ID -> id
Rule 75    IF -> if E BLOQUE
Rule 76    IF -> if E BLOQUE ELSEIF
Rule 77    IF -> if E BLOQUE ELSE
Rule 78    ELSEIF -> elseif E BLOQUE
Rule 79    ELSEIF -> elseif E BLOQUE ELSEIF
Rule 80    ELSEIF -> elseif E BLOQUE ELSE
Rule 81    ELSE -> else BLOQUE
Rule 82    WHILE -> while E BLOQUE
Rule 83    FOR -> for id in E BLOQUE
Rule 84    FOR -> for id in RANGO BLOQUE
Rule 85    RANGO -> E dospuntos E
Rule 86    BREAK -> break
Rule 87    CONTINUE -> continue
Rule 88    RETURN -> return E
Rule 89    RETURN -> return

Terminals, with rules where they appear

and                  : 55
asterisco            : 43
barra                : 44
bool                 : 64
break                : 86
caret                : 45
char                 : 65
coma                 : 30 39
continue             : 87
corchete_A           : 68 69 72
corchete_B           : 68 69 72
diferenciacion       : 53
dospuntos            : 85
else                 : 81
elseif               : 78 79 80
end                  : 14 15 33 34
error                : 13
float64              : 63
for                  : 83 84
function             : 28 29
global               : 22 23
id                   : 22 23 24 25 28 29 32 33 34 37 38 70 71 72 73 74 83 84
if                   : 75 76 77
igual                : 21 22 24
igualacion           : 52
in                   : 83 84
int64                : 62
local                : 24 25
mas                  : 41
mayor                : 48
mayor_igual          : 50
menor                : 49
menor_igual          : 51
menos                : 42 47
modulo               : 46
mutable              : 34
not                  : 56
nothing              : 67
or                   : 54
parentesis_A         : 28 29 57 70 71
parentesis_B         : 28 29 57 70 71
punto                : 73
puntoycoma           : 1 2 13 37 38
return               : 88 89
string               : 66
struct               : 33 34
tipo                 : 27 37
tipo_bool            : 18
tipo_char            : 19
tipo_float64         : 17
tipo_int64           : 16
tipo_string          : 20
while                : 82

Nonterminals, with rules where they appear

A                    : 35 36
ACCESO_ARREGLO       : 59
ARREGLO              : 60
ASIGNACION           : 3
ASIGNACION_VALOR     : 21 22 24
ATR                  : 33 34 35
BLOQUE               : 28 29 75 76 77 78 79 80 81 82 83 84
BREAK                : 10
CONTINUE             : 11
E                    : 26 27 39 40 41 41 42 42 43 43 44 44 45 45 46 46 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 57 72 75 76 77 78 79 80 82 83 85 85 88
ELSE                 : 77 80
ELSEIF               : 76 79
EXP                  : 39 68 70
FOR                  : 9
FUNCION              : 4
I                    : 1 2
ID                   : 21 61 73
IF                   : 7
INS                  : 1 14 0
LLAMADA              : 6 58
P                    : 30 31
PAR                  : 28 30
RANGO                : 84
RETURN               : 12
STRUCT               : 5
TIPO                 : 27 37
WHILE                : 8

Parsing method: LALR

state 0

    (0) S' -> . INS
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) I -> . ASIGNACION
    (4) I -> . FUNCION
    (5) I -> . STRUCT
    (6) I -> . LLAMADA
    (7) I -> . IF
    (8) I -> . WHILE
    (9) I -> . FOR
    (10) I -> . BREAK
    (11) I -> . CONTINUE
    (12) I -> . RETURN
    (13) I -> . error puntoycoma
    (21) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (22) ASIGNACION -> . global id igual ASIGNACION_VALOR
    (23) ASIGNACION -> . global id
    (24) ASIGNACION -> . local id igual ASIGNACION_VALOR
    (25) ASIGNACION -> . local id
    (28) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (29) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (33) STRUCT -> . struct id ATR end
    (34) STRUCT -> . mutable struct id ATR end
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (75) IF -> . if E BLOQUE
    (76) IF -> . if E BLOQUE ELSEIF
    (77) IF -> . if E BLOQUE ELSE
    (82) WHILE -> . while E BLOQUE
    (83) FOR -> . for id in E BLOQUE
    (84) FOR -> . for id in RANGO BLOQUE
    (86) BREAK -> . break
    (87) CONTINUE -> . continue
    (88) RETURN -> . return E
    (89) RETURN -> . return
    (73) ID -> . ID punto id
    (74) ID -> . id

    error           shift and go to state 13
    global          shift and go to state 15
    local           shift and go to state 17
    function        shift and go to state 18
    struct          shift and go to state 19
    mutable         shift and go to state 20
    id              shift and go to state 16
    if              shift and go to state 21
    while           shift and go to state 22
    for             shift and go to state 23
    break           shift and go to state 24
    continue        shift and go to state 25
    return          shift and go to state 26

    INS                            shift and go to state 1
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 3
    FUNCION                        shift and go to state 4
    STRUCT                         shift and go to state 5
    LLAMADA                        shift and go to state 6
    IF                             shift and go to state 7
    WHILE                          shift and go to state 8
    FOR                            shift and go to state 9
    BREAK                          shift and go to state 10
    CONTINUE                       shift and go to state 11
    RETURN                         shift and go to state 12
    ID                             shift and go to state 14

state 1

    (0) S' -> INS .
    (1) INS -> INS . I puntoycoma
    (3) I -> . ASIGNACION
    (4) I -> . FUNCION
    (5) I -> . STRUCT
    (6) I -> . LLAMADA
    (7) I -> . IF
    (8) I -> . WHILE
    (9) I -> . FOR
    (10) I -> . BREAK
    (11) I -> . CONTINUE
    (12) I -> . RETURN
    (13) I -> . error puntoycoma
    (21) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (22) ASIGNACION -> . global id igual ASIGNACION_VALOR
    (23) ASIGNACION -> . global id
    (24) ASIGNACION -> . local id igual ASIGNACION_VALOR
    (25) ASIGNACION -> . local id
    (28) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (29) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (33) STRUCT -> . struct id ATR end
    (34) STRUCT -> . mutable struct id ATR end
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (75) IF -> . if E BLOQUE
    (76) IF -> . if E BLOQUE ELSEIF
    (77) IF -> . if E BLOQUE ELSE
    (82) WHILE -> . while E BLOQUE
    (83) FOR -> . for id in E BLOQUE
    (84) FOR -> . for id in RANGO BLOQUE
    (86) BREAK -> . break
    (87) CONTINUE -> . continue
    (88) RETURN -> . return E
    (89) RETURN -> . return
    (73) ID -> . ID punto id
    (74) ID -> . id

    error           shift and go to state 13
    global          shift and go to state 15
    local           shift and go to state 17
    function        shift and go to state 18
    struct          shift and go to state 19
    mutable         shift and go to state 20
    id              shift and go to state 16
    if              shift and go to state 21
    while           shift and go to state 22
    for             shift and go to state 23
    break           shift and go to state 24
    continue        shift and go to state 25
    return          shift and go to state 26

    I                              shift and go to state 27
    ASIGNACION                     shift and go to state 3
    FUNCION                        shift and go to state 4
    STRUCT                         shift and go to state 5
    LLAMADA                        shift and go to state 6
    IF                             shift and go to state 7
    WHILE                          shift and go to state 8
    FOR                            shift and go to state 9
    BREAK                          shift and go to state 10
    CONTINUE                       shift and go to state 11
    RETURN                         shift and go to state 12
    ID                             shift and go to state 14

state 2

    (2) INS -> I . puntoycoma

    puntoycoma      shift and go to state 28


state 3

    (3) I -> ASIGNACION .

    puntoycoma      reduce using rule 3 (I -> ASIGNACION .)


state 4

    (4) I -> FUNCION .

    puntoycoma      reduce using rule 4 (I -> FUNCION .)


state 5

    (5) I -> STRUCT .

    puntoycoma      reduce using rule 5 (I -> STRUCT .)


state 6

    (6) I -> LLAMADA .

    puntoycoma      reduce using rule 6 (I -> LLAMADA .)


state 7

    (7) I -> IF .

    puntoycoma      reduce using rule 7 (I -> IF .)


state 8

    (8) I -> WHILE .

    puntoycoma      reduce using rule 8 (I -> WHILE .)


state 9

    (9) I -> FOR .

    puntoycoma      reduce using rule 9 (I -> FOR .)


state 10

    (10) I -> BREAK .

    puntoycoma      reduce using rule 10 (I -> BREAK .)


state 11

    (11) I -> CONTINUE .

    puntoycoma      reduce using rule 11 (I -> CONTINUE .)


state 12

    (12) I -> RETURN .

    puntoycoma      reduce using rule 12 (I -> RETURN .)


state 13

    (13) I -> error . puntoycoma

    puntoycoma      shift and go to state 29


state 14

    (21) ASIGNACION -> ID . igual ASIGNACION_VALOR
    (73) ID -> ID . punto id

    igual           shift and go to state 30
    punto           shift and go to state 31


state 15

    (22) ASIGNACION -> global . id igual ASIGNACION_VALOR
    (23) ASIGNACION -> global . id

    id              shift and go to state 32


state 16

    (70) LLAMADA -> id . parentesis_A EXP parentesis_B
    (71) LLAMADA -> id . parentesis_A parentesis_B
    (74) ID -> id .

    parentesis_A    shift and go to state 33
    igual           reduce using rule 74 (ID -> id .)
    punto           reduce using rule 74 (ID -> id .)


state 17

    (24) ASIGNACION -> local . id igual ASIGNACION_VALOR
    (25) ASIGNACION -> local . id

    id              shift and go to state 34


state 18

    (28) FUNCION -> function . id parentesis_A PAR parentesis_B BLOQUE
    (29) FUNCION -> function . id parentesis_A parentesis_B BLOQUE

    id              shift and go to state 35


state 19

    (33) STRUCT -> struct . id ATR end

    id              shift and go to state 36


state 20

    (34) STRUCT -> mutable . struct id ATR end

    struct          shift and go to state 37


state 21

    (75) IF -> if . E BLOQUE
    (76) IF -> if . E BLOQUE ELSEIF
    (77) IF -> if . E BLOQUE ELSE
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 38
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 22

    (82) WHILE -> while . E BLOQUE
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 54
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 23

    (83) FOR -> for . id in E BLOQUE
    (84) FOR -> for . id in RANGO BLOQUE

    id              shift and go to state 55


state 24

    (86) BREAK -> break .

    puntoycoma      reduce using rule 86 (BREAK -> break .)


state 25

    (87) CONTINUE -> continue .

    puntoycoma      reduce using rule 87 (CONTINUE -> continue .)


state 26

    (88) RETURN -> return . E
    (89) RETURN -> return .
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    puntoycoma      reduce using rule 89 (RETURN -> return .)
    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 56
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 27

    (1) INS -> INS I . puntoycoma

    puntoycoma      shift and go to state 57


state 28

    (2) INS -> I puntoycoma .

    error           reduce using rule 2 (INS -> I puntoycoma .)
    global          reduce using rule 2 (INS -> I puntoycoma .)
    local           reduce using rule 2 (INS -> I puntoycoma .)
    function        reduce using rule 2 (INS -> I puntoycoma .)
    struct          reduce using rule 2 (INS -> I puntoycoma .)
    mutable         reduce using rule 2 (INS -> I puntoycoma .)
    id              reduce using rule 2 (INS -> I puntoycoma .)
    if              reduce using rule 2 (INS -> I puntoycoma .)
    while           reduce using rule 2 (INS -> I puntoycoma .)
    for             reduce using rule 2 (INS -> I puntoycoma .)
    break           reduce using rule 2 (INS -> I puntoycoma .)
    continue        reduce using rule 2 (INS -> I puntoycoma .)
    return          reduce using rule 2 (INS -> I puntoycoma .)
    $end            reduce using rule 2 (INS -> I puntoycoma .)
    end             reduce using rule 2 (INS -> I puntoycoma .)


state 29

    (13) I -> error puntoycoma .

    puntoycoma      reduce using rule 13 (I -> error puntoycoma .)


state 30

    (21) ASIGNACION -> ID igual . ASIGNACION_VALOR
    (26) ASIGNACION_VALOR -> . E
    (27) ASIGNACION_VALOR -> . E tipo TIPO
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    ID                             shift and go to state 45
    ASIGNACION_VALOR               shift and go to state 58
    E                              shift and go to state 59
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44

state 31

    (73) ID -> ID punto . id

    id              shift and go to state 60


state 32

    (22) ASIGNACION -> global id . igual ASIGNACION_VALOR
    (23) ASIGNACION -> global id .

    igual           shift and go to state 61
    puntoycoma      reduce using rule 23 (ASIGNACION -> global id .)


state 33

    (70) LLAMADA -> id parentesis_A . EXP parentesis_B
    (71) LLAMADA -> id parentesis_A . parentesis_B
    (39) EXP -> . EXP coma E
    (40) EXP -> . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    parentesis_B    shift and go to state 63
    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    EXP                            shift and go to state 62
    E                              shift and go to state 64
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 34

    (24) ASIGNACION -> local id . igual ASIGNACION_VALOR
    (25) ASIGNACION -> local id .

    igual           shift and go to state 65
    puntoycoma      reduce using rule 25 (ASIGNACION -> local id .)


state 35

    (28) FUNCION -> function id . parentesis_A PAR parentesis_B BLOQUE
    (29) FUNCION -> function id . parentesis_A parentesis_B BLOQUE

    parentesis_A    shift and go to state 66


state 36

    (33) STRUCT -> struct id . ATR end
    (35) ATR -> . ATR A
    (36) ATR -> . A
    (37) A -> . id tipo TIPO puntoycoma
    (38) A -> . id puntoycoma

    id              shift and go to state 67

    ATR                            shift and go to state 68
    A                              shift and go to state 69

state 37

    (34) STRUCT -> mutable struct . id ATR end

    id              shift and go to state 70


state 38

    (75) IF -> if E . BLOQUE
    (76) IF -> if E . BLOQUE ELSEIF
    (77) IF -> if E . BLOQUE ELSE
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E
    (14) BLOQUE -> . INS end
    (15) BLOQUE -> . end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) I -> . ASIGNACION
    (4) I -> . FUNCION
    (5) I -> . STRUCT
    (6) I -> . LLAMADA
    (7) I -> . IF
    (8) I -> . WHILE
    (9) I -> . FOR
    (10) I -> . BREAK
    (11) I -> . CONTINUE
    (12) I -> . RETURN
    (13) I -> . error puntoycoma
    (21) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (22) ASIGNACION -> . global id igual ASIGNACION_VALOR
    (23) ASIGNACION -> . global id
    (24) ASIGNACION -> . local id igual ASIGNACION_VALOR
    (25) ASIGNACION -> . local id
    (28) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (29) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (33) STRUCT -> . struct id ATR end
    (34) STRUCT -> . mutable struct id ATR end
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (75) IF -> . if E BLOQUE
    (76) IF -> . if E BLOQUE ELSEIF
    (77) IF -> . if E BLOQUE ELSE
    (82) WHILE -> . while E BLOQUE
    (83) FOR -> . for id in E BLOQUE
    (84) FOR -> . for id in RANGO BLOQUE
    (86) BREAK -> . break
    (87) CONTINUE -> . continue
    (88) RETURN -> . return E
    (89) RETURN -> . return
    (73) ID -> . ID punto id
    (74) ID -> . id

    mas             shift and go to state 72
    menos           shift and go to state 73
    asterisco       shift and go to state 74
    barra           shift and go to state 75
    caret           shift and go to state 76
    modulo          shift and go to state 77
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85
    end             shift and go to state 87
    error           shift and go to state 13
    global          shift and go to state 15
    local           shift and go to state 17
    function        shift and go to state 18
    struct          shift and go to state 19
    mutable         shift and go to state 20
    id              shift and go to state 16
    if              shift and go to state 21
    while           shift and go to state 22
    for             shift and go to state 23
    break           shift and go to state 24
    continue        shift and go to state 25
    return          shift and go to state 26

    BLOQUE                         shift and go to state 71
    INS                            shift and go to state 86
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 3
    FUNCION                        shift and go to state 4
    STRUCT                         shift and go to state 5
    LLAMADA                        shift and go to state 6
    IF                             shift and go to state 7
    WHILE                          shift and go to state 8
    FOR                            shift and go to state 9
    BREAK                          shift and go to state 10
    CONTINUE                       shift and go to state 11
    RETURN                         shift and go to state 12
    ID                             shift and go to state 14

state 39

    (47) E -> menos . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 88
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 40

    (56) E -> not . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 89
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 41

    (57) E -> parentesis_A . E parentesis_B
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 90
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 42

    (58) E -> LLAMADA .

    mas             reduce using rule 58 (E -> LLAMADA .)
    menos           reduce using rule 58 (E -> LLAMADA .)
    asterisco       reduce using rule 58 (E -> LLAMADA .)
    barra           reduce using rule 58 (E -> LLAMADA .)
    caret           reduce using rule 58 (E -> LLAMADA .)
    modulo          reduce using rule 58 (E -> LLAMADA .)
    mayor           reduce using rule 58 (E -> LLAMADA .)
    menor           reduce using rule 58 (E -> LLAMADA .)
    mayor_igual     reduce using rule 58 (E -> LLAMADA .)
    menor_igual     reduce using rule 58 (E -> LLAMADA .)
    igualacion      reduce using rule 58 (E -> LLAMADA .)
    diferenciacion  reduce using rule 58 (E -> LLAMADA .)
    or              reduce using rule 58 (E -> LLAMADA .)
    and             reduce using rule 58 (E -> LLAMADA .)
    end             reduce using rule 58 (E -> LLAMADA .)
    error           reduce using rule 58 (E -> LLAMADA .)
    global          reduce using rule 58 (E -> LLAMADA .)
    local           reduce using rule 58 (E -> LLAMADA .)
    function        reduce using rule 58 (E -> LLAMADA .)
    struct          reduce using rule 58 (E -> LLAMADA .)
    mutable         reduce using rule 58 (E -> LLAMADA .)
    id              reduce using rule 58 (E -> LLAMADA .)
    if              reduce using rule 58 (E -> LLAMADA .)
    while           reduce using rule 58 (E -> LLAMADA .)
    for             reduce using rule 58 (E -> LLAMADA .)
    break           reduce using rule 58 (E -> LLAMADA .)
    continue        reduce using rule 58 (E -> LLAMADA .)
    return          reduce using rule 58 (E -> LLAMADA .)
    puntoycoma      reduce using rule 58 (E -> LLAMADA .)
    tipo            reduce using rule 58 (E -> LLAMADA .)
    parentesis_B    reduce using rule 58 (E -> LLAMADA .)
    coma            reduce using rule 58 (E -> LLAMADA .)
    corchete_B      reduce using rule 58 (E -> LLAMADA .)
    dospuntos       reduce using rule 58 (E -> LLAMADA .)


state 43

    (59) E -> ACCESO_ARREGLO .

    mas             reduce using rule 59 (E -> ACCESO_ARREGLO .)
    menos           reduce using rule 59 (E -> ACCESO_ARREGLO .)
    asterisco       reduce using rule 59 (E -> ACCESO_ARREGLO .)
    barra           reduce using rule 59 (E -> ACCESO_ARREGLO .)
    caret           reduce using rule 59 (E -> ACCESO_ARREGLO .)
    modulo          reduce using rule 59 (E -> ACCESO_ARREGLO .)
    mayor           reduce using rule 59 (E -> ACCESO_ARREGLO .)
    menor           reduce using rule 59 (E -> ACCESO_ARREGLO .)
    mayor_igual     reduce using rule 59 (E -> ACCESO_ARREGLO .)
    menor_igual     reduce using rule 59 (E -> ACCESO_ARREGLO .)
    igualacion      reduce using rule 59 (E -> ACCESO_ARREGLO .)
    diferenciacion  reduce using rule 59 (E -> ACCESO_ARREGLO .)
    or              reduce using rule 59 (E -> ACCESO_ARREGLO .)
    and             reduce using rule 59 (E -> ACCESO_ARREGLO .)
    end             reduce using rule 59 (E -> ACCESO_ARREGLO .)
    error           reduce using rule 59 (E -> ACCESO_ARREGLO .)
    global          reduce using rule 59 (E -> ACCESO_ARREGLO .)
    local           reduce using rule 59 (E -> ACCESO_ARREGLO .)
    function        reduce using rule 59 (E -> ACCESO_ARREGLO .)
    struct          reduce using rule 59 (E -> ACCESO_ARREGLO .)
    mutable         reduce using rule 59 (E -> ACCESO_ARREGLO .)
    id              reduce using rule 59 (E -> ACCESO_ARREGLO .)
    if              reduce using rule 59 (E -> ACCESO_ARREGLO .)
    while           reduce using rule 59 (E -> ACCESO_ARREGLO .)
    for             reduce using rule 59 (E -> ACCESO_ARREGLO .)
    break           reduce using rule 59 (E -> ACCESO_ARREGLO .)
    continue        reduce using rule 59 (E -> ACCESO_ARREGLO .)
    return          reduce using rule 59 (E -> ACCESO_ARREGLO .)
    puntoycoma      reduce using rule 59 (E -> ACCESO_ARREGLO .)
    tipo            reduce using rule 59 (E -> ACCESO_ARREGLO .)
    parentesis_B    reduce using rule 59 (E -> ACCESO_ARREGLO .)
    coma            reduce using rule 59 (E -> ACCESO_ARREGLO .)
    corchete_B      reduce using rule 59 (E -> ACCESO_ARREGLO .)
    dospuntos       reduce using rule 59 (E -> ACCESO_ARREGLO .)


state 44

    (60) E -> ARREGLO .

    mas             reduce using rule 60 (E -> ARREGLO .)
    menos           reduce using rule 60 (E -> ARREGLO .)
    asterisco       reduce using rule 60 (E -> ARREGLO .)
    barra           reduce using rule 60 (E -> ARREGLO .)
    caret           reduce using rule 60 (E -> ARREGLO .)
    modulo          reduce using rule 60 (E -> ARREGLO .)
    mayor           reduce using rule 60 (E -> ARREGLO .)
    menor           reduce using rule 60 (E -> ARREGLO .)
    mayor_igual     reduce using rule 60 (E -> ARREGLO .)
    menor_igual     reduce using rule 60 (E -> ARREGLO .)
    igualacion      reduce using rule 60 (E -> ARREGLO .)
    diferenciacion  reduce using rule 60 (E -> ARREGLO .)
    or              reduce using rule 60 (E -> ARREGLO .)
    and             reduce using rule 60 (E -> ARREGLO .)
    end             reduce using rule 60 (E -> ARREGLO .)
    error           reduce using rule 60 (E -> ARREGLO .)
    global          reduce using rule 60 (E -> ARREGLO .)
    local           reduce using rule 60 (E -> ARREGLO .)
    function        reduce using rule 60 (E -> ARREGLO .)
    struct          reduce using rule 60 (E -> ARREGLO .)
    mutable         reduce using rule 60 (E -> ARREGLO .)
    id              reduce using rule 60 (E -> ARREGLO .)
    if              reduce using rule 60 (E -> ARREGLO .)
    while           reduce using rule 60 (E -> ARREGLO .)
    for             reduce using rule 60 (E -> ARREGLO .)
    break           reduce using rule 60 (E -> ARREGLO .)
    continue        reduce using rule 60 (E -> ARREGLO .)
    return          reduce using rule 60 (E -> ARREGLO .)
    puntoycoma      reduce using rule 60 (E -> ARREGLO .)
    tipo            reduce using rule 60 (E -> ARREGLO .)
    parentesis_B    reduce using rule 60 (E -> ARREGLO .)
    coma            reduce using rule 60 (E -> ARREGLO .)
    corchete_B      reduce using rule 60 (E -> ARREGLO .)
    dospuntos       reduce using rule 60 (E -> ARREGLO .)


state 45

    (61) E -> ID .
    (73) ID -> ID . punto id

    mas             reduce using rule 61 (E -> ID .)
    menos           reduce using rule 61 (E -> ID .)
    asterisco       reduce using rule 61 (E -> ID .)
    barra           reduce using rule 61 (E -> ID .)
    caret           reduce using rule 61 (E -> ID .)
    modulo          reduce using rule 61 (E -> ID .)
    mayor           reduce using rule 61 (E -> ID .)
    menor           reduce using rule 61 (E -> ID .)
    mayor_igual     reduce using rule 61 (E -> ID .)
    menor_igual     reduce using rule 61 (E -> ID .)
    igualacion      reduce using rule 61 (E -> ID .)
    diferenciacion  reduce using rule 61 (E -> ID .)
    or              reduce using rule 61 (E -> ID .)
    and             reduce using rule 61 (E -> ID .)
    end             reduce using rule 61 (E -> ID .)
    error           reduce using rule 61 (E -> ID .)
    global          reduce using rule 61 (E -> ID .)
    local           reduce using rule 61 (E -> ID .)
    function        reduce using rule 61 (E -> ID .)
    struct          reduce using rule 61 (E -> ID .)
    mutable         reduce using rule 61 (E -> ID .)
    id              reduce using rule 61 (E -> ID .)
    if              reduce using rule 61 (E -> ID .)
    while           reduce using rule 61 (E -> ID .)
    for             reduce using rule 61 (E -> ID .)
    break           reduce using rule 61 (E -> ID .)
    continue        reduce using rule 61 (E -> ID .)
    return          reduce using rule 61 (E -> ID .)
    puntoycoma      reduce using rule 61 (E -> ID .)
    tipo            reduce using rule 61 (E -> ID .)
    parentesis_B    reduce using rule 61 (E -> ID .)
    coma            reduce using rule 61 (E -> ID .)
    corchete_B      reduce using rule 61 (E -> ID .)
    dospuntos       reduce using rule 61 (E -> ID .)
    punto           shift and go to state 31


state 46

    (62) E -> int64 .

    mas             reduce using rule 62 (E -> int64 .)
    menos           reduce using rule 62 (E -> int64 .)
    asterisco       reduce using rule 62 (E -> int64 .)
    barra           reduce using rule 62 (E -> int64 .)
    caret           reduce using rule 62 (E -> int64 .)
    modulo          reduce using rule 62 (E -> int64 .)
    mayor           reduce using rule 62 (E -> int64 .)
    menor           reduce using rule 62 (E -> int64 .)
    mayor_igual     reduce using rule 62 (E -> int64 .)
    menor_igual     reduce using rule 62 (E -> int64 .)
    igualacion      reduce using rule 62 (E -> int64 .)
    diferenciacion  reduce using rule 62 (E -> int64 .)
    or              reduce using rule 62 (E -> int64 .)
    and             reduce using rule 62 (E -> int64 .)
    end             reduce using rule 62 (E -> int64 .)
    error           reduce using rule 62 (E -> int64 .)
    global          reduce using rule 62 (E -> int64 .)
    local           reduce using rule 62 (E -> int64 .)
    function        reduce using rule 62 (E -> int64 .)
    struct          reduce using rule 62 (E -> int64 .)
    mutable         reduce using rule 62 (E -> int64 .)
    id              reduce using rule 62 (E -> int64 .)
    if              reduce using rule 62 (E -> int64 .)
    while           reduce using rule 62 (E -> int64 .)
    for             reduce using rule 62 (E -> int64 .)
    break           reduce using rule 62 (E -> int64 .)
    continue        reduce using rule 62 (E -> int64 .)
    return          reduce using rule 62 (E -> int64 .)
    puntoycoma      reduce using rule 62 (E -> int64 .)
    tipo            reduce using rule 62 (E -> int64 .)
    parentesis_B    reduce using rule 62 (E -> int64 .)
    coma            reduce using rule 62 (E -> int64 .)
    corchete_B      reduce using rule 62 (E -> int64 .)
    dospuntos       reduce using rule 62 (E -> int64 .)


state 47

    (63) E -> float64 .

    mas             reduce using rule 63 (E -> float64 .)
    menos           reduce using rule 63 (E -> float64 .)
    asterisco       reduce using rule 63 (E -> float64 .)
    barra           reduce using rule 63 (E -> float64 .)
    caret           reduce using rule 63 (E -> float64 .)
    modulo          reduce using rule 63 (E -> float64 .)
    mayor           reduce using rule 63 (E -> float64 .)
    menor           reduce using rule 63 (E -> float64 .)
    mayor_igual     reduce using rule 63 (E -> float64 .)
    menor_igual     reduce using rule 63 (E -> float64 .)
    igualacion      reduce using rule 63 (E -> float64 .)
    diferenciacion  reduce using rule 63 (E -> float64 .)
    or              reduce using rule 63 (E -> float64 .)
    and             reduce using rule 63 (E -> float64 .)
    end             reduce using rule 63 (E -> float64 .)
    error           reduce using rule 63 (E -> float64 .)
    global          reduce using rule 63 (E -> float64 .)
    local           reduce using rule 63 (E -> float64 .)
    function        reduce using rule 63 (E -> float64 .)
    struct          reduce using rule 63 (E -> float64 .)
    mutable         reduce using rule 63 (E -> float64 .)
    id              reduce using rule 63 (E -> float64 .)
    if              reduce using rule 63 (E -> float64 .)
    while           reduce using rule 63 (E -> float64 .)
    for             reduce using rule 63 (E -> float64 .)
    break           reduce using rule 63 (E -> float64 .)
    continue        reduce using rule 63 (E -> float64 .)
    return          reduce using rule 63 (E -> float64 .)
    puntoycoma      reduce using rule 63 (E -> float64 .)
    tipo            reduce using rule 63 (E -> float64 .)
    parentesis_B    reduce using rule 63 (E -> float64 .)
    coma            reduce using rule 63 (E -> float64 .)
    corchete_B      reduce using rule 63 (E -> float64 .)
    dospuntos       reduce using rule 63 (E -> float64 .)


state 48

    (64) E -> bool .

    mas             reduce using rule 64 (E -> bool .)
    menos           reduce using rule 64 (E -> bool .)
    asterisco       reduce using rule 64 (E -> bool .)
    barra           reduce using rule 64 (E -> bool .)
    caret           reduce using rule 64 (E -> bool .)
    modulo          reduce using rule 64 (E -> bool .)
    mayor           reduce using rule 64 (E -> bool .)
    menor           reduce using rule 64 (E -> bool .)
    mayor_igual     reduce using rule 64 (E -> bool .)
    menor_igual     reduce using rule 64 (E -> bool .)
    igualacion      reduce using rule 64 (E -> bool .)
    diferenciacion  reduce using rule 64 (E -> bool .)
    or              reduce using rule 64 (E -> bool .)
    and             reduce using rule 64 (E -> bool .)
    end             reduce using rule 64 (E -> bool .)
    error           reduce using rule 64 (E -> bool .)
    global          reduce using rule 64 (E -> bool .)
    local           reduce using rule 64 (E -> bool .)
    function        reduce using rule 64 (E -> bool .)
    struct          reduce using rule 64 (E -> bool .)
    mutable         reduce using rule 64 (E -> bool .)
    id              reduce using rule 64 (E -> bool .)
    if              reduce using rule 64 (E -> bool .)
    while           reduce using rule 64 (E -> bool .)
    for             reduce using rule 64 (E -> bool .)
    break           reduce using rule 64 (E -> bool .)
    continue        reduce using rule 64 (E -> bool .)
    return          reduce using rule 64 (E -> bool .)
    puntoycoma      reduce using rule 64 (E -> bool .)
    tipo            reduce using rule 64 (E -> bool .)
    parentesis_B    reduce using rule 64 (E -> bool .)
    coma            reduce using rule 64 (E -> bool .)
    corchete_B      reduce using rule 64 (E -> bool .)
    dospuntos       reduce using rule 64 (E -> bool .)


state 49

    (65) E -> char .

    mas             reduce using rule 65 (E -> char .)
    menos           reduce using rule 65 (E -> char .)
    asterisco       reduce using rule 65 (E -> char .)
    barra           reduce using rule 65 (E -> char .)
    caret           reduce using rule 65 (E -> char .)
    modulo          reduce using rule 65 (E -> char .)
    mayor           reduce using rule 65 (E -> char .)
    menor           reduce using rule 65 (E -> char .)
    mayor_igual     reduce using rule 65 (E -> char .)
    menor_igual     reduce using rule 65 (E -> char .)
    igualacion      reduce using rule 65 (E -> char .)
    diferenciacion  reduce using rule 65 (E -> char .)
    or              reduce using rule 65 (E -> char .)
    and             reduce using rule 65 (E -> char .)
    end             reduce using rule 65 (E -> char .)
    error           reduce using rule 65 (E -> char .)
    global          reduce using rule 65 (E -> char .)
    local           reduce using rule 65 (E -> char .)
    function        reduce using rule 65 (E -> char .)
    struct          reduce using rule 65 (E -> char .)
    mutable         reduce using rule 65 (E -> char .)
    id              reduce using rule 65 (E -> char .)
    if              reduce using rule 65 (E -> char .)
    while           reduce using rule 65 (E -> char .)
    for             reduce using rule 65 (E -> char .)
    break           reduce using rule 65 (E -> char .)
    continue        reduce using rule 65 (E -> char .)
    return          reduce using rule 65 (E -> char .)
    puntoycoma      reduce using rule 65 (E -> char .)
    tipo            reduce using rule 65 (E -> char .)
    parentesis_B    reduce using rule 65 (E -> char .)
    coma            reduce using rule 65 (E -> char .)
    corchete_B      reduce using rule 65 (E -> char .)
    dospuntos       reduce using rule 65 (E -> char .)


state 50

    (66) E -> string .

    mas             reduce using rule 66 (E -> string .)
    menos           reduce using rule 66 (E -> string .)
    asterisco       reduce using rule 66 (E -> string .)
    barra           reduce using rule 66 (E -> string .)
    caret           reduce using rule 66 (E -> string .)
    modulo          reduce using rule 66 (E -> string .)
    mayor           reduce using rule 66 (E -> string .)
    menor           reduce using rule 66 (E -> string .)
    mayor_igual     reduce using rule 66 (E -> string .)
    menor_igual     reduce using rule 66 (E -> string .)
    igualacion      reduce using rule 66 (E -> string .)
    diferenciacion  reduce using rule 66 (E -> string .)
    or              reduce using rule 66 (E -> string .)
    and             reduce using rule 66 (E -> string .)
    end             reduce using rule 66 (E -> string .)
    error           reduce using rule 66 (E -> string .)
    global          reduce using rule 66 (E -> string .)
    local           reduce using rule 66 (E -> string .)
    function        reduce using rule 66 (E -> string .)
    struct          reduce using rule 66 (E -> string .)
    mutable         reduce using rule 66 (E -> string .)
    id              reduce using rule 66 (E -> string .)
    if              reduce using rule 66 (E -> string .)
    while           reduce using rule 66 (E -> string .)
    for             reduce using rule 66 (E -> string .)
    break           reduce using rule 66 (E -> string .)
    continue        reduce using rule 66 (E -> string .)
    return          reduce using rule 66 (E -> string .)
    puntoycoma      reduce using rule 66 (E -> string .)
    tipo            reduce using rule 66 (E -> string .)
    parentesis_B    reduce using rule 66 (E -> string .)
    coma            reduce using rule 66 (E -> string .)
    corchete_B      reduce using rule 66 (E -> string .)
    dospuntos       reduce using rule 66 (E -> string .)


state 51

    (67) E -> nothing .

    mas             reduce using rule 67 (E -> nothing .)
    menos           reduce using rule 67 (E -> nothing .)
    asterisco       reduce using rule 67 (E -> nothing .)
    barra           reduce using rule 67 (E -> nothing .)
    caret           reduce using rule 67 (E -> nothing .)
    modulo          reduce using rule 67 (E -> nothing .)
    mayor           reduce using rule 67 (E -> nothing .)
    menor           reduce using rule 67 (E -> nothing .)
    mayor_igual     reduce using rule 67 (E -> nothing .)
    menor_igual     reduce using rule 67 (E -> nothing .)
    igualacion      reduce using rule 67 (E -> nothing .)
    diferenciacion  reduce using rule 67 (E -> nothing .)
    or              reduce using rule 67 (E -> nothing .)
    and             reduce using rule 67 (E -> nothing .)
    end             reduce using rule 67 (E -> nothing .)
    error           reduce using rule 67 (E -> nothing .)
    global          reduce using rule 67 (E -> nothing .)
    local           reduce using rule 67 (E -> nothing .)
    function        reduce using rule 67 (E -> nothing .)
    struct          reduce using rule 67 (E -> nothing .)
    mutable         reduce using rule 67 (E -> nothing .)
    id              reduce using rule 67 (E -> nothing .)
    if              reduce using rule 67 (E -> nothing .)
    while           reduce using rule 67 (E -> nothing .)
    for             reduce using rule 67 (E -> nothing .)
    break           reduce using rule 67 (E -> nothing .)
    continue        reduce using rule 67 (E -> nothing .)
    return          reduce using rule 67 (E -> nothing .)
    puntoycoma      reduce using rule 67 (E -> nothing .)
    tipo            reduce using rule 67 (E -> nothing .)
    parentesis_B    reduce using rule 67 (E -> nothing .)
    coma            reduce using rule 67 (E -> nothing .)
    corchete_B      reduce using rule 67 (E -> nothing .)
    dospuntos       reduce using rule 67 (E -> nothing .)


state 52

    (70) LLAMADA -> id . parentesis_A EXP parentesis_B
    (71) LLAMADA -> id . parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> id . corchete_A E corchete_B
    (74) ID -> id .

    parentesis_A    shift and go to state 33
    corchete_A      shift and go to state 91
    punto           reduce using rule 74 (ID -> id .)
    mas             reduce using rule 74 (ID -> id .)
    menos           reduce using rule 74 (ID -> id .)
    asterisco       reduce using rule 74 (ID -> id .)
    barra           reduce using rule 74 (ID -> id .)
    caret           reduce using rule 74 (ID -> id .)
    modulo          reduce using rule 74 (ID -> id .)
    mayor           reduce using rule 74 (ID -> id .)
    menor           reduce using rule 74 (ID -> id .)
    mayor_igual     reduce using rule 74 (ID -> id .)
    menor_igual     reduce using rule 74 (ID -> id .)
    igualacion      reduce using rule 74 (ID -> id .)
    diferenciacion  reduce using rule 74 (ID -> id .)
    or              reduce using rule 74 (ID -> id .)
    and             reduce using rule 74 (ID -> id .)
    end             reduce using rule 74 (ID -> id .)
    error           reduce using rule 74 (ID -> id .)
    global          reduce using rule 74 (ID -> id .)
    local           reduce using rule 74 (ID -> id .)
    function        reduce using rule 74 (ID -> id .)
    struct          reduce using rule 74 (ID -> id .)
    mutable         reduce using rule 74 (ID -> id .)
    id              reduce using rule 74 (ID -> id .)
    if              reduce using rule 74 (ID -> id .)
    while           reduce using rule 74 (ID -> id .)
    for             reduce using rule 74 (ID -> id .)
    break           reduce using rule 74 (ID -> id .)
    continue        reduce using rule 74 (ID -> id .)
    return          reduce using rule 74 (ID -> id .)
    puntoycoma      reduce using rule 74 (ID -> id .)
    tipo            reduce using rule 74 (ID -> id .)
    parentesis_B    reduce using rule 74 (ID -> id .)
    coma            reduce using rule 74 (ID -> id .)
    corchete_B      reduce using rule 74 (ID -> id .)
    dospuntos       reduce using rule 74 (ID -> id .)


state 53

    (68) ARREGLO -> corchete_A . EXP corchete_B
    (69) ARREGLO -> corchete_A . corchete_B
    (39) EXP -> . EXP coma E
    (40) EXP -> . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    corchete_B      shift and go to state 93
    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    EXP                            shift and go to state 92
    E                              shift and go to state 64
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 54

    (82) WHILE -> while E . BLOQUE
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E
    (14) BLOQUE -> . INS end
    (15) BLOQUE -> . end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) I -> . ASIGNACION
    (4) I -> . FUNCION
    (5) I -> . STRUCT
    (6) I -> . LLAMADA
    (7) I -> . IF
    (8) I -> . WHILE
    (9) I -> . FOR
    (10) I -> . BREAK
    (11) I -> . CONTINUE
    (12) I -> . RETURN
    (13) I -> . error puntoycoma
    (21) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (22) ASIGNACION -> . global id igual ASIGNACION_VALOR
    (23) ASIGNACION -> . global id
    (24) ASIGNACION -> . local id igual ASIGNACION_VALOR
    (25) ASIGNACION -> . local id
    (28) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (29) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (33) STRUCT -> . struct id ATR end
    (34) STRUCT -> . mutable struct id ATR end
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (75) IF -> . if E BLOQUE
    (76) IF -> . if E BLOQUE ELSEIF
    (77) IF -> . if E BLOQUE ELSE
    (82) WHILE -> . while E BLOQUE
    (83) FOR -> . for id in E BLOQUE
    (84) FOR -> . for id in RANGO BLOQUE
    (86) BREAK -> . break
    (87) CONTINUE -> . continue
    (88) RETURN -> . return E
    (89) RETURN -> . return
    (73) ID -> . ID punto id
    (74) ID -> . id

    mas             shift and go to state 72
    menos           shift and go to state 73
    asterisco       shift and go to state 74
    barra           shift and go to state 75
    caret           shift and go to state 76
    modulo          shift and go to state 77
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85
    end             shift and go to state 87
    error           shift and go to state 13
    global          shift and go to state 15
    local           shift and go to state 17
    function        shift and go to state 18
    struct          shift and go to state 19
    mutable         shift and go to state 20
    id              shift and go to state 16
    if              shift and go to state 21
    while           shift and go to state 22
    for             shift and go to state 23
    break           shift and go to state 24
    continue        shift and go to state 25
    return          shift and go to state 26

    BLOQUE                         shift and go to state 94
    INS                            shift and go to state 86
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 3
    FUNCION                        shift and go to state 4
    STRUCT                         shift and go to state 5
    LLAMADA                        shift and go to state 6
    IF                             shift and go to state 7
    WHILE                          shift and go to state 8
    FOR                            shift and go to state 9
    BREAK                          shift and go to state 10
    CONTINUE                       shift and go to state 11
    RETURN                         shift and go to state 12
    ID                             shift and go to state 14

state 55

    (83) FOR -> for id . in E BLOQUE
    (84) FOR -> for id . in RANGO BLOQUE

    in              shift and go to state 95


state 56

    (88) RETURN -> return E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    puntoycoma      reduce using rule 88 (RETURN -> return E .)
    mas             shift and go to state 72
    menos           shift and go to state 73
    asterisco       shift and go to state 74
    barra           shift and go to state 75
    caret           shift and go to state 76
    modulo          shift and go to state 77
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85


state 57

    (1) INS -> INS I puntoycoma .

    error           reduce using rule 1 (INS -> INS I puntoycoma .)
    global          reduce using rule 1 (INS -> INS I puntoycoma .)
    local           reduce using rule 1 (INS -> INS I puntoycoma .)
    function        reduce using rule 1 (INS -> INS I puntoycoma .)
    struct          reduce using rule 1 (INS -> INS I puntoycoma .)
    mutable         reduce using rule 1 (INS -> INS I puntoycoma .)
    id              reduce using rule 1 (INS -> INS I puntoycoma .)
    if              reduce using rule 1 (INS -> INS I puntoycoma .)
    while           reduce using rule 1 (INS -> INS I puntoycoma .)
    for             reduce using rule 1 (INS -> INS I puntoycoma .)
    break           reduce using rule 1 (INS -> INS I puntoycoma .)
    continue        reduce using rule 1 (INS -> INS I puntoycoma .)
    return          reduce using rule 1 (INS -> INS I puntoycoma .)
    $end            reduce using rule 1 (INS -> INS I puntoycoma .)
    end             reduce using rule 1 (INS -> INS I puntoycoma .)


state 58

    (21) ASIGNACION -> ID igual ASIGNACION_VALOR .

    puntoycoma      reduce using rule 21 (ASIGNACION -> ID igual ASIGNACION_VALOR .)


state 59

    (26) ASIGNACION_VALOR -> E .
    (27) ASIGNACION_VALOR -> E . tipo TIPO
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    puntoycoma      reduce using rule 26 (ASIGNACION_VALOR -> E .)
    tipo            shift and go to state 96
    mas             shift and go to state 72
    menos           shift and go to state 73
    asterisco       shift and go to state 74
    barra           shift and go to state 75
    caret           shift and go to state 76
    modulo          shift and go to state 77
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85


state 60

    (73) ID -> ID punto id .

    igual           reduce using rule 73 (ID -> ID punto id .)
    punto           reduce using rule 73 (ID -> ID punto id .)
    mas             reduce using rule 73 (ID -> ID punto id .)
    menos           reduce using rule 73 (ID -> ID punto id .)
    asterisco       reduce using rule 73 (ID -> ID punto id .)
    barra           reduce using rule 73 (ID -> ID punto id .)
    caret           reduce using rule 73 (ID -> ID punto id .)
    modulo          reduce using rule 73 (ID -> ID punto id .)
    mayor           reduce using rule 73 (ID -> ID punto id .)
    menor           reduce using rule 73 (ID -> ID punto id .)
    mayor_igual     reduce using rule 73 (ID -> ID punto id .)
    menor_igual     reduce using rule 73 (ID -> ID punto id .)
    igualacion      reduce using rule 73 (ID -> ID punto id .)
    diferenciacion  reduce using rule 73 (ID -> ID punto id .)
    or              reduce using rule 73 (ID -> ID punto id .)
    and             reduce using rule 73 (ID -> ID punto id .)
    end             reduce using rule 73 (ID -> ID punto id .)
    error           reduce using rule 73 (ID -> ID punto id .)
    global          reduce using rule 73 (ID -> ID punto id .)
    local           reduce using rule 73 (ID -> ID punto id .)
    function        reduce using rule 73 (ID -> ID punto id .)
    struct          reduce using rule 73 (ID -> ID punto id .)
    mutable         reduce using rule 73 (ID -> ID punto id .)
    id              reduce using rule 73 (ID -> ID punto id .)
    if              reduce using rule 73 (ID -> ID punto id .)
    while           reduce using rule 73 (ID -> ID punto id .)
    for             reduce using rule 73 (ID -> ID punto id .)
    break           reduce using rule 73 (ID -> ID punto id .)
    continue        reduce using rule 73 (ID -> ID punto id .)
    return          reduce using rule 73 (ID -> ID punto id .)
    puntoycoma      reduce using rule 73 (ID -> ID punto id .)
    tipo            reduce using rule 73 (ID -> ID punto id .)
    parentesis_B    reduce using rule 73 (ID -> ID punto id .)
    coma            reduce using rule 73 (ID -> ID punto id .)
    corchete_B      reduce using rule 73 (ID -> ID punto id .)
    dospuntos       reduce using rule 73 (ID -> ID punto id .)


state 61

    (22) ASIGNACION -> global id igual . ASIGNACION_VALOR
    (26) ASIGNACION_VALOR -> . E
    (27) ASIGNACION_VALOR -> . E tipo TIPO
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    ASIGNACION_VALOR               shift and go to state 97
    E                              shift and go to state 59
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 62

    (70) LLAMADA -> id parentesis_A EXP . parentesis_B
    (39) EXP -> EXP . coma E

    parentesis_B    shift and go to state 98
    coma            shift and go to state 99


state 63

    (71) LLAMADA -> id parentesis_A parentesis_B .

    puntoycoma      reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    mas             reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    menos           reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    asterisco       reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    barra           reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    caret           reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    modulo          reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    mayor           reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    menor           reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    mayor_igual     reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    menor_igual     reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    igualacion      reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    diferenciacion  reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    or              reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    and             reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    end             reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    error           reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    global          reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    local           reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    function        reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    struct          reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    mutable         reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    id              reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    if              reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    while           reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    for             reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    break           reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    continue        reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    return          reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    tipo            reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    parentesis_B    reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    coma            reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    corchete_B      reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)
    dospuntos       reduce using rule 71 (LLAMADA -> id parentesis_A parentesis_B .)


state 64

    (40) EXP -> E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    parentesis_B    reduce using rule 40 (EXP -> E .)
    coma            reduce using rule 40 (EXP -> E .)
    corchete_B      reduce using rule 40 (EXP -> E .)
    mas             shift and go to state 72
    menos           shift and go to state 73
    asterisco       shift and go to state 74
    barra           shift and go to state 75
    caret           shift and go to state 76
    modulo          shift and go to state 77
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85


state 65

    (24) ASIGNACION -> local id igual . ASIGNACION_VALOR
    (26) ASIGNACION_VALOR -> . E
    (27) ASIGNACION_VALOR -> . E tipo TIPO
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    ASIGNACION_VALOR               shift and go to state 100
    E                              shift and go to state 59
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 66

    (28) FUNCION -> function id parentesis_A . PAR parentesis_B BLOQUE
    (29) FUNCION -> function id parentesis_A . parentesis_B BLOQUE
    (30) PAR -> . PAR coma P
    (31) PAR -> . P
    (32) P -> . id

    parentesis_B    shift and go to state 103
    id              shift and go to state 101

    PAR                            shift and go to state 102
    P                              shift and go to state 104

state 67

    (37) A -> id . tipo TIPO puntoycoma
    (38) A -> id . puntoycoma

    tipo            shift and go to state 105
    puntoycoma      shift and go to state 106


state 68

    (33) STRUCT -> struct id ATR . end
    (35) ATR -> ATR . A
    (37) A -> . id tipo TIPO puntoycoma
    (38) A -> . id puntoycoma

    end             shift and go to state 107
    id              shift and go to state 67

    A                              shift and go to state 108

state 69

    (36) ATR -> A .

    end             reduce using rule 36 (ATR -> A .)
    id              reduce using rule 36 (ATR -> A .)


state 70

    (34) STRUCT -> mutable struct id . ATR end
    (35) ATR -> . ATR A
    (36) ATR -> . A
    (37) A -> . id tipo TIPO puntoycoma
    (38) A -> . id puntoycoma

    id              shift and go to state 67

    ATR                            shift and go to state 109
    A                              shift and go to state 69

state 71

    (75) IF -> if E BLOQUE .
    (76) IF -> if E BLOQUE . ELSEIF
    (77) IF -> if E BLOQUE . ELSE
    (78) ELSEIF -> . elseif E BLOQUE
    (79) ELSEIF -> . elseif E BLOQUE ELSEIF
    (80) ELSEIF -> . elseif E BLOQUE ELSE
    (81) ELSE -> . else BLOQUE

    puntoycoma      reduce using rule 75 (IF -> if E BLOQUE .)
    elseif          shift and go to state 112
    else            shift and go to state 113

    ELSEIF                         shift and go to state 110
    ELSE                           shift and go to state 111

state 72

    (41) E -> E mas . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 114
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 73

    (42) E -> E menos . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 115
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 74

    (43) E -> E asterisco . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 116
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 75

    (44) E -> E barra . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 117
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 76

    (45) E -> E caret . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 118
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 77

    (46) E -> E modulo . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 119
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 78

    (48) E -> E mayor . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 120
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 79

    (49) E -> E menor . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 121
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 80

    (50) E -> E mayor_igual . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 122
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 81

    (51) E -> E menor_igual . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 123
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 82

    (52) E -> E igualacion . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 124
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 83

    (53) E -> E diferenciacion . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 125
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 84

    (54) E -> E or . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 126
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 85

    (55) E -> E and . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 127
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 86

    (14) BLOQUE -> INS . end
    (1) INS -> INS . I puntoycoma
    (3) I -> . ASIGNACION
    (4) I -> . FUNCION
    (5) I -> . STRUCT
    (6) I -> . LLAMADA
    (7) I -> . IF
    (8) I -> . WHILE
    (9) I -> . FOR
    (10) I -> . BREAK
    (11) I -> . CONTINUE
    (12) I -> . RETURN
    (13) I -> . error puntoycoma
    (21) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (22) ASIGNACION -> . global id igual ASIGNACION_VALOR
    (23) ASIGNACION -> . global id
    (24) ASIGNACION -> . local id igual ASIGNACION_VALOR
    (25) ASIGNACION -> . local id
    (28) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (29) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (33) STRUCT -> . struct id ATR end
    (34) STRUCT -> . mutable struct id ATR end
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (75) IF -> . if E BLOQUE
    (76) IF -> . if E BLOQUE ELSEIF
    (77) IF -> . if E BLOQUE ELSE
    (82) WHILE -> . while E BLOQUE
    (83) FOR -> . for id in E BLOQUE
    (84) FOR -> . for id in RANGO BLOQUE
    (86) BREAK -> . break
    (87) CONTINUE -> . continue
    (88) RETURN -> . return E
    (89) RETURN -> . return
    (73) ID -> . ID punto id
    (74) ID -> . id

    end             shift and go to state 128
    error           shift and go to state 13
    global          shift and go to state 15
    local           shift and go to state 17
    function        shift and go to state 18
    struct          shift and go to state 19
    mutable         shift and go to state 20
    id              shift and go to state 16
    if              shift and go to state 21
    while           shift and go to state 22
    for             shift and go to state 23
    break           shift and go to state 24
    continue        shift and go to state 25
    return          shift and go to state 26

    I                              shift and go to state 27
    ASIGNACION                     shift and go to state 3
    FUNCION                        shift and go to state 4
    STRUCT                         shift and go to state 5
    LLAMADA                        shift and go to state 6
    IF                             shift and go to state 7
    WHILE                          shift and go to state 8
    FOR                            shift and go to state 9
    BREAK                          shift and go to state 10
    CONTINUE                       shift and go to state 11
    RETURN                         shift and go to state 12
    ID                             shift and go to state 14

state 87

    (15) BLOQUE -> end .

    elseif          reduce using rule 15 (BLOQUE -> end .)
    else            reduce using rule 15 (BLOQUE -> end .)
    puntoycoma      reduce using rule 15 (BLOQUE -> end .)


state 88

    (47) E -> menos E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    end             reduce using rule 47 (E -> menos E .)
    error           reduce using rule 47 (E -> menos E .)
    global          reduce using rule 47 (E -> menos E .)
    local           reduce using rule 47 (E -> menos E .)
    function        reduce using rule 47 (E -> menos E .)
    struct          reduce using rule 47 (E -> menos E .)
    mutable         reduce using rule 47 (E -> menos E .)
    id              reduce using rule 47 (E -> menos E .)
    if              reduce using rule 47 (E -> menos E .)
    while           reduce using rule 47 (E -> menos E .)
    for             reduce using rule 47 (E -> menos E .)
    break           reduce using rule 47 (E -> menos E .)
    continue        reduce using rule 47 (E -> menos E .)
    return          reduce using rule 47 (E -> menos E .)
    puntoycoma      reduce using rule 47 (E -> menos E .)
    tipo            reduce using rule 47 (E -> menos E .)
    parentesis_B    reduce using rule 47 (E -> menos E .)
    coma            reduce using rule 47 (E -> menos E .)
    corchete_B      reduce using rule 47 (E -> menos E .)
    dospuntos       reduce using rule 47 (E -> menos E .)
    mas             shift and go to state 72
    menos           shift and go to state 73
    asterisco       shift and go to state 74
    barra           shift and go to state 75
    caret           shift and go to state 76
    modulo          shift and go to state 77
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85

  ! mas             [ reduce using rule 47 (E -> menos E .) ]
  ! menos           [ reduce using rule 47 (E -> menos E .) ]
  ! asterisco       [ reduce using rule 47 (E -> menos E .) ]
  ! barra           [ reduce using rule 47 (E -> menos E .) ]
  ! caret           [ reduce using rule 47 (E -> menos E .) ]
  ! modulo          [ reduce using rule 47 (E -> menos E .) ]
  ! mayor           [ reduce using rule 47 (E -> menos E .) ]
  ! menor           [ reduce using rule 47 (E -> menos E .) ]
  ! mayor_igual     [ reduce using rule 47 (E -> menos E .) ]
  ! menor_igual     [ reduce using rule 47 (E -> menos E .) ]
  ! igualacion      [ reduce using rule 47 (E -> menos E .) ]
  ! diferenciacion  [ reduce using rule 47 (E -> menos E .) ]
  ! or              [ reduce using rule 47 (E -> menos E .) ]
  ! and             [ reduce using rule 47 (E -> menos E .) ]


state 89

    (56) E -> not E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    end             reduce using rule 56 (E -> not E .)
    error           reduce using rule 56 (E -> not E .)
    global          reduce using rule 56 (E -> not E .)
    local           reduce using rule 56 (E -> not E .)
    function        reduce using rule 56 (E -> not E .)
    struct          reduce using rule 56 (E -> not E .)
    mutable         reduce using rule 56 (E -> not E .)
    id              reduce using rule 56 (E -> not E .)
    if              reduce using rule 56 (E -> not E .)
    while           reduce using rule 56 (E -> not E .)
    for             reduce using rule 56 (E -> not E .)
    break           reduce using rule 56 (E -> not E .)
    continue        reduce using rule 56 (E -> not E .)
    return          reduce using rule 56 (E -> not E .)
    puntoycoma      reduce using rule 56 (E -> not E .)
    tipo            reduce using rule 56 (E -> not E .)
    parentesis_B    reduce using rule 56 (E -> not E .)
    coma            reduce using rule 56 (E -> not E .)
    corchete_B      reduce using rule 56 (E -> not E .)
    dospuntos       reduce using rule 56 (E -> not E .)
    mas             shift and go to state 72
    menos           shift and go to state 73
    asterisco       shift and go to state 74
    barra           shift and go to state 75
    caret           shift and go to state 76
    modulo          shift and go to state 77
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85

  ! mas             [ reduce using rule 56 (E -> not E .) ]
  ! menos           [ reduce using rule 56 (E -> not E .) ]
  ! asterisco       [ reduce using rule 56 (E -> not E .) ]
  ! barra           [ reduce using rule 56 (E -> not E .) ]
  ! caret           [ reduce using rule 56 (E -> not E .) ]
  ! modulo          [ reduce using rule 56 (E -> not E .) ]
  ! mayor           [ reduce using rule 56 (E -> not E .) ]
  ! menor           [ reduce using rule 56 (E -> not E .) ]
  ! mayor_igual     [ reduce using rule 56 (E -> not E .) ]
  ! menor_igual     [ reduce using rule 56 (E -> not E .) ]
  ! igualacion      [ reduce using rule 56 (E -> not E .) ]
  ! diferenciacion  [ reduce using rule 56 (E -> not E .) ]
  ! or              [ reduce using rule 56 (E -> not E .) ]
  ! and             [ reduce using rule 56 (E -> not E .) ]


state 90

    (57) E -> parentesis_A E . parentesis_B
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    parentesis_B    shift and go to state 129
    mas             shift and go to state 72
    menos           shift and go to state 73
    asterisco       shift and go to state 74
    barra           shift and go to state 75
    caret           shift and go to state 76
    modulo          shift and go to state 77
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85


state 91

    (72) ACCESO_ARREGLO -> id corchete_A . E corchete_B
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 130
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 92

    (68) ARREGLO -> corchete_A EXP . corchete_B
    (39) EXP -> EXP . coma E

    corchete_B      shift and go to state 131
    coma            shift and go to state 99


state 93

    (69) ARREGLO -> corchete_A corchete_B .

    mas             reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    menos           reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    asterisco       reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    barra           reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    caret           reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    modulo          reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    mayor           reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    menor           reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    mayor_igual     reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    menor_igual     reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    igualacion      reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    diferenciacion  reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    or              reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    and             reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    end             reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    error           reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    global          reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    local           reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    function        reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    struct          reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    mutable         reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    id              reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    if              reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    while           reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    for             reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    break           reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    continue        reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    return          reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    puntoycoma      reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    tipo            reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    parentesis_B    reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    coma            reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    corchete_B      reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)
    dospuntos       reduce using rule 69 (ARREGLO -> corchete_A corchete_B .)


state 94

    (82) WHILE -> while E BLOQUE .

    puntoycoma      reduce using rule 82 (WHILE -> while E BLOQUE .)


state 95

    (83) FOR -> for id in . E BLOQUE
    (84) FOR -> for id in . RANGO BLOQUE
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (85) RANGO -> . E dospuntos E
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 132
    RANGO                          shift and go to state 133
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 96

    (27) ASIGNACION_VALOR -> E tipo . TIPO
    (16) TIPO -> . tipo_int64
    (17) TIPO -> . tipo_float64
    (18) TIPO -> . tipo_bool
    (19) TIPO -> . tipo_char
    (20) TIPO -> . tipo_string

    tipo_int64      shift and go to state 135
    tipo_float64    shift and go to state 136
    tipo_bool       shift and go to state 137
    tipo_char       shift and go to state 138
    tipo_string     shift and go to state 139

    TIPO                           shift and go to state 134

state 97

    (22) ASIGNACION -> global id igual ASIGNACION_VALOR .

    puntoycoma      reduce using rule 22 (ASIGNACION -> global id igual ASIGNACION_VALOR .)


state 98

    (70) LLAMADA -> id parentesis_A EXP parentesis_B .

    puntoycoma      reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    mas             reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    menos           reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    asterisco       reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    barra           reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    caret           reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    modulo          reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    mayor           reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    menor           reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    mayor_igual     reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    menor_igual     reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    igualacion      reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    diferenciacion  reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    or              reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    and             reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    end             reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    error           reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    global          reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    local           reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    function        reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    struct          reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    mutable         reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    id              reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    if              reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    while           reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    for             reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    break           reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    continue        reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    return          reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    tipo            reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    parentesis_B    reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    coma            reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    corchete_B      reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    dospuntos       reduce using rule 70 (LLAMADA -> id parentesis_A EXP parentesis_B .)


state 99

    (39) EXP -> EXP coma . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 140
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 100

    (24) ASIGNACION -> local id igual ASIGNACION_VALOR .

    puntoycoma      reduce using rule 24 (ASIGNACION -> local id igual ASIGNACION_VALOR .)


state 101

    (32) P -> id .

    parentesis_B    reduce using rule 32 (P -> id .)
    coma            reduce using rule 32 (P -> id .)


state 102

    (28) FUNCION -> function id parentesis_A PAR . parentesis_B BLOQUE
    (30) PAR -> PAR . coma P

    parentesis_B    shift and go to state 141
    coma            shift and go to state 142


state 103

    (29) FUNCION -> function id parentesis_A parentesis_B . BLOQUE
    (14) BLOQUE -> . INS end
    (15) BLOQUE -> . end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) I -> . ASIGNACION
    (4) I -> . FUNCION
    (5) I -> . STRUCT
    (6) I -> . LLAMADA
    (7) I -> . IF
    (8) I -> . WHILE
    (9) I -> . FOR
    (10) I -> . BREAK
    (11) I -> . CONTINUE
    (12) I -> . RETURN
    (13) I -> . error puntoycoma
    (21) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (22) ASIGNACION -> . global id igual ASIGNACION_VALOR
    (23) ASIGNACION -> . global id
    (24) ASIGNACION -> . local id igual ASIGNACION_VALOR
    (25) ASIGNACION -> . local id
    (28) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (29) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (33) STRUCT -> . struct id ATR end
    (34) STRUCT -> . mutable struct id ATR end
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (75) IF -> . if E BLOQUE
    (76) IF -> . if E BLOQUE ELSEIF
    (77) IF -> . if E BLOQUE ELSE
    (82) WHILE -> . while E BLOQUE
    (83) FOR -> . for id in E BLOQUE
    (84) FOR -> . for id in RANGO BLOQUE
    (86) BREAK -> . break
    (87) CONTINUE -> . continue
    (88) RETURN -> . return E
    (89) RETURN -> . return
    (73) ID -> . ID punto id
    (74) ID -> . id

    end             shift and go to state 87
    error           shift and go to state 13
    global          shift and go to state 15
    local           shift and go to state 17
    function        shift and go to state 18
    struct          shift and go to state 19
    mutable         shift and go to state 20
    id              shift and go to state 16
    if              shift and go to state 21
    while           shift and go to state 22
    for             shift and go to state 23
    break           shift and go to state 24
    continue        shift and go to state 25
    return          shift and go to state 26

    BLOQUE                         shift and go to state 143
    INS                            shift and go to state 86
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 3
    FUNCION                        shift and go to state 4
    STRUCT                         shift and go to state 5
    LLAMADA                        shift and go to state 6
    IF                             shift and go to state 7
    WHILE                          shift and go to state 8
    FOR                            shift and go to state 9
    BREAK                          shift and go to state 10
    CONTINUE                       shift and go to state 11
    RETURN                         shift and go to state 12
    ID                             shift and go to state 14

state 104

    (31) PAR -> P .

    parentesis_B    reduce using rule 31 (PAR -> P .)
    coma            reduce using rule 31 (PAR -> P .)


state 105

    (37) A -> id tipo . TIPO puntoycoma
    (16) TIPO -> . tipo_int64
    (17) TIPO -> . tipo_float64
    (18) TIPO -> . tipo_bool
    (19) TIPO -> . tipo_char
    (20) TIPO -> . tipo_string

    tipo_int64      shift and go to state 135
    tipo_float64    shift and go to state 136
    tipo_bool       shift and go to state 137
    tipo_char       shift and go to state 138
    tipo_string     shift and go to state 139

    TIPO                           shift and go to state 144

state 106

    (38) A -> id puntoycoma .

    end             reduce using rule 38 (A -> id puntoycoma .)
    id              reduce using rule 38 (A -> id puntoycoma .)


state 107

    (33) STRUCT -> struct id ATR end .

    puntoycoma      reduce using rule 33 (STRUCT -> struct id ATR end .)


state 108

    (35) ATR -> ATR A .

    end             reduce using rule 35 (ATR -> ATR A .)
    id              reduce using rule 35 (ATR -> ATR A .)


state 109

    (34) STRUCT -> mutable struct id ATR . end
    (35) ATR -> ATR . A
    (37) A -> . id tipo TIPO puntoycoma
    (38) A -> . id puntoycoma

    end             shift and go to state 145
    id              shift and go to state 67

    A                              shift and go to state 108

state 110

    (76) IF -> if E BLOQUE ELSEIF .

    puntoycoma      reduce using rule 76 (IF -> if E BLOQUE ELSEIF .)


state 111

    (77) IF -> if E BLOQUE ELSE .

    puntoycoma      reduce using rule 77 (IF -> if E BLOQUE ELSE .)


state 112

    (78) ELSEIF -> elseif . E BLOQUE
    (79) ELSEIF -> elseif . E BLOQUE ELSEIF
    (80) ELSEIF -> elseif . E BLOQUE ELSE
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 146
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 113

    (81) ELSE -> else . BLOQUE
    (14) BLOQUE -> . INS end
    (15) BLOQUE -> . end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) I -> . ASIGNACION
    (4) I -> . FUNCION
    (5) I -> . STRUCT
    (6) I -> . LLAMADA
    (7) I -> . IF
    (8) I -> . WHILE
    (9) I -> . FOR
    (10) I -> . BREAK
    (11) I -> . CONTINUE
    (12) I -> . RETURN
    (13) I -> . error puntoycoma
    (21) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (22) ASIGNACION -> . global id igual ASIGNACION_VALOR
    (23) ASIGNACION -> . global id
    (24) ASIGNACION -> . local id igual ASIGNACION_VALOR
    (25) ASIGNACION -> . local id
    (28) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (29) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (33) STRUCT -> . struct id ATR end
    (34) STRUCT -> . mutable struct id ATR end
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (75) IF -> . if E BLOQUE
    (76) IF -> . if E BLOQUE ELSEIF
    (77) IF -> . if E BLOQUE ELSE
    (82) WHILE -> . while E BLOQUE
    (83) FOR -> . for id in E BLOQUE
    (84) FOR -> . for id in RANGO BLOQUE
    (86) BREAK -> . break
    (87) CONTINUE -> . continue
    (88) RETURN -> . return E
    (89) RETURN -> . return
    (73) ID -> . ID punto id
    (74) ID -> . id

    end             shift and go to state 87
    error           shift and go to state 13
    global          shift and go to state 15
    local           shift and go to state 17
    function        shift and go to state 18
    struct          shift and go to state 19
    mutable         shift and go to state 20
    id              shift and go to state 16
    if              shift and go to state 21
    while           shift and go to state 22
    for             shift and go to state 23
    break           shift and go to state 24
    continue        shift and go to state 25
    return          shift and go to state 26

    BLOQUE                         shift and go to state 147
    INS                            shift and go to state 86
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 3
    FUNCION                        shift and go to state 4
    STRUCT                         shift and go to state 5
    LLAMADA                        shift and go to state 6
    IF                             shift and go to state 7
    WHILE                          shift and go to state 8
    FOR                            shift and go to state 9
    BREAK                          shift and go to state 10
    CONTINUE                       shift and go to state 11
    RETURN                         shift and go to state 12
    ID                             shift and go to state 14

state 114

    (41) E -> E mas E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    mas             reduce using rule 41 (E -> E mas E .)
    menos           reduce using rule 41 (E -> E mas E .)
    asterisco       reduce using rule 41 (E -> E mas E .)
    barra           reduce using rule 41 (E -> E mas E .)
    caret           reduce using rule 41 (E -> E mas E .)
    modulo          reduce using rule 41 (E -> E mas E .)
    end             reduce using rule 41 (E -> E mas E .)
    error           reduce using rule 41 (E -> E mas E .)
    global          reduce using rule 41 (E -> E mas E .)
    local           reduce using rule 41 (E -> E mas E .)
    function        reduce using rule 41 (E -> E mas E .)
    struct          reduce using rule 41 (E -> E mas E .)
    mutable         reduce using rule 41 (E -> E mas E .)
    id              reduce using rule 41 (E -> E mas E .)
    if              reduce using rule 41 (E -> E mas E .)
    while           reduce using rule 41 (E -> E mas E .)
    for             reduce using rule 41 (E -> E mas E .)
    break           reduce using rule 41 (E -> E mas E .)
    continue        reduce using rule 41 (E -> E mas E .)
    return          reduce using rule 41 (E -> E mas E .)
    puntoycoma      reduce using rule 41 (E -> E mas E .)
    tipo            reduce using rule 41 (E -> E mas E .)
    parentesis_B    reduce using rule 41 (E -> E mas E .)
    coma            reduce using rule 41 (E -> E mas E .)
    corchete_B      reduce using rule 41 (E -> E mas E .)
    dospuntos       reduce using rule 41 (E -> E mas E .)
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85

  ! mayor           [ reduce using rule 41 (E -> E mas E .) ]
  ! menor           [ reduce using rule 41 (E -> E mas E .) ]
  ! mayor_igual     [ reduce using rule 41 (E -> E mas E .) ]
  ! menor_igual     [ reduce using rule 41 (E -> E mas E .) ]
  ! igualacion      [ reduce using rule 41 (E -> E mas E .) ]
  ! diferenciacion  [ reduce using rule 41 (E -> E mas E .) ]
  ! or              [ reduce using rule 41 (E -> E mas E .) ]
  ! and             [ reduce using rule 41 (E -> E mas E .) ]
  ! mas             [ shift and go to state 72 ]
  ! menos           [ shift and go to state 73 ]
  ! asterisco       [ shift and go to state 74 ]
  ! barra           [ shift and go to state 75 ]
  ! caret           [ shift and go to state 76 ]
  ! modulo          [ shift and go to state 77 ]


state 115

    (42) E -> E menos E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    mas             reduce using rule 42 (E -> E menos E .)
    menos           reduce using rule 42 (E -> E menos E .)
    asterisco       reduce using rule 42 (E -> E menos E .)
    barra           reduce using rule 42 (E -> E menos E .)
    caret           reduce using rule 42 (E -> E menos E .)
    modulo          reduce using rule 42 (E -> E menos E .)
    end             reduce using rule 42 (E -> E menos E .)
    error           reduce using rule 42 (E -> E menos E .)
    global          reduce using rule 42 (E -> E menos E .)
    local           reduce using rule 42 (E -> E menos E .)
    function        reduce using rule 42 (E -> E menos E .)
    struct          reduce using rule 42 (E -> E menos E .)
    mutable         reduce using rule 42 (E -> E menos E .)
    id              reduce using rule 42 (E -> E menos E .)
    if              reduce using rule 42 (E -> E menos E .)
    while           reduce using rule 42 (E -> E menos E .)
    for             reduce using rule 42 (E -> E menos E .)
    break           reduce using rule 42 (E -> E menos E .)
    continue        reduce using rule 42 (E -> E menos E .)
    return          reduce using rule 42 (E -> E menos E .)
    puntoycoma      reduce using rule 42 (E -> E menos E .)
    tipo            reduce using rule 42 (E -> E menos E .)
    parentesis_B    reduce using rule 42 (E -> E menos E .)
    coma            reduce using rule 42 (E -> E menos E .)
    corchete_B      reduce using rule 42 (E -> E menos E .)
    dospuntos       reduce using rule 42 (E -> E menos E .)
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85

  ! mayor           [ reduce using rule 42 (E -> E menos E .) ]
  ! menor           [ reduce using rule 42 (E -> E menos E .) ]
  ! mayor_igual     [ reduce using rule 42 (E -> E menos E .) ]
  ! menor_igual     [ reduce using rule 42 (E -> E menos E .) ]
  ! igualacion      [ reduce using rule 42 (E -> E menos E .) ]
  ! diferenciacion  [ reduce using rule 42 (E -> E menos E .) ]
  ! or              [ reduce using rule 42 (E -> E menos E .) ]
  ! and             [ reduce using rule 42 (E -> E menos E .) ]
  ! mas             [ shift and go to state 72 ]
  ! menos           [ shift and go to state 73 ]
  ! asterisco       [ shift and go to state 74 ]
  ! barra           [ shift and go to state 75 ]
  ! caret           [ shift and go to state 76 ]
  ! modulo          [ shift and go to state 77 ]


state 116

    (43) E -> E asterisco E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    asterisco       reduce using rule 43 (E -> E asterisco E .)
    barra           reduce using rule 43 (E -> E asterisco E .)
    caret           reduce using rule 43 (E -> E asterisco E .)
    modulo          reduce using rule 43 (E -> E asterisco E .)
    end             reduce using rule 43 (E -> E asterisco E .)
    error           reduce using rule 43 (E -> E asterisco E .)
    global          reduce using rule 43 (E -> E asterisco E .)
    local           reduce using rule 43 (E -> E asterisco E .)
    function        reduce using rule 43 (E -> E asterisco E .)
    struct          reduce using rule 43 (E -> E asterisco E .)
    mutable         reduce using rule 43 (E -> E asterisco E .)
    id              reduce using rule 43 (E -> E asterisco E .)
    if              reduce using rule 43 (E -> E asterisco E .)
    while           reduce using rule 43 (E -> E asterisco E .)
    for             reduce using rule 43 (E -> E asterisco E .)
    break           reduce using rule 43 (E -> E asterisco E .)
    continue        reduce using rule 43 (E -> E asterisco E .)
    return          reduce using rule 43 (E -> E asterisco E .)
    puntoycoma      reduce using rule 43 (E -> E asterisco E .)
    tipo            reduce using rule 43 (E -> E asterisco E .)
    parentesis_B    reduce using rule 43 (E -> E asterisco E .)
    coma            reduce using rule 43 (E -> E asterisco E .)
    corchete_B      reduce using rule 43 (E -> E asterisco E .)
    dospuntos       reduce using rule 43 (E -> E asterisco E .)
    mas             shift and go to state 72
    menos           shift and go to state 73
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85

  ! mas             [ reduce using rule 43 (E -> E asterisco E .) ]
  ! menos           [ reduce using rule 43 (E -> E asterisco E .) ]
  ! mayor           [ reduce using rule 43 (E -> E asterisco E .) ]
  ! menor           [ reduce using rule 43 (E -> E asterisco E .) ]
  ! mayor_igual     [ reduce using rule 43 (E -> E asterisco E .) ]
  ! menor_igual     [ reduce using rule 43 (E -> E asterisco E .) ]
  ! igualacion      [ reduce using rule 43 (E -> E asterisco E .) ]
  ! diferenciacion  [ reduce using rule 43 (E -> E asterisco E .) ]
  ! or              [ reduce using rule 43 (E -> E asterisco E .) ]
  ! and             [ reduce using rule 43 (E -> E asterisco E .) ]
  ! asterisco       [ shift and go to state 74 ]
  ! barra           [ shift and go to state 75 ]
  ! caret           [ shift and go to state 76 ]
  ! modulo          [ shift and go to state 77 ]


state 117

    (44) E -> E barra E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    asterisco       reduce using rule 44 (E -> E barra E .)
    barra           reduce using rule 44 (E -> E barra E .)
    caret           reduce using rule 44 (E -> E barra E .)
    modulo          reduce using rule 44 (E -> E barra E .)
    end             reduce using rule 44 (E -> E barra E .)
    error           reduce using rule 44 (E -> E barra E .)
    global          reduce using rule 44 (E -> E barra E .)
    local           reduce using rule 44 (E -> E barra E .)
    function        reduce using rule 44 (E -> E barra E .)
    struct          reduce using rule 44 (E -> E barra E .)
    mutable         reduce using rule 44 (E -> E barra E .)
    id              reduce using rule 44 (E -> E barra E .)
    if              reduce using rule 44 (E -> E barra E .)
    while           reduce using rule 44 (E -> E barra E .)
    for             reduce using rule 44 (E -> E barra E .)
    break           reduce using rule 44 (E -> E barra E .)
    continue        reduce using rule 44 (E -> E barra E .)
    return          reduce using rule 44 (E -> E barra E .)
    puntoycoma      reduce using rule 44 (E -> E barra E .)
    tipo            reduce using rule 44 (E -> E barra E .)
    parentesis_B    reduce using rule 44 (E -> E barra E .)
    coma            reduce using rule 44 (E -> E barra E .)
    corchete_B      reduce using rule 44 (E -> E barra E .)
    dospuntos       reduce using rule 44 (E -> E barra E .)
    mas             shift and go to state 72
    menos           shift and go to state 73
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85

  ! mas             [ reduce using rule 44 (E -> E barra E .) ]
  ! menos           [ reduce using rule 44 (E -> E barra E .) ]
  ! mayor           [ reduce using rule 44 (E -> E barra E .) ]
  ! menor           [ reduce using rule 44 (E -> E barra E .) ]
  ! mayor_igual     [ reduce using rule 44 (E -> E barra E .) ]
  ! menor_igual     [ reduce using rule 44 (E -> E barra E .) ]
  ! igualacion      [ reduce using rule 44 (E -> E barra E .) ]
  ! diferenciacion  [ reduce using rule 44 (E -> E barra E .) ]
  ! or              [ reduce using rule 44 (E -> E barra E .) ]
  ! and             [ reduce using rule 44 (E -> E barra E .) ]
  ! asterisco       [ shift and go to state 74 ]
  ! barra           [ shift and go to state 75 ]
  ! caret           [ shift and go to state 76 ]
  ! modulo          [ shift and go to state 77 ]


state 118

    (45) E -> E caret E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    end             reduce using rule 45 (E -> E caret E .)
    error           reduce using rule 45 (E -> E caret E .)
    global          reduce using rule 45 (E -> E caret E .)
    local           reduce using rule 45 (E -> E caret E .)
    function        reduce using rule 45 (E -> E caret E .)
    struct          reduce using rule 45 (E -> E caret E .)
    mutable         reduce using rule 45 (E -> E caret E .)
    id              reduce using rule 45 (E -> E caret E .)
    if              reduce using rule 45 (E -> E caret E .)
    while           reduce using rule 45 (E -> E caret E .)
    for             reduce using rule 45 (E -> E caret E .)
    break           reduce using rule 45 (E -> E caret E .)
    continue        reduce using rule 45 (E -> E caret E .)
    return          reduce using rule 45 (E -> E caret E .)
    puntoycoma      reduce using rule 45 (E -> E caret E .)
    tipo            reduce using rule 45 (E -> E caret E .)
    parentesis_B    reduce using rule 45 (E -> E caret E .)
    coma            reduce using rule 45 (E -> E caret E .)
    corchete_B      reduce using rule 45 (E -> E caret E .)
    dospuntos       reduce using rule 45 (E -> E caret E .)
    mas             shift and go to state 72
    menos           shift and go to state 73
    asterisco       shift and go to state 74
    barra           shift and go to state 75
    caret           shift and go to state 76
    modulo          shift and go to state 77
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85

  ! mas             [ reduce using rule 45 (E -> E caret E .) ]
  ! menos           [ reduce using rule 45 (E -> E caret E .) ]
  ! asterisco       [ reduce using rule 45 (E -> E caret E .) ]
  ! barra           [ reduce using rule 45 (E -> E caret E .) ]
  ! caret           [ reduce using rule 45 (E -> E caret E .) ]
  ! modulo          [ reduce using rule 45 (E -> E caret E .) ]
  ! mayor           [ reduce using rule 45 (E -> E caret E .) ]
  ! menor           [ reduce using rule 45 (E -> E caret E .) ]
  ! mayor_igual     [ reduce using rule 45 (E -> E caret E .) ]
  ! menor_igual     [ reduce using rule 45 (E -> E caret E .) ]
  ! igualacion      [ reduce using rule 45 (E -> E caret E .) ]
  ! diferenciacion  [ reduce using rule 45 (E -> E caret E .) ]
  ! or              [ reduce using rule 45 (E -> E caret E .) ]
  ! and             [ reduce using rule 45 (E -> E caret E .) ]


state 119

    (46) E -> E modulo E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    asterisco       reduce using rule 46 (E -> E modulo E .)
    barra           reduce using rule 46 (E -> E modulo E .)
    caret           reduce using rule 46 (E -> E modulo E .)
    modulo          reduce using rule 46 (E -> E modulo E .)
    end             reduce using rule 46 (E -> E modulo E .)
    error           reduce using rule 46 (E -> E modulo E .)
    global          reduce using rule 46 (E -> E modulo E .)
    local           reduce using rule 46 (E -> E modulo E .)
    function        reduce using rule 46 (E -> E modulo E .)
    struct          reduce using rule 46 (E -> E modulo E .)
    mutable         reduce using rule 46 (E -> E modulo E .)
    id              reduce using rule 46 (E -> E modulo E .)
    if              reduce using rule 46 (E -> E modulo E .)
    while           reduce using rule 46 (E -> E modulo E .)
    for             reduce using rule 46 (E -> E modulo E .)
    break           reduce using rule 46 (E -> E modulo E .)
    continue        reduce using rule 46 (E -> E modulo E .)
    return          reduce using rule 46 (E -> E modulo E .)
    puntoycoma      reduce using rule 46 (E -> E modulo E .)
    tipo            reduce using rule 46 (E -> E modulo E .)
    parentesis_B    reduce using rule 46 (E -> E modulo E .)
    coma            reduce using rule 46 (E -> E modulo E .)
    corchete_B      reduce using rule 46 (E -> E modulo E .)
    dospuntos       reduce using rule 46 (E -> E modulo E .)
    mas             shift and go to state 72
    menos           shift and go to state 73
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85

  ! mas             [ reduce using rule 46 (E -> E modulo E .) ]
  ! menos           [ reduce using rule 46 (E -> E modulo E .) ]
  ! mayor           [ reduce using rule 46 (E -> E modulo E .) ]
  ! menor           [ reduce using rule 46 (E -> E modulo E .) ]
  ! mayor_igual     [ reduce using rule 46 (E -> E modulo E .) ]
  ! menor_igual     [ reduce using rule 46 (E -> E modulo E .) ]
  ! igualacion      [ reduce using rule 46 (E -> E modulo E .) ]
  ! diferenciacion  [ reduce using rule 46 (E -> E modulo E .) ]
  ! or              [ reduce using rule 46 (E -> E modulo E .) ]
  ! and             [ reduce using rule 46 (E -> E modulo E .) ]
  ! asterisco       [ shift and go to state 74 ]
  ! barra           [ shift and go to state 75 ]
  ! caret           [ shift and go to state 76 ]
  ! modulo          [ shift and go to state 77 ]


state 120

    (48) E -> E mayor E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    mas             reduce using rule 48 (E -> E mayor E .)
    menos           reduce using rule 48 (E -> E mayor E .)
    asterisco       reduce using rule 48 (E -> E mayor E .)
    barra           reduce using rule 48 (E -> E mayor E .)
    caret           reduce using rule 48 (E -> E mayor E .)
    modulo          reduce using rule 48 (E -> E mayor E .)
    mayor           reduce using rule 48 (E -> E mayor E .)
    menor           reduce using rule 48 (E -> E mayor E .)
    mayor_igual     reduce using rule 48 (E -> E mayor E .)
    menor_igual     reduce using rule 48 (E -> E mayor E .)
    end             reduce using rule 48 (E -> E mayor E .)
    error           reduce using rule 48 (E -> E mayor E .)
    global          reduce using rule 48 (E -> E mayor E .)
    local           reduce using rule 48 (E -> E mayor E .)
    function        reduce using rule 48 (E -> E mayor E .)
    struct          reduce using rule 48 (E -> E mayor E .)
    mutable         reduce using rule 48 (E -> E mayor E .)
    id              reduce using rule 48 (E -> E mayor E .)
    if              reduce using rule 48 (E -> E mayor E .)
    while           reduce using rule 48 (E -> E mayor E .)
    for             reduce using rule 48 (E -> E mayor E .)
    break           reduce using rule 48 (E -> E mayor E .)
    continue        reduce using rule 48 (E -> E mayor E .)
    return          reduce using rule 48 (E -> E mayor E .)
    puntoycoma      reduce using rule 48 (E -> E mayor E .)
    tipo            reduce using rule 48 (E -> E mayor E .)
    parentesis_B    reduce using rule 48 (E -> E mayor E .)
    coma            reduce using rule 48 (E -> E mayor E .)
    corchete_B      reduce using rule 48 (E -> E mayor E .)
    dospuntos       reduce using rule 48 (E -> E mayor E .)
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85

  ! igualacion      [ reduce using rule 48 (E -> E mayor E .) ]
  ! diferenciacion  [ reduce using rule 48 (E -> E mayor E .) ]
  ! or              [ reduce using rule 48 (E -> E mayor E .) ]
  ! and             [ reduce using rule 48 (E -> E mayor E .) ]
  ! mas             [ shift and go to state 72 ]
  ! menos           [ shift and go to state 73 ]
  ! asterisco       [ shift and go to state 74 ]
  ! barra           [ shift and go to state 75 ]
  ! caret           [ shift and go to state 76 ]
  ! modulo          [ shift and go to state 77 ]
  ! mayor           [ shift and go to state 78 ]
  ! menor           [ shift and go to state 79 ]
  ! mayor_igual     [ shift and go to state 80 ]
  ! menor_igual     [ shift and go to state 81 ]


state 121

    (49) E -> E menor E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    mas             reduce using rule 49 (E -> E menor E .)
    menos           reduce using rule 49 (E -> E menor E .)
    asterisco       reduce using rule 49 (E -> E menor E .)
    barra           reduce using rule 49 (E -> E menor E .)
    caret           reduce using rule 49 (E -> E menor E .)
    modulo          reduce using rule 49 (E -> E menor E .)
    mayor           reduce using rule 49 (E -> E menor E .)
    menor           reduce using rule 49 (E -> E menor E .)
    mayor_igual     reduce using rule 49 (E -> E menor E .)
    menor_igual     reduce using rule 49 (E -> E menor E .)
    end             reduce using rule 49 (E -> E menor E .)
    error           reduce using rule 49 (E -> E menor E .)
    global          reduce using rule 49 (E -> E menor E .)
    local           reduce using rule 49 (E -> E menor E .)
    function        reduce using rule 49 (E -> E menor E .)
    struct          reduce using rule 49 (E -> E menor E .)
    mutable         reduce using rule 49 (E -> E menor E .)
    id              reduce using rule 49 (E -> E menor E .)
    if              reduce using rule 49 (E -> E menor E .)
    while           reduce using rule 49 (E -> E menor E .)
    for             reduce using rule 49 (E -> E menor E .)
    break           reduce using rule 49 (E -> E menor E .)
    continue        reduce using rule 49 (E -> E menor E .)
    return          reduce using rule 49 (E -> E menor E .)
    puntoycoma      reduce using rule 49 (E -> E menor E .)
    tipo            reduce using rule 49 (E -> E menor E .)
    parentesis_B    reduce using rule 49 (E -> E menor E .)
    coma            reduce using rule 49 (E -> E menor E .)
    corchete_B      reduce using rule 49 (E -> E menor E .)
    dospuntos       reduce using rule 49 (E -> E menor E .)
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85

  ! igualacion      [ reduce using rule 49 (E -> E menor E .) ]
  ! diferenciacion  [ reduce using rule 49 (E -> E menor E .) ]
  ! or              [ reduce using rule 49 (E -> E menor E .) ]
  ! and             [ reduce using rule 49 (E -> E menor E .) ]
  ! mas             [ shift and go to state 72 ]
  ! menos           [ shift and go to state 73 ]
  ! asterisco       [ shift and go to state 74 ]
  ! barra           [ shift and go to state 75 ]
  ! caret           [ shift and go to state 76 ]
  ! modulo          [ shift and go to state 77 ]
  ! mayor           [ shift and go to state 78 ]
  ! menor           [ shift and go to state 79 ]
  ! mayor_igual     [ shift and go to state 80 ]
  ! menor_igual     [ shift and go to state 81 ]


state 122

    (50) E -> E mayor_igual E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    mas             reduce using rule 50 (E -> E mayor_igual E .)
    menos           reduce using rule 50 (E -> E mayor_igual E .)
    asterisco       reduce using rule 50 (E -> E mayor_igual E .)
    barra           reduce using rule 50 (E -> E mayor_igual E .)
    caret           reduce using rule 50 (E -> E mayor_igual E .)
    modulo          reduce using rule 50 (E -> E mayor_igual E .)
    mayor           reduce using rule 50 (E -> E mayor_igual E .)
    menor           reduce using rule 50 (E -> E mayor_igual E .)
    mayor_igual     reduce using rule 50 (E -> E mayor_igual E .)
    menor_igual     reduce using rule 50 (E -> E mayor_igual E .)
    end             reduce using rule 50 (E -> E mayor_igual E .)
    error           reduce using rule 50 (E -> E mayor_igual E .)
    global          reduce using rule 50 (E -> E mayor_igual E .)
    local           reduce using rule 50 (E -> E mayor_igual E .)
    function        reduce using rule 50 (E -> E mayor_igual E .)
    struct          reduce using rule 50 (E -> E mayor_igual E .)
    mutable         reduce using rule 50 (E -> E mayor_igual E .)
    id              reduce using rule 50 (E -> E mayor_igual E .)
    if              reduce using rule 50 (E -> E mayor_igual E .)
    while           reduce using rule 50 (E -> E mayor_igual E .)
    for             reduce using rule 50 (E -> E mayor_igual E .)
    break           reduce using rule 50 (E -> E mayor_igual E .)
    continue        reduce using rule 50 (E -> E mayor_igual E .)
    return          reduce using rule 50 (E -> E mayor_igual E .)
    puntoycoma      reduce using rule 50 (E -> E mayor_igual E .)
    tipo            reduce using rule 50 (E -> E mayor_igual E .)
    parentesis_B    reduce using rule 50 (E -> E mayor_igual E .)
    coma            reduce using rule 50 (E -> E mayor_igual E .)
    corchete_B      reduce using rule 50 (E -> E mayor_igual E .)
    dospuntos       reduce using rule 50 (E -> E mayor_igual E .)
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85

  ! igualacion      [ reduce using rule 50 (E -> E mayor_igual E .) ]
  ! diferenciacion  [ reduce using rule 50 (E -> E mayor_igual E .) ]
  ! or              [ reduce using rule 50 (E -> E mayor_igual E .) ]
  ! and             [ reduce using rule 50 (E -> E mayor_igual E .) ]
  ! mas             [ shift and go to state 72 ]
  ! menos           [ shift and go to state 73 ]
  ! asterisco       [ shift and go to state 74 ]
  ! barra           [ shift and go to state 75 ]
  ! caret           [ shift and go to state 76 ]
  ! modulo          [ shift and go to state 77 ]
  ! mayor           [ shift and go to state 78 ]
  ! menor           [ shift and go to state 79 ]
  ! mayor_igual     [ shift and go to state 80 ]
  ! menor_igual     [ shift and go to state 81 ]


state 123

    (51) E -> E menor_igual E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    mas             reduce using rule 51 (E -> E menor_igual E .)
    menos           reduce using rule 51 (E -> E menor_igual E .)
    asterisco       reduce using rule 51 (E -> E menor_igual E .)
    barra           reduce using rule 51 (E -> E menor_igual E .)
    caret           reduce using rule 51 (E -> E menor_igual E .)
    modulo          reduce using rule 51 (E -> E menor_igual E .)
    mayor           reduce using rule 51 (E -> E menor_igual E .)
    menor           reduce using rule 51 (E -> E menor_igual E .)
    mayor_igual     reduce using rule 51 (E -> E menor_igual E .)
    menor_igual     reduce using rule 51 (E -> E menor_igual E .)
    end             reduce using rule 51 (E -> E menor_igual E .)
    error           reduce using rule 51 (E -> E menor_igual E .)
    global          reduce using rule 51 (E -> E menor_igual E .)
    local           reduce using rule 51 (E -> E menor_igual E .)
    function        reduce using rule 51 (E -> E menor_igual E .)
    struct          reduce using rule 51 (E -> E menor_igual E .)
    mutable         reduce using rule 51 (E -> E menor_igual E .)
    id              reduce using rule 51 (E -> E menor_igual E .)
    if              reduce using rule 51 (E -> E menor_igual E .)
    while           reduce using rule 51 (E -> E menor_igual E .)
    for             reduce using rule 51 (E -> E menor_igual E .)
    break           reduce using rule 51 (E -> E menor_igual E .)
    continue        reduce using rule 51 (E -> E menor_igual E .)
    return          reduce using rule 51 (E -> E menor_igual E .)
    puntoycoma      reduce using rule 51 (E -> E menor_igual E .)
    tipo            reduce using rule 51 (E -> E menor_igual E .)
    parentesis_B    reduce using rule 51 (E -> E menor_igual E .)
    coma            reduce using rule 51 (E -> E menor_igual E .)
    corchete_B      reduce using rule 51 (E -> E menor_igual E .)
    dospuntos       reduce using rule 51 (E -> E menor_igual E .)
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85

  ! igualacion      [ reduce using rule 51 (E -> E menor_igual E .) ]
  ! diferenciacion  [ reduce using rule 51 (E -> E menor_igual E .) ]
  ! or              [ reduce using rule 51 (E -> E menor_igual E .) ]
  ! and             [ reduce using rule 51 (E -> E menor_igual E .) ]
  ! mas             [ shift and go to state 72 ]
  ! menos           [ shift and go to state 73 ]
  ! asterisco       [ shift and go to state 74 ]
  ! barra           [ shift and go to state 75 ]
  ! caret           [ shift and go to state 76 ]
  ! modulo          [ shift and go to state 77 ]
  ! mayor           [ shift and go to state 78 ]
  ! menor           [ shift and go to state 79 ]
  ! mayor_igual     [ shift and go to state 80 ]
  ! menor_igual     [ shift and go to state 81 ]


state 124

    (52) E -> E igualacion E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    mas             reduce using rule 52 (E -> E igualacion E .)
    menos           reduce using rule 52 (E -> E igualacion E .)
    asterisco       reduce using rule 52 (E -> E igualacion E .)
    barra           reduce using rule 52 (E -> E igualacion E .)
    caret           reduce using rule 52 (E -> E igualacion E .)
    modulo          reduce using rule 52 (E -> E igualacion E .)
    mayor           reduce using rule 52 (E -> E igualacion E .)
    menor           reduce using rule 52 (E -> E igualacion E .)
    mayor_igual     reduce using rule 52 (E -> E igualacion E .)
    menor_igual     reduce using rule 52 (E -> E igualacion E .)
    igualacion      reduce using rule 52 (E -> E igualacion E .)
    diferenciacion  reduce using rule 52 (E -> E igualacion E .)
    end             reduce using rule 52 (E -> E igualacion E .)
    error           reduce using rule 52 (E -> E igualacion E .)
    global          reduce using rule 52 (E -> E igualacion E .)
    local           reduce using rule 52 (E -> E igualacion E .)
    function        reduce using rule 52 (E -> E igualacion E .)
    struct          reduce using rule 52 (E -> E igualacion E .)
    mutable         reduce using rule 52 (E -> E igualacion E .)
    id              reduce using rule 52 (E -> E igualacion E .)
    if              reduce using rule 52 (E -> E igualacion E .)
    while           reduce using rule 52 (E -> E igualacion E .)
    for             reduce using rule 52 (E -> E igualacion E .)
    break           reduce using rule 52 (E -> E igualacion E .)
    continue        reduce using rule 52 (E -> E igualacion E .)
    return          reduce using rule 52 (E -> E igualacion E .)
    puntoycoma      reduce using rule 52 (E -> E igualacion E .)
    tipo            reduce using rule 52 (E -> E igualacion E .)
    parentesis_B    reduce using rule 52 (E -> E igualacion E .)
    coma            reduce using rule 52 (E -> E igualacion E .)
    corchete_B      reduce using rule 52 (E -> E igualacion E .)
    dospuntos       reduce using rule 52 (E -> E igualacion E .)
    or              shift and go to state 84
    and             shift and go to state 85

  ! or              [ reduce using rule 52 (E -> E igualacion E .) ]
  ! and             [ reduce using rule 52 (E -> E igualacion E .) ]
  ! mas             [ shift and go to state 72 ]
  ! menos           [ shift and go to state 73 ]
  ! asterisco       [ shift and go to state 74 ]
  ! barra           [ shift and go to state 75 ]
  ! caret           [ shift and go to state 76 ]
  ! modulo          [ shift and go to state 77 ]
  ! mayor           [ shift and go to state 78 ]
  ! menor           [ shift and go to state 79 ]
  ! mayor_igual     [ shift and go to state 80 ]
  ! menor_igual     [ shift and go to state 81 ]
  ! igualacion      [ shift and go to state 82 ]
  ! diferenciacion  [ shift and go to state 83 ]


state 125

    (53) E -> E diferenciacion E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    mas             reduce using rule 53 (E -> E diferenciacion E .)
    menos           reduce using rule 53 (E -> E diferenciacion E .)
    asterisco       reduce using rule 53 (E -> E diferenciacion E .)
    barra           reduce using rule 53 (E -> E diferenciacion E .)
    caret           reduce using rule 53 (E -> E diferenciacion E .)
    modulo          reduce using rule 53 (E -> E diferenciacion E .)
    mayor           reduce using rule 53 (E -> E diferenciacion E .)
    menor           reduce using rule 53 (E -> E diferenciacion E .)
    mayor_igual     reduce using rule 53 (E -> E diferenciacion E .)
    menor_igual     reduce using rule 53 (E -> E diferenciacion E .)
    igualacion      reduce using rule 53 (E -> E diferenciacion E .)
    diferenciacion  reduce using rule 53 (E -> E diferenciacion E .)
    end             reduce using rule 53 (E -> E diferenciacion E .)
    error           reduce using rule 53 (E -> E diferenciacion E .)
    global          reduce using rule 53 (E -> E diferenciacion E .)
    local           reduce using rule 53 (E -> E diferenciacion E .)
    function        reduce using rule 53 (E -> E diferenciacion E .)
    struct          reduce using rule 53 (E -> E diferenciacion E .)
    mutable         reduce using rule 53 (E -> E diferenciacion E .)
    id              reduce using rule 53 (E -> E diferenciacion E .)
    if              reduce using rule 53 (E -> E diferenciacion E .)
    while           reduce using rule 53 (E -> E diferenciacion E .)
    for             reduce using rule 53 (E -> E diferenciacion E .)
    break           reduce using rule 53 (E -> E diferenciacion E .)
    continue        reduce using rule 53 (E -> E diferenciacion E .)
    return          reduce using rule 53 (E -> E diferenciacion E .)
    puntoycoma      reduce using rule 53 (E -> E diferenciacion E .)
    tipo            reduce using rule 53 (E -> E diferenciacion E .)
    parentesis_B    reduce using rule 53 (E -> E diferenciacion E .)
    coma            reduce using rule 53 (E -> E diferenciacion E .)
    corchete_B      reduce using rule 53 (E -> E diferenciacion E .)
    dospuntos       reduce using rule 53 (E -> E diferenciacion E .)
    or              shift and go to state 84
    and             shift and go to state 85

  ! or              [ reduce using rule 53 (E -> E diferenciacion E .) ]
  ! and             [ reduce using rule 53 (E -> E diferenciacion E .) ]
  ! mas             [ shift and go to state 72 ]
  ! menos           [ shift and go to state 73 ]
  ! asterisco       [ shift and go to state 74 ]
  ! barra           [ shift and go to state 75 ]
  ! caret           [ shift and go to state 76 ]
  ! modulo          [ shift and go to state 77 ]
  ! mayor           [ shift and go to state 78 ]
  ! menor           [ shift and go to state 79 ]
  ! mayor_igual     [ shift and go to state 80 ]
  ! menor_igual     [ shift and go to state 81 ]
  ! igualacion      [ shift and go to state 82 ]
  ! diferenciacion  [ shift and go to state 83 ]


state 126

    (54) E -> E or E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    mas             reduce using rule 54 (E -> E or E .)
    menos           reduce using rule 54 (E -> E or E .)
    asterisco       reduce using rule 54 (E -> E or E .)
    barra           reduce using rule 54 (E -> E or E .)
    caret           reduce using rule 54 (E -> E or E .)
    modulo          reduce using rule 54 (E -> E or E .)
    mayor           reduce using rule 54 (E -> E or E .)
    menor           reduce using rule 54 (E -> E or E .)
    mayor_igual     reduce using rule 54 (E -> E or E .)
    menor_igual     reduce using rule 54 (E -> E or E .)
    igualacion      reduce using rule 54 (E -> E or E .)
    diferenciacion  reduce using rule 54 (E -> E or E .)
    or              reduce using rule 54 (E -> E or E .)
    and             reduce using rule 54 (E -> E or E .)
    end             reduce using rule 54 (E -> E or E .)
    error           reduce using rule 54 (E -> E or E .)
    global          reduce using rule 54 (E -> E or E .)
    local           reduce using rule 54 (E -> E or E .)
    function        reduce using rule 54 (E -> E or E .)
    struct          reduce using rule 54 (E -> E or E .)
    mutable         reduce using rule 54 (E -> E or E .)
    id              reduce using rule 54 (E -> E or E .)
    if              reduce using rule 54 (E -> E or E .)
    while           reduce using rule 54 (E -> E or E .)
    for             reduce using rule 54 (E -> E or E .)
    break           reduce using rule 54 (E -> E or E .)
    continue        reduce using rule 54 (E -> E or E .)
    return          reduce using rule 54 (E -> E or E .)
    puntoycoma      reduce using rule 54 (E -> E or E .)
    tipo            reduce using rule 54 (E -> E or E .)
    parentesis_B    reduce using rule 54 (E -> E or E .)
    coma            reduce using rule 54 (E -> E or E .)
    corchete_B      reduce using rule 54 (E -> E or E .)
    dospuntos       reduce using rule 54 (E -> E or E .)

  ! mas             [ shift and go to state 72 ]
  ! menos           [ shift and go to state 73 ]
  ! asterisco       [ shift and go to state 74 ]
  ! barra           [ shift and go to state 75 ]
  ! caret           [ shift and go to state 76 ]
  ! modulo          [ shift and go to state 77 ]
  ! mayor           [ shift and go to state 78 ]
  ! menor           [ shift and go to state 79 ]
  ! mayor_igual     [ shift and go to state 80 ]
  ! menor_igual     [ shift and go to state 81 ]
  ! igualacion      [ shift and go to state 82 ]
  ! diferenciacion  [ shift and go to state 83 ]
  ! or              [ shift and go to state 84 ]
  ! and             [ shift and go to state 85 ]


state 127

    (55) E -> E and E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    mas             reduce using rule 55 (E -> E and E .)
    menos           reduce using rule 55 (E -> E and E .)
    asterisco       reduce using rule 55 (E -> E and E .)
    barra           reduce using rule 55 (E -> E and E .)
    caret           reduce using rule 55 (E -> E and E .)
    modulo          reduce using rule 55 (E -> E and E .)
    mayor           reduce using rule 55 (E -> E and E .)
    menor           reduce using rule 55 (E -> E and E .)
    mayor_igual     reduce using rule 55 (E -> E and E .)
    menor_igual     reduce using rule 55 (E -> E and E .)
    igualacion      reduce using rule 55 (E -> E and E .)
    diferenciacion  reduce using rule 55 (E -> E and E .)
    and             reduce using rule 55 (E -> E and E .)
    end             reduce using rule 55 (E -> E and E .)
    error           reduce using rule 55 (E -> E and E .)
    global          reduce using rule 55 (E -> E and E .)
    local           reduce using rule 55 (E -> E and E .)
    function        reduce using rule 55 (E -> E and E .)
    struct          reduce using rule 55 (E -> E and E .)
    mutable         reduce using rule 55 (E -> E and E .)
    id              reduce using rule 55 (E -> E and E .)
    if              reduce using rule 55 (E -> E and E .)
    while           reduce using rule 55 (E -> E and E .)
    for             reduce using rule 55 (E -> E and E .)
    break           reduce using rule 55 (E -> E and E .)
    continue        reduce using rule 55 (E -> E and E .)
    return          reduce using rule 55 (E -> E and E .)
    puntoycoma      reduce using rule 55 (E -> E and E .)
    tipo            reduce using rule 55 (E -> E and E .)
    parentesis_B    reduce using rule 55 (E -> E and E .)
    coma            reduce using rule 55 (E -> E and E .)
    corchete_B      reduce using rule 55 (E -> E and E .)
    dospuntos       reduce using rule 55 (E -> E and E .)
    or              shift and go to state 84

  ! or              [ reduce using rule 55 (E -> E and E .) ]
  ! mas             [ shift and go to state 72 ]
  ! menos           [ shift and go to state 73 ]
  ! asterisco       [ shift and go to state 74 ]
  ! barra           [ shift and go to state 75 ]
  ! caret           [ shift and go to state 76 ]
  ! modulo          [ shift and go to state 77 ]
  ! mayor           [ shift and go to state 78 ]
  ! menor           [ shift and go to state 79 ]
  ! mayor_igual     [ shift and go to state 80 ]
  ! menor_igual     [ shift and go to state 81 ]
  ! igualacion      [ shift and go to state 82 ]
  ! diferenciacion  [ shift and go to state 83 ]
  ! and             [ shift and go to state 85 ]


state 128

    (14) BLOQUE -> INS end .

    elseif          reduce using rule 14 (BLOQUE -> INS end .)
    else            reduce using rule 14 (BLOQUE -> INS end .)
    puntoycoma      reduce using rule 14 (BLOQUE -> INS end .)


state 129

    (57) E -> parentesis_A E parentesis_B .

    mas             reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    menos           reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    asterisco       reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    barra           reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    caret           reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    modulo          reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    mayor           reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    menor           reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    mayor_igual     reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    menor_igual     reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    igualacion      reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    diferenciacion  reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    or              reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    and             reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    end             reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    error           reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    global          reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    local           reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    function        reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    struct          reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    mutable         reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    id              reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    if              reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    while           reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    for             reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    break           reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    continue        reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    return          reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    puntoycoma      reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    tipo            reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    parentesis_B    reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    coma            reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    corchete_B      reduce using rule 57 (E -> parentesis_A E parentesis_B .)
    dospuntos       reduce using rule 57 (E -> parentesis_A E parentesis_B .)


state 130

    (72) ACCESO_ARREGLO -> id corchete_A E . corchete_B
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    corchete_B      shift and go to state 148
    mas             shift and go to state 72
    menos           shift and go to state 73
    asterisco       shift and go to state 74
    barra           shift and go to state 75
    caret           shift and go to state 76
    modulo          shift and go to state 77
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85


state 131

    (68) ARREGLO -> corchete_A EXP corchete_B .

    mas             reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    menos           reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    asterisco       reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    barra           reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    caret           reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    modulo          reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    mayor           reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    menor           reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    mayor_igual     reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    menor_igual     reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    igualacion      reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    diferenciacion  reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    or              reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    and             reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    end             reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    error           reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    global          reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    local           reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    function        reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    struct          reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    mutable         reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    id              reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    if              reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    while           reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    for             reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    break           reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    continue        reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    return          reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    puntoycoma      reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    tipo            reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    parentesis_B    reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    coma            reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    corchete_B      reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)
    dospuntos       reduce using rule 68 (ARREGLO -> corchete_A EXP corchete_B .)


state 132

    (83) FOR -> for id in E . BLOQUE
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E
    (85) RANGO -> E . dospuntos E
    (14) BLOQUE -> . INS end
    (15) BLOQUE -> . end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) I -> . ASIGNACION
    (4) I -> . FUNCION
    (5) I -> . STRUCT
    (6) I -> . LLAMADA
    (7) I -> . IF
    (8) I -> . WHILE
    (9) I -> . FOR
    (10) I -> . BREAK
    (11) I -> . CONTINUE
    (12) I -> . RETURN
    (13) I -> . error puntoycoma
    (21) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (22) ASIGNACION -> . global id igual ASIGNACION_VALOR
    (23) ASIGNACION -> . global id
    (24) ASIGNACION -> . local id igual ASIGNACION_VALOR
    (25) ASIGNACION -> . local id
    (28) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (29) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (33) STRUCT -> . struct id ATR end
    (34) STRUCT -> . mutable struct id ATR end
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (75) IF -> . if E BLOQUE
    (76) IF -> . if E BLOQUE ELSEIF
    (77) IF -> . if E BLOQUE ELSE
    (82) WHILE -> . while E BLOQUE
    (83) FOR -> . for id in E BLOQUE
    (84) FOR -> . for id in RANGO BLOQUE
    (86) BREAK -> . break
    (87) CONTINUE -> . continue
    (88) RETURN -> . return E
    (89) RETURN -> . return
    (73) ID -> . ID punto id
    (74) ID -> . id

    mas             shift and go to state 72
    menos           shift and go to state 73
    asterisco       shift and go to state 74
    barra           shift and go to state 75
    caret           shift and go to state 76
    modulo          shift and go to state 77
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85
    dospuntos       shift and go to state 150
    end             shift and go to state 87
    error           shift and go to state 13
    global          shift and go to state 15
    local           shift and go to state 17
    function        shift and go to state 18
    struct          shift and go to state 19
    mutable         shift and go to state 20
    id              shift and go to state 16
    if              shift and go to state 21
    while           shift and go to state 22
    for             shift and go to state 23
    break           shift and go to state 24
    continue        shift and go to state 25
    return          shift and go to state 26

    BLOQUE                         shift and go to state 149
    INS                            shift and go to state 86
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 3
    FUNCION                        shift and go to state 4
    STRUCT                         shift and go to state 5
    LLAMADA                        shift and go to state 6
    IF                             shift and go to state 7
    WHILE                          shift and go to state 8
    FOR                            shift and go to state 9
    BREAK                          shift and go to state 10
    CONTINUE                       shift and go to state 11
    RETURN                         shift and go to state 12
    ID                             shift and go to state 14

state 133

    (84) FOR -> for id in RANGO . BLOQUE
    (14) BLOQUE -> . INS end
    (15) BLOQUE -> . end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) I -> . ASIGNACION
    (4) I -> . FUNCION
    (5) I -> . STRUCT
    (6) I -> . LLAMADA
    (7) I -> . IF
    (8) I -> . WHILE
    (9) I -> . FOR
    (10) I -> . BREAK
    (11) I -> . CONTINUE
    (12) I -> . RETURN
    (13) I -> . error puntoycoma
    (21) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (22) ASIGNACION -> . global id igual ASIGNACION_VALOR
    (23) ASIGNACION -> . global id
    (24) ASIGNACION -> . local id igual ASIGNACION_VALOR
    (25) ASIGNACION -> . local id
    (28) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (29) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (33) STRUCT -> . struct id ATR end
    (34) STRUCT -> . mutable struct id ATR end
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (75) IF -> . if E BLOQUE
    (76) IF -> . if E BLOQUE ELSEIF
    (77) IF -> . if E BLOQUE ELSE
    (82) WHILE -> . while E BLOQUE
    (83) FOR -> . for id in E BLOQUE
    (84) FOR -> . for id in RANGO BLOQUE
    (86) BREAK -> . break
    (87) CONTINUE -> . continue
    (88) RETURN -> . return E
    (89) RETURN -> . return
    (73) ID -> . ID punto id
    (74) ID -> . id

    end             shift and go to state 87
    error           shift and go to state 13
    global          shift and go to state 15
    local           shift and go to state 17
    function        shift and go to state 18
    struct          shift and go to state 19
    mutable         shift and go to state 20
    id              shift and go to state 16
    if              shift and go to state 21
    while           shift and go to state 22
    for             shift and go to state 23
    break           shift and go to state 24
    continue        shift and go to state 25
    return          shift and go to state 26

    BLOQUE                         shift and go to state 151
    INS                            shift and go to state 86
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 3
    FUNCION                        shift and go to state 4
    STRUCT                         shift and go to state 5
    LLAMADA                        shift and go to state 6
    IF                             shift and go to state 7
    WHILE                          shift and go to state 8
    FOR                            shift and go to state 9
    BREAK                          shift and go to state 10
    CONTINUE                       shift and go to state 11
    RETURN                         shift and go to state 12
    ID                             shift and go to state 14

state 134

    (27) ASIGNACION_VALOR -> E tipo TIPO .

    puntoycoma      reduce using rule 27 (ASIGNACION_VALOR -> E tipo TIPO .)


state 135

    (16) TIPO -> tipo_int64 .

    puntoycoma      reduce using rule 16 (TIPO -> tipo_int64 .)


state 136

    (17) TIPO -> tipo_float64 .

    puntoycoma      reduce using rule 17 (TIPO -> tipo_float64 .)


state 137

    (18) TIPO -> tipo_bool .

    puntoycoma      reduce using rule 18 (TIPO -> tipo_bool .)


state 138

    (19) TIPO -> tipo_char .

    puntoycoma      reduce using rule 19 (TIPO -> tipo_char .)


state 139

    (20) TIPO -> tipo_string .

    puntoycoma      reduce using rule 20 (TIPO -> tipo_string .)


state 140

    (39) EXP -> EXP coma E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    parentesis_B    reduce using rule 39 (EXP -> EXP coma E .)
    coma            reduce using rule 39 (EXP -> EXP coma E .)
    corchete_B      reduce using rule 39 (EXP -> EXP coma E .)
    mas             shift and go to state 72
    menos           shift and go to state 73
    asterisco       shift and go to state 74
    barra           shift and go to state 75
    caret           shift and go to state 76
    modulo          shift and go to state 77
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85


state 141

    (28) FUNCION -> function id parentesis_A PAR parentesis_B . BLOQUE
    (14) BLOQUE -> . INS end
    (15) BLOQUE -> . end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) I -> . ASIGNACION
    (4) I -> . FUNCION
    (5) I -> . STRUCT
    (6) I -> . LLAMADA
    (7) I -> . IF
    (8) I -> . WHILE
    (9) I -> . FOR
    (10) I -> . BREAK
    (11) I -> . CONTINUE
    (12) I -> . RETURN
    (13) I -> . error puntoycoma
    (21) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (22) ASIGNACION -> . global id igual ASIGNACION_VALOR
    (23) ASIGNACION -> . global id
    (24) ASIGNACION -> . local id igual ASIGNACION_VALOR
    (25) ASIGNACION -> . local id
    (28) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (29) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (33) STRUCT -> . struct id ATR end
    (34) STRUCT -> . mutable struct id ATR end
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (75) IF -> . if E BLOQUE
    (76) IF -> . if E BLOQUE ELSEIF
    (77) IF -> . if E BLOQUE ELSE
    (82) WHILE -> . while E BLOQUE
    (83) FOR -> . for id in E BLOQUE
    (84) FOR -> . for id in RANGO BLOQUE
    (86) BREAK -> . break
    (87) CONTINUE -> . continue
    (88) RETURN -> . return E
    (89) RETURN -> . return
    (73) ID -> . ID punto id
    (74) ID -> . id

    end             shift and go to state 87
    error           shift and go to state 13
    global          shift and go to state 15
    local           shift and go to state 17
    function        shift and go to state 18
    struct          shift and go to state 19
    mutable         shift and go to state 20
    id              shift and go to state 16
    if              shift and go to state 21
    while           shift and go to state 22
    for             shift and go to state 23
    break           shift and go to state 24
    continue        shift and go to state 25
    return          shift and go to state 26

    BLOQUE                         shift and go to state 152
    INS                            shift and go to state 86
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 3
    FUNCION                        shift and go to state 4
    STRUCT                         shift and go to state 5
    LLAMADA                        shift and go to state 6
    IF                             shift and go to state 7
    WHILE                          shift and go to state 8
    FOR                            shift and go to state 9
    BREAK                          shift and go to state 10
    CONTINUE                       shift and go to state 11
    RETURN                         shift and go to state 12
    ID                             shift and go to state 14

state 142

    (30) PAR -> PAR coma . P
    (32) P -> . id

    id              shift and go to state 101

    P                              shift and go to state 153

state 143

    (29) FUNCION -> function id parentesis_A parentesis_B BLOQUE .

    puntoycoma      reduce using rule 29 (FUNCION -> function id parentesis_A parentesis_B BLOQUE .)


state 144

    (37) A -> id tipo TIPO . puntoycoma

    puntoycoma      shift and go to state 154


state 145

    (34) STRUCT -> mutable struct id ATR end .

    puntoycoma      reduce using rule 34 (STRUCT -> mutable struct id ATR end .)


state 146

    (78) ELSEIF -> elseif E . BLOQUE
    (79) ELSEIF -> elseif E . BLOQUE ELSEIF
    (80) ELSEIF -> elseif E . BLOQUE ELSE
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E
    (14) BLOQUE -> . INS end
    (15) BLOQUE -> . end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) I -> . ASIGNACION
    (4) I -> . FUNCION
    (5) I -> . STRUCT
    (6) I -> . LLAMADA
    (7) I -> . IF
    (8) I -> . WHILE
    (9) I -> . FOR
    (10) I -> . BREAK
    (11) I -> . CONTINUE
    (12) I -> . RETURN
    (13) I -> . error puntoycoma
    (21) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (22) ASIGNACION -> . global id igual ASIGNACION_VALOR
    (23) ASIGNACION -> . global id
    (24) ASIGNACION -> . local id igual ASIGNACION_VALOR
    (25) ASIGNACION -> . local id
    (28) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (29) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (33) STRUCT -> . struct id ATR end
    (34) STRUCT -> . mutable struct id ATR end
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (75) IF -> . if E BLOQUE
    (76) IF -> . if E BLOQUE ELSEIF
    (77) IF -> . if E BLOQUE ELSE
    (82) WHILE -> . while E BLOQUE
    (83) FOR -> . for id in E BLOQUE
    (84) FOR -> . for id in RANGO BLOQUE
    (86) BREAK -> . break
    (87) CONTINUE -> . continue
    (88) RETURN -> . return E
    (89) RETURN -> . return
    (73) ID -> . ID punto id
    (74) ID -> . id

    mas             shift and go to state 72
    menos           shift and go to state 73
    asterisco       shift and go to state 74
    barra           shift and go to state 75
    caret           shift and go to state 76
    modulo          shift and go to state 77
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85
    end             shift and go to state 87
    error           shift and go to state 13
    global          shift and go to state 15
    local           shift and go to state 17
    function        shift and go to state 18
    struct          shift and go to state 19
    mutable         shift and go to state 20
    id              shift and go to state 16
    if              shift and go to state 21
    while           shift and go to state 22
    for             shift and go to state 23
    break           shift and go to state 24
    continue        shift and go to state 25
    return          shift and go to state 26

    BLOQUE                         shift and go to state 155
    INS                            shift and go to state 86
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 3
    FUNCION                        shift and go to state 4
    STRUCT                         shift and go to state 5
    LLAMADA                        shift and go to state 6
    IF                             shift and go to state 7
    WHILE                          shift and go to state 8
    FOR                            shift and go to state 9
    BREAK                          shift and go to state 10
    CONTINUE                       shift and go to state 11
    RETURN                         shift and go to state 12
    ID                             shift and go to state 14

state 147

    (81) ELSE -> else BLOQUE .

    puntoycoma      reduce using rule 81 (ELSE -> else BLOQUE .)


state 148

    (72) ACCESO_ARREGLO -> id corchete_A E corchete_B .

    mas             reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    menos           reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    asterisco       reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    barra           reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    caret           reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    modulo          reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    mayor           reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    menor           reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    mayor_igual     reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    menor_igual     reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    igualacion      reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    diferenciacion  reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    or              reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    and             reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    end             reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    error           reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    global          reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    local           reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    function        reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    struct          reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    mutable         reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    id              reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    if              reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    while           reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    for             reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    break           reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    continue        reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    return          reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    puntoycoma      reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    tipo            reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    parentesis_B    reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    coma            reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    corchete_B      reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)
    dospuntos       reduce using rule 72 (ACCESO_ARREGLO -> id corchete_A E corchete_B .)


state 149

    (83) FOR -> for id in E BLOQUE .

    puntoycoma      reduce using rule 83 (FOR -> for id in E BLOQUE .)


state 150

    (85) RANGO -> E dospuntos . E
    (41) E -> . E mas E
    (42) E -> . E menos E
    (43) E -> . E asterisco E
    (44) E -> . E barra E
    (45) E -> . E caret E
    (46) E -> . E modulo E
    (47) E -> . menos E
    (48) E -> . E mayor E
    (49) E -> . E menor E
    (50) E -> . E mayor_igual E
    (51) E -> . E menor_igual E
    (52) E -> . E igualacion E
    (53) E -> . E diferenciacion E
    (54) E -> . E or E
    (55) E -> . E and E
    (56) E -> . not E
    (57) E -> . parentesis_A E parentesis_B
    (58) E -> . LLAMADA
    (59) E -> . ACCESO_ARREGLO
    (60) E -> . ARREGLO
    (61) E -> . ID
    (62) E -> . int64
    (63) E -> . float64
    (64) E -> . bool
    (65) E -> . char
    (66) E -> . string
    (67) E -> . nothing
    (70) LLAMADA -> . id parentesis_A EXP parentesis_B
    (71) LLAMADA -> . id parentesis_A parentesis_B
    (72) ACCESO_ARREGLO -> . id corchete_A E corchete_B
    (68) ARREGLO -> . corchete_A EXP corchete_B
    (69) ARREGLO -> . corchete_A corchete_B
    (73) ID -> . ID punto id
    (74) ID -> . id

    menos           shift and go to state 39
    not             shift and go to state 40
    parentesis_A    shift and go to state 41
    int64           shift and go to state 46
    float64         shift and go to state 47
    bool            shift and go to state 48
    char            shift and go to state 49
    string          shift and go to state 50
    nothing         shift and go to state 51
    id              shift and go to state 52
    corchete_A      shift and go to state 53

    E                              shift and go to state 156
    LLAMADA                        shift and go to state 42
    ACCESO_ARREGLO                 shift and go to state 43
    ARREGLO                        shift and go to state 44
    ID                             shift and go to state 45

state 151

    (84) FOR -> for id in RANGO BLOQUE .

    puntoycoma      reduce using rule 84 (FOR -> for id in RANGO BLOQUE .)


state 152

    (28) FUNCION -> function id parentesis_A PAR parentesis_B BLOQUE .

    puntoycoma      reduce using rule 28 (FUNCION -> function id parentesis_A PAR parentesis_B BLOQUE .)


state 153

    (30) PAR -> PAR coma P .

    parentesis_B    reduce using rule 30 (PAR -> PAR coma P .)
    coma            reduce using rule 30 (PAR -> PAR coma P .)


state 154

    (37) A -> id tipo TIPO puntoycoma .

    end             reduce using rule 37 (A -> id tipo TIPO puntoycoma .)
    id              reduce using rule 37 (A -> id tipo TIPO puntoycoma .)


state 155

    (78) ELSEIF -> elseif E BLOQUE .
    (79) ELSEIF -> elseif E BLOQUE . ELSEIF
    (80) ELSEIF -> elseif E BLOQUE . ELSE
    (78) ELSEIF -> . elseif E BLOQUE
    (79) ELSEIF -> . elseif E BLOQUE ELSEIF
    (80) ELSEIF -> . elseif E BLOQUE ELSE
    (81) ELSE -> . else BLOQUE

    puntoycoma      reduce using rule 78 (ELSEIF -> elseif E BLOQUE .)
    elseif          shift and go to state 112
    else            shift and go to state 113

    ELSEIF                         shift and go to state 157
    ELSE                           shift and go to state 158

state 156

    (85) RANGO -> E dospuntos E .
    (41) E -> E . mas E
    (42) E -> E . menos E
    (43) E -> E . asterisco E
    (44) E -> E . barra E
    (45) E -> E . caret E
    (46) E -> E . modulo E
    (48) E -> E . mayor E
    (49) E -> E . menor E
    (50) E -> E . mayor_igual E
    (51) E -> E . menor_igual E
    (52) E -> E . igualacion E
    (53) E -> E . diferenciacion E
    (54) E -> E . or E
    (55) E -> E . and E

    end             reduce using rule 85 (RANGO -> E dospuntos E .)
    error           reduce using rule 85 (RANGO -> E dospuntos E .)
    global          reduce using rule 85 (RANGO -> E dospuntos E .)
    local           reduce using rule 85 (RANGO -> E dospuntos E .)
    function        reduce using rule 85 (RANGO -> E dospuntos E .)
    struct          reduce using rule 85 (RANGO -> E dospuntos E .)
    mutable         reduce using rule 85 (RANGO -> E dospuntos E .)
    id              reduce using rule 85 (RANGO -> E dospuntos E .)
    if              reduce using rule 85 (RANGO -> E dospuntos E .)
    while           reduce using rule 85 (RANGO -> E dospuntos E .)
    for             reduce using rule 85 (RANGO -> E dospuntos E .)
    break           reduce using rule 85 (RANGO -> E dospuntos E .)
    continue        reduce using rule 85 (RANGO -> E dospuntos E .)
    return          reduce using rule 85 (RANGO -> E dospuntos E .)
    mas             shift and go to state 72
    menos           shift and go to state 73
    asterisco       shift and go to state 74
    barra           shift and go to state 75
    caret           shift and go to state 76
    modulo          shift and go to state 77
    mayor           shift and go to state 78
    menor           shift and go to state 79
    mayor_igual     shift and go to state 80
    menor_igual     shift and go to state 81
    igualacion      shift and go to state 82
    diferenciacion  shift and go to state 83
    or              shift and go to state 84
    and             shift and go to state 85


state 157

    (79) ELSEIF -> elseif E BLOQUE ELSEIF .

    puntoycoma      reduce using rule 79 (ELSEIF -> elseif E BLOQUE ELSEIF .)


state 158

    (80) ELSEIF -> elseif E BLOQUE ELSE .

    puntoycoma      reduce using rule 80 (ELSEIF -> elseif E BLOQUE ELSE .)

