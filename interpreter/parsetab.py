
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftop_rangoleftorleftandleftigualaciondiferenciacionleftmenormenor_igualmayormayor_igualleftmasmenosleftasteriscobarramodulorightcaretrightop_negacionnotleftop_llamadaleftop_accesononassocop_agrupacionBool Char Float64 Int64 Nothing String and asterisco barra bool break caret char coma continue corchete_A corchete_B diferenciacion dospuntos else elseif end float64 for function global id if igual igualacion in int64 local mas mayor mayor_igual menor menor_igual menos modulo mutable not or parentesis_A parentesis_B punto puntoycoma return string struct tipo while\n  INS : INS I puntoycoma\n      | I puntoycoma\n  \n  INS : INS error puntoycoma\n      | error puntoycoma\n  \n  I : ASIGNACION\n    | FUNCION\n    | STRUCT\n    | LLAMADA\n    | IF\n    | WHILE\n    | FOR\n    | BREAK\n    | CONTINUE\n    | RETURN\n  \n  BLOQUE  : INS end\n  \n  BLOQUE_ABIERTO  : INS\n  \n  TIPO  : Int64\n        | Float64\n        | Bool\n        | Char\n        | String\n  \n  SCOPE : local\n        | global\n  \n  ASIGNACION  : ID igual ASIGNACION_VALOR\n              | SCOPE id igual ASIGNACION_VALOR\n              | SCOPE id\n  \n  ASIGNACION_VALOR  : E\n                    | E tipo TIPO\n  \n  ID  : ID punto id\n      | ID corchete_A E corchete_B\n      | id\n  \n  FUNCION : function id parentesis_A PAR parentesis_B BLOQUE\n          | function id parentesis_A parentesis_B BLOQUE\n  \n  PAR : PAR coma P\n      | P\n  \n  P : id\n  \n  STRUCT  : struct id ATR end\n          | mutable struct id ATR end\n  \n  ATR : ATR A\n      | A\n  \n  A : id tipo TIPO puntoycoma\n    | id puntoycoma\n  \n  EXP : EXP coma E\n      | E\n  \n  E : E mas E\n    | E menos E\n    | E asterisco E\n    | E barra E\n    | E caret E\n    | E modulo E\n    | menos E                     %prec op_negacion\n    | E mayor E\n    | E menor E\n    | E mayor_igual E\n    | E menor_igual E\n    | E igualacion E\n    | E diferenciacion E\n    | E or E\n    | E and E\n    | not E\n    | ID                          %prec op_acceso\n    | parentesis_A E parentesis_B %prec op_agrupacion\n    | LLAMADA                     %prec op_llamada\n    | RANGO                       %prec op_rango\n    | ARREGLO\n    | int64\n    | float64\n    | bool\n    | char\n    | string\n    | Nothing\n  \n  ARREGLO : corchete_A EXP corchete_B\n          | corchete_A corchete_B\n  \n  LLAMADA : id parentesis_A EXP parentesis_B\n          | id parentesis_A parentesis_B\n  \n  IF  : if E BLOQUE\n      | if E BLOQUE_ABIERTO ELSE\n      | if E BLOQUE_ABIERTO ELSEIF\n  \n  ELSEIF  : elseif E BLOQUE\n          | elseif E BLOQUE_ABIERTO ELSEIF\n          | elseif E BLOQUE_ABIERTO ELSE\n  \n  ELSE : else BLOQUE\n  \n  WHILE : while E BLOQUE\n  \n  FOR : for id in E BLOQUE\n  \n  RANGO : E dospuntos E\n        | dospuntos\n  \n  BREAK : break\n  \n  CONTINUE : continue\n  \n  RETURN  : return E\n          | return\n  '
    
_lr_action_items = {'error':([0,1,30,31,40,43,45,46,47,48,49,50,51,52,53,54,56,57,60,61,64,68,92,93,94,97,99,102,104,108,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,145,151,],[3,29,-2,-4,3,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,3,-1,-3,-29,-75,29,-51,-60,-73,29,-30,-74,3,3,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,3,3,3,]),'function':([0,1,30,31,40,43,45,46,47,48,49,50,51,52,53,54,56,57,60,61,64,68,92,93,94,97,99,102,104,108,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,145,151,],[17,17,-2,-4,17,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,17,-1,-3,-29,-75,17,-51,-60,-73,17,-30,-74,17,17,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,17,17,17,]),'struct':([0,1,19,30,31,40,43,45,46,47,48,49,50,51,52,53,54,56,57,60,61,64,68,92,93,94,97,99,102,104,108,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,145,151,],[18,18,39,-2,-4,18,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,18,-1,-3,-29,-75,18,-51,-60,-73,18,-30,-74,18,18,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,18,18,18,]),'mutable':([0,1,30,31,40,43,45,46,47,48,49,50,51,52,53,54,56,57,60,61,64,68,92,93,94,97,99,102,104,108,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,145,151,],[19,19,-2,-4,19,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,19,-1,-3,-29,-75,19,-51,-60,-73,19,-30,-74,19,19,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,19,19,19,]),'id':([0,1,15,17,18,20,21,22,25,26,27,30,31,32,33,34,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,66,68,70,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,99,100,102,104,105,108,111,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,145,146,151,155,],[16,16,35,37,38,54,54,58,54,-22,-23,-2,-4,54,64,54,54,71,74,16,54,54,-61,54,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,54,-86,16,-1,-3,-29,54,-75,106,71,-40,71,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,16,-51,-60,-73,16,54,-30,-74,54,16,-42,-39,71,16,54,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,16,16,106,16,-41,]),'if':([0,1,30,31,40,43,45,46,47,48,49,50,51,52,53,54,56,57,60,61,64,68,92,93,94,97,99,102,104,108,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,145,151,],[20,20,-2,-4,20,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,20,-1,-3,-29,-75,20,-51,-60,-73,20,-30,-74,20,20,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,20,20,20,]),'while':([0,1,30,31,40,43,45,46,47,48,49,50,51,52,53,54,56,57,60,61,64,68,92,93,94,97,99,102,104,108,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,145,151,],[21,21,-2,-4,21,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,21,-1,-3,-29,-75,21,-51,-60,-73,21,-30,-74,21,21,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,21,21,21,]),'for':([0,1,30,31,40,43,45,46,47,48,49,50,51,52,53,54,56,57,60,61,64,68,92,93,94,97,99,102,104,108,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,145,151,],[22,22,-2,-4,22,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,22,-1,-3,-29,-75,22,-51,-60,-73,22,-30,-74,22,22,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,22,22,22,]),'break':([0,1,30,31,40,43,45,46,47,48,49,50,51,52,53,54,56,57,60,61,64,68,92,93,94,97,99,102,104,108,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,145,151,],[23,23,-2,-4,23,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,23,-1,-3,-29,-75,23,-51,-60,-73,23,-30,-74,23,23,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,23,23,23,]),'continue':([0,1,30,31,40,43,45,46,47,48,49,50,51,52,53,54,56,57,60,61,64,68,92,93,94,97,99,102,104,108,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,145,151,],[24,24,-2,-4,24,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,24,-1,-3,-29,-75,24,-51,-60,-73,24,-30,-74,24,24,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,24,24,24,]),'return':([0,1,30,31,40,43,45,46,47,48,49,50,51,52,53,54,56,57,60,61,64,68,92,93,94,97,99,102,104,108,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,145,151,],[25,25,-2,-4,25,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,25,-1,-3,-29,-75,25,-51,-60,-73,25,-30,-74,25,25,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,25,25,25,]),'local':([0,1,30,31,40,43,45,46,47,48,49,50,51,52,53,54,56,57,60,61,64,68,92,93,94,97,99,102,104,108,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,145,151,],[26,26,-2,-4,26,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,26,-1,-3,-29,-75,26,-51,-60,-73,26,-30,-74,26,26,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,26,26,26,]),'global':([0,1,30,31,40,43,45,46,47,48,49,50,51,52,53,54,56,57,60,61,64,68,92,93,94,97,99,102,104,108,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,145,151,],[27,27,-2,-4,27,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,27,-1,-3,-29,-75,27,-51,-60,-73,27,-30,-74,27,27,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,27,27,27,]),'$end':([1,30,31,60,61,],[0,-2,-4,-1,-3,]),'puntoycoma':([2,3,4,5,6,7,8,9,10,11,12,13,23,24,25,28,29,35,43,45,46,47,48,49,50,51,52,53,54,56,59,62,63,64,68,71,75,93,94,97,98,102,103,104,112,115,116,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,147,148,149,150,152,153,156,158,159,],[30,31,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-87,-88,-90,60,61,-26,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,-89,-24,-27,-29,-75,111,-76,-51,-60,-73,-83,-30,-25,-74,-37,-77,-78,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-15,-62,-72,-28,-17,-18,-19,-20,-21,-33,155,-38,-82,-84,-32,-79,-80,-81,]),'igual':([14,16,35,64,102,],[32,-31,66,-29,-30,]),'punto':([14,16,43,54,64,102,],[33,-31,33,-31,-29,-30,]),'corchete_A':([14,16,20,21,25,32,34,36,41,42,43,44,54,55,64,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,102,105,118,],[34,-31,55,55,55,55,55,55,55,55,34,55,-31,55,-29,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-30,55,55,]),'parentesis_A':([16,20,21,25,32,34,36,37,41,42,44,54,55,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,105,118,],[36,44,44,44,44,44,44,70,44,44,44,36,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'menos':([20,21,25,32,34,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,63,64,65,66,68,69,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,97,100,102,104,105,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,144,151,],[41,41,41,41,41,41,78,41,41,-61,41,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,41,-86,78,78,78,-29,78,41,-75,78,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-51,-60,78,-73,41,-30,-74,41,41,-45,-46,-47,-48,-49,-50,78,78,78,78,78,78,78,78,78,-62,-72,78,78,78,]),'not':([20,21,25,32,34,36,41,42,44,55,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,105,118,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'int64':([20,21,25,32,34,36,41,42,44,55,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,105,118,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'float64':([20,21,25,32,34,36,41,42,44,55,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,105,118,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'bool':([20,21,25,32,34,36,41,42,44,55,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,105,118,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'char':([20,21,25,32,34,36,41,42,44,55,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,105,118,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'string':([20,21,25,32,34,36,41,42,44,55,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,105,118,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'Nothing':([20,21,25,32,34,36,41,42,44,55,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,105,118,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'dospuntos':([20,21,25,32,34,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,63,64,65,66,68,69,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,97,100,102,104,105,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,144,151,],[56,56,56,56,56,56,91,56,56,-61,56,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,56,-86,91,91,91,-29,91,56,-75,91,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-51,-60,91,-73,56,-30,-74,56,56,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,91,-62,-72,91,91,91,]),'end':([30,31,60,61,72,73,92,99,111,113,114,155,],[-2,-4,-1,-3,112,-40,134,134,-42,-39,149,-41,]),'else':([30,31,60,61,76,92,157,],[-2,-4,-1,-3,117,-16,117,]),'elseif':([30,31,60,61,76,92,157,],[-2,-4,-1,-3,118,-16,118,]),'parentesis_B':([36,43,45,46,47,48,49,50,51,52,53,54,56,64,67,68,69,70,93,94,95,97,102,104,106,107,109,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,144,154,],[68,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,-29,104,-75,-44,108,-51,-60,135,-73,-30,-74,-36,145,-35,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,-43,-34,]),'mas':([40,43,45,46,47,48,49,50,51,52,53,54,56,57,59,63,64,65,68,69,93,94,95,97,102,104,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,144,151,],[77,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,77,77,77,-29,77,-75,77,-51,-60,77,-73,-30,-74,-45,-46,-47,-48,-49,-50,77,77,77,77,77,77,77,77,77,-62,-72,77,77,77,]),'asterisco':([40,43,45,46,47,48,49,50,51,52,53,54,56,57,59,63,64,65,68,69,93,94,95,97,102,104,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,144,151,],[79,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,79,79,79,-29,79,-75,79,-51,-60,79,-73,-30,-74,79,79,-47,-48,-49,-50,79,79,79,79,79,79,79,79,79,-62,-72,79,79,79,]),'barra':([40,43,45,46,47,48,49,50,51,52,53,54,56,57,59,63,64,65,68,69,93,94,95,97,102,104,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,144,151,],[80,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,80,80,80,-29,80,-75,80,-51,-60,80,-73,-30,-74,80,80,-47,-48,-49,-50,80,80,80,80,80,80,80,80,80,-62,-72,80,80,80,]),'caret':([40,43,45,46,47,48,49,50,51,52,53,54,56,57,59,63,64,65,68,69,93,94,95,97,102,104,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,144,151,],[81,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,81,81,81,-29,81,-75,81,-51,-60,81,-73,-30,-74,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-62,-72,81,81,81,]),'modulo':([40,43,45,46,47,48,49,50,51,52,53,54,56,57,59,63,64,65,68,69,93,94,95,97,102,104,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,144,151,],[82,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,82,82,82,-29,82,-75,82,-51,-60,82,-73,-30,-74,82,82,-47,-48,-49,-50,82,82,82,82,82,82,82,82,82,-62,-72,82,82,82,]),'mayor':([40,43,45,46,47,48,49,50,51,52,53,54,56,57,59,63,64,65,68,69,93,94,95,97,102,104,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,144,151,],[83,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,83,83,83,-29,83,-75,83,-51,-60,83,-73,-30,-74,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,83,83,83,83,83,-62,-72,83,83,83,]),'menor':([40,43,45,46,47,48,49,50,51,52,53,54,56,57,59,63,64,65,68,69,93,94,95,97,102,104,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,144,151,],[84,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,84,84,84,-29,84,-75,84,-51,-60,84,-73,-30,-74,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,84,84,84,84,84,-62,-72,84,84,84,]),'mayor_igual':([40,43,45,46,47,48,49,50,51,52,53,54,56,57,59,63,64,65,68,69,93,94,95,97,102,104,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,144,151,],[85,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,85,85,85,-29,85,-75,85,-51,-60,85,-73,-30,-74,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,85,85,85,85,85,-62,-72,85,85,85,]),'menor_igual':([40,43,45,46,47,48,49,50,51,52,53,54,56,57,59,63,64,65,68,69,93,94,95,97,102,104,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,144,151,],[86,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,86,86,86,-29,86,-75,86,-51,-60,86,-73,-30,-74,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,86,86,86,86,86,-62,-72,86,86,86,]),'igualacion':([40,43,45,46,47,48,49,50,51,52,53,54,56,57,59,63,64,65,68,69,93,94,95,97,102,104,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,144,151,],[87,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,87,87,87,-29,87,-75,87,-51,-60,87,-73,-30,-74,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,87,87,87,-62,-72,87,87,87,]),'diferenciacion':([40,43,45,46,47,48,49,50,51,52,53,54,56,57,59,63,64,65,68,69,93,94,95,97,102,104,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,144,151,],[88,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,88,88,88,-29,88,-75,88,-51,-60,88,-73,-30,-74,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,88,88,88,-62,-72,88,88,88,]),'or':([40,43,45,46,47,48,49,50,51,52,53,54,56,57,59,63,64,65,68,69,93,94,95,97,102,104,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,144,151,],[89,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,89,89,89,-29,89,-75,89,-51,-60,89,-73,-30,-74,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,89,-62,-72,89,89,89,]),'and':([40,43,45,46,47,48,49,50,51,52,53,54,56,57,59,63,64,65,68,69,93,94,95,97,102,104,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,144,151,],[90,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,90,90,90,-29,90,-75,90,-51,-60,90,-73,-30,-74,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,90,-59,90,-62,-72,90,90,90,]),'tipo':([43,45,46,47,48,49,50,51,52,53,54,56,63,64,68,71,93,94,97,102,104,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,],[-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,101,-29,-75,110,-51,-60,-73,-30,-74,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,]),'corchete_B':([43,45,46,47,48,49,50,51,52,53,54,55,56,64,65,68,69,93,94,96,97,102,104,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,144,],[-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,97,-86,-29,102,-75,-44,-51,-60,136,-73,-30,-74,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,-43,]),'coma':([43,45,46,47,48,49,50,51,52,53,54,56,64,67,68,69,93,94,96,97,102,104,106,107,109,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,144,154,],[-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,-31,-86,-29,105,-75,-44,-51,-60,105,-73,-30,-74,-36,146,-35,-45,-46,-47,-48,-49,-50,-52,-53,-54,-55,-56,-57,-58,-59,-85,-62,-72,-43,-34,]),'in':([58,],[100,]),'Int64':([101,110,],[139,139,]),'Float64':([101,110,],[140,140,]),'Bool':([101,110,],[141,141,]),'Char':([101,110,],[142,142,]),'String':([101,110,],[143,143,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INS':([0,40,57,108,117,137,145,151,],[1,92,99,99,99,99,99,92,]),'I':([0,1,40,57,92,99,108,117,137,145,151,],[2,28,2,2,28,28,2,2,2,2,2,]),'ASIGNACION':([0,1,40,57,92,99,108,117,137,145,151,],[4,4,4,4,4,4,4,4,4,4,4,]),'FUNCION':([0,1,40,57,92,99,108,117,137,145,151,],[5,5,5,5,5,5,5,5,5,5,5,]),'STRUCT':([0,1,40,57,92,99,108,117,137,145,151,],[6,6,6,6,6,6,6,6,6,6,6,]),'LLAMADA':([0,1,20,21,25,32,34,36,40,41,42,44,55,57,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,99,100,105,108,117,118,137,145,151,],[7,7,45,45,45,45,45,45,7,45,45,45,45,7,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,7,7,45,45,7,7,45,7,7,7,]),'IF':([0,1,40,57,92,99,108,117,137,145,151,],[8,8,8,8,8,8,8,8,8,8,8,]),'WHILE':([0,1,40,57,92,99,108,117,137,145,151,],[9,9,9,9,9,9,9,9,9,9,9,]),'FOR':([0,1,40,57,92,99,108,117,137,145,151,],[10,10,10,10,10,10,10,10,10,10,10,]),'BREAK':([0,1,40,57,92,99,108,117,137,145,151,],[11,11,11,11,11,11,11,11,11,11,11,]),'CONTINUE':([0,1,40,57,92,99,108,117,137,145,151,],[12,12,12,12,12,12,12,12,12,12,12,]),'RETURN':([0,1,40,57,92,99,108,117,137,145,151,],[13,13,13,13,13,13,13,13,13,13,13,]),'ID':([0,1,20,21,25,32,34,36,40,41,42,44,55,57,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,99,100,105,108,117,118,137,145,151,],[14,14,43,43,43,43,43,43,14,43,43,43,43,14,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,14,14,43,43,14,14,43,14,14,14,]),'SCOPE':([0,1,40,57,92,99,108,117,137,145,151,],[15,15,15,15,15,15,15,15,15,15,15,]),'E':([20,21,25,32,34,36,41,42,44,55,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,105,118,],[40,57,59,63,65,69,93,94,95,69,63,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,137,144,151,]),'RANGO':([20,21,25,32,34,36,41,42,44,55,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,105,118,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'ARREGLO':([20,21,25,32,34,36,41,42,44,55,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,105,118,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'ASIGNACION_VALOR':([32,66,],[62,103,]),'EXP':([36,55,],[67,96,]),'ATR':([38,74,],[72,114,]),'A':([38,72,74,114,],[73,113,73,113,]),'BLOQUE':([40,57,108,117,137,145,151,],[75,98,147,150,152,153,156,]),'BLOQUE_ABIERTO':([40,151,],[76,157,]),'PAR':([70,],[107,]),'P':([70,146,],[109,154,]),'ELSE':([76,157,],[115,159,]),'ELSEIF':([76,157,],[116,158,]),'TIPO':([101,110,],[138,148,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INS","S'",1,None,None,None),
  ('INS -> INS I puntoycoma','INS',3,'p_INS','analyzer.py',205),
  ('INS -> I puntoycoma','INS',2,'p_INS','analyzer.py',206),
  ('INS -> INS error puntoycoma','INS',3,'p_INS_error','analyzer.py',216),
  ('INS -> error puntoycoma','INS',2,'p_INS_error','analyzer.py',217),
  ('I -> ASIGNACION','I',1,'p_I','analyzer.py',226),
  ('I -> FUNCION','I',1,'p_I','analyzer.py',227),
  ('I -> STRUCT','I',1,'p_I','analyzer.py',228),
  ('I -> LLAMADA','I',1,'p_I','analyzer.py',229),
  ('I -> IF','I',1,'p_I','analyzer.py',230),
  ('I -> WHILE','I',1,'p_I','analyzer.py',231),
  ('I -> FOR','I',1,'p_I','analyzer.py',232),
  ('I -> BREAK','I',1,'p_I','analyzer.py',233),
  ('I -> CONTINUE','I',1,'p_I','analyzer.py',234),
  ('I -> RETURN','I',1,'p_I','analyzer.py',235),
  ('BLOQUE -> INS end','BLOQUE',2,'p_BLOQUE','analyzer.py',241),
  ('BLOQUE_ABIERTO -> INS','BLOQUE_ABIERTO',1,'p_BLOQUE_ABIERTO','analyzer.py',247),
  ('TIPO -> Int64','TIPO',1,'p_TIPO','analyzer.py',253),
  ('TIPO -> Float64','TIPO',1,'p_TIPO','analyzer.py',254),
  ('TIPO -> Bool','TIPO',1,'p_TIPO','analyzer.py',255),
  ('TIPO -> Char','TIPO',1,'p_TIPO','analyzer.py',256),
  ('TIPO -> String','TIPO',1,'p_TIPO','analyzer.py',257),
  ('SCOPE -> local','SCOPE',1,'p_SCOPE','analyzer.py',263),
  ('SCOPE -> global','SCOPE',1,'p_SCOPE','analyzer.py',264),
  ('ASIGNACION -> ID igual ASIGNACION_VALOR','ASIGNACION',3,'p_ASIGNACION','analyzer.py',270),
  ('ASIGNACION -> SCOPE id igual ASIGNACION_VALOR','ASIGNACION',4,'p_ASIGNACION','analyzer.py',271),
  ('ASIGNACION -> SCOPE id','ASIGNACION',2,'p_ASIGNACION','analyzer.py',272),
  ('ASIGNACION_VALOR -> E','ASIGNACION_VALOR',1,'p_ASIGNACION_VALOR','analyzer.py',291),
  ('ASIGNACION_VALOR -> E tipo TIPO','ASIGNACION_VALOR',3,'p_ASIGNACION_VALOR','analyzer.py',292),
  ('ID -> ID punto id','ID',3,'p_ID','analyzer.py',301),
  ('ID -> ID corchete_A E corchete_B','ID',4,'p_ID','analyzer.py',302),
  ('ID -> id','ID',1,'p_ID','analyzer.py',303),
  ('FUNCION -> function id parentesis_A PAR parentesis_B BLOQUE','FUNCION',6,'p_FUNCION','analyzer.py',315),
  ('FUNCION -> function id parentesis_A parentesis_B BLOQUE','FUNCION',5,'p_FUNCION','analyzer.py',316),
  ('PAR -> PAR coma P','PAR',3,'p_PAR','analyzer.py',328),
  ('PAR -> P','PAR',1,'p_PAR','analyzer.py',329),
  ('P -> id','P',1,'p_P','analyzer.py',338),
  ('STRUCT -> struct id ATR end','STRUCT',4,'p_STRUCT','analyzer.py',344),
  ('STRUCT -> mutable struct id ATR end','STRUCT',5,'p_STRUCT','analyzer.py',345),
  ('ATR -> ATR A','ATR',2,'p_ATR','analyzer.py',358),
  ('ATR -> A','ATR',1,'p_ATR','analyzer.py',359),
  ('A -> id tipo TIPO puntoycoma','A',4,'p_A','analyzer.py',368),
  ('A -> id puntoycoma','A',2,'p_A','analyzer.py',369),
  ('EXP -> EXP coma E','EXP',3,'p_EXP','analyzer.py',380),
  ('EXP -> E','EXP',1,'p_EXP','analyzer.py',381),
  ('E -> E mas E','E',3,'p_E','analyzer.py',390),
  ('E -> E menos E','E',3,'p_E','analyzer.py',391),
  ('E -> E asterisco E','E',3,'p_E','analyzer.py',392),
  ('E -> E barra E','E',3,'p_E','analyzer.py',393),
  ('E -> E caret E','E',3,'p_E','analyzer.py',394),
  ('E -> E modulo E','E',3,'p_E','analyzer.py',395),
  ('E -> menos E','E',2,'p_E','analyzer.py',396),
  ('E -> E mayor E','E',3,'p_E','analyzer.py',397),
  ('E -> E menor E','E',3,'p_E','analyzer.py',398),
  ('E -> E mayor_igual E','E',3,'p_E','analyzer.py',399),
  ('E -> E menor_igual E','E',3,'p_E','analyzer.py',400),
  ('E -> E igualacion E','E',3,'p_E','analyzer.py',401),
  ('E -> E diferenciacion E','E',3,'p_E','analyzer.py',402),
  ('E -> E or E','E',3,'p_E','analyzer.py',403),
  ('E -> E and E','E',3,'p_E','analyzer.py',404),
  ('E -> not E','E',2,'p_E','analyzer.py',405),
  ('E -> ID','E',1,'p_E','analyzer.py',406),
  ('E -> parentesis_A E parentesis_B','E',3,'p_E','analyzer.py',407),
  ('E -> LLAMADA','E',1,'p_E','analyzer.py',408),
  ('E -> RANGO','E',1,'p_E','analyzer.py',409),
  ('E -> ARREGLO','E',1,'p_E','analyzer.py',410),
  ('E -> int64','E',1,'p_E','analyzer.py',411),
  ('E -> float64','E',1,'p_E','analyzer.py',412),
  ('E -> bool','E',1,'p_E','analyzer.py',413),
  ('E -> char','E',1,'p_E','analyzer.py',414),
  ('E -> string','E',1,'p_E','analyzer.py',415),
  ('E -> Nothing','E',1,'p_E','analyzer.py',416),
  ('ARREGLO -> corchete_A EXP corchete_B','ARREGLO',3,'p_ARREGLO','analyzer.py',442),
  ('ARREGLO -> corchete_A corchete_B','ARREGLO',2,'p_ARREGLO','analyzer.py',443),
  ('LLAMADA -> id parentesis_A EXP parentesis_B','LLAMADA',4,'p_LLAMADA','analyzer.py',451),
  ('LLAMADA -> id parentesis_A parentesis_B','LLAMADA',3,'p_LLAMADA','analyzer.py',452),
  ('IF -> if E BLOQUE','IF',3,'p_IF','analyzer.py',463),
  ('IF -> if E BLOQUE_ABIERTO ELSE','IF',4,'p_IF','analyzer.py',464),
  ('IF -> if E BLOQUE_ABIERTO ELSEIF','IF',4,'p_IF','analyzer.py',465),
  ('ELSEIF -> elseif E BLOQUE','ELSEIF',3,'p_ELSEIF','analyzer.py',476),
  ('ELSEIF -> elseif E BLOQUE_ABIERTO ELSEIF','ELSEIF',4,'p_ELSEIF','analyzer.py',477),
  ('ELSEIF -> elseif E BLOQUE_ABIERTO ELSE','ELSEIF',4,'p_ELSEIF','analyzer.py',478),
  ('ELSE -> else BLOQUE','ELSE',2,'p_ELSE','analyzer.py',489),
  ('WHILE -> while E BLOQUE','WHILE',3,'p_WHILE','analyzer.py',496),
  ('FOR -> for id in E BLOQUE','FOR',5,'p_FOR','analyzer.py',503),
  ('RANGO -> E dospuntos E','RANGO',3,'p_RANGO','analyzer.py',510),
  ('RANGO -> dospuntos','RANGO',1,'p_RANGO','analyzer.py',511),
  ('BREAK -> break','BREAK',1,'p_BREAK','analyzer.py',520),
  ('CONTINUE -> continue','CONTINUE',1,'p_CONTINUE','analyzer.py',526),
  ('RETURN -> return E','RETURN',2,'p_RETURN','analyzer.py',532),
  ('RETURN -> return','RETURN',1,'p_RETURN','analyzer.py',533),
]
