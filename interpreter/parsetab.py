
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftop_rangorightop_ternarialeftorleftandleftigualaciondiferenciacionleftmenormenor_igualmayormayor_igualleftmasmenosleftasteriscobarramodulorightcaretrightop_negacionnotleftop_llamadaleftop_accesononassocop_agrupacionBool Char Float64 Int64 Nothing String and asterisco barra bool break caret char coma continue corA corB diferenciacion dospuntos else elseif end float64 for function global id if igual igualacion in int64 interrog llaveA llaveB local mas mayor mayor_igual menor menor_igual menos modulo mutable not or parA parB punto puntoycoma return string struct tipo while\n  INS : INS I puntoycoma\n      | I puntoycoma\n  \n  INS : INS error puntoycoma\n      | error puntoycoma\n  \n  I : ASIGNACION\n    | FUNCION\n    | STRUCT\n    | LLAMADA\n    | IF\n    | WHILE\n    | FOR\n    | BREAK\n    | CONTINUE\n    | RETURN\n  \n  BLOQUE  : INS end\n  \n  BLOQUE_ABIERTO  : INS\n  \n  TIPO  : Int64\n        | Float64\n        | Bool\n        | Char\n        | String\n  \n  SCOPE : local\n        | global\n  \n  ASIGNACION  : ID igual ASIGNACION_VALOR\n              | SCOPE id igual ASIGNACION_VALOR\n              | SCOPE id\n  \n  ASIGNACION_VALOR  : E\n                    | E tipo TIPO\n  \n  ID  : ID punto id\n      | ID corA E corB\n      | id\n  \n  FUNCION : function id parA PAR parB BLOQUE\n          | function id parA parB BLOQUE\n  \n  PAR : PAR coma P\n      | P\n  \n  P : id\n    | id tipo TIPO\n  \n  STRUCT  : struct id ATR end\n          | mutable struct id ATR end\n  \n  ATR : ATR A\n      | A\n  \n  A : id tipo TIPO puntoycoma\n    | id puntoycoma\n  \n  EXP : EXP coma E\n      | E\n  \n  E : E mas E\n    | E menos E\n    | E asterisco E\n    | E barra E\n    | E caret E\n    | E modulo E\n    | menos E                     %prec op_negacion\n    | E mayor E\n    | E menor E\n    | E mayor_igual E\n    | E menor_igual E\n    | E igualacion E\n    | E diferenciacion E\n    | E or E\n    | E and E\n    | not E\n    | E interrog E dospuntos E  %prec op_ternaria\n    | ID                        %prec op_acceso\n    | parA E parB               %prec op_agrupacion\n    | LLAMADA                   %prec op_llamada\n    | RANGO                     %prec op_rango\n    | ARREGLO\n    | int64\n    | float64\n    | bool\n    | char\n    | STRING\n    | Nothing\n  \n  STRING  : STRING S\n          | S\n  \n  S : string\n    | llaveA E llaveB\n  \n  ARREGLO : corA EXP corB\n          | corA corB\n  \n  LLAMADA : id parA EXP parB\n          | id parA parB\n  \n  IF  : if E BLOQUE\n      | if E BLOQUE_ABIERTO ELSE\n      | if E BLOQUE_ABIERTO ELSEIF\n  \n  ELSEIF  : elseif E BLOQUE\n          | elseif E BLOQUE_ABIERTO ELSEIF\n          | elseif E BLOQUE_ABIERTO ELSE\n  \n  ELSE : else BLOQUE\n  \n  WHILE : while E BLOQUE\n  \n  FOR : for id in E BLOQUE\n  \n  RANGO : E dospuntos E\n        | dospuntos\n  \n  BREAK : break\n  \n  CONTINUE : continue\n  \n  RETURN  : return E\n          | return\n  '
    
_lr_action_items = {'error':([0,1,30,31,40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,63,64,67,71,96,97,98,100,102,105,108,110,114,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,145,154,160,169,],[3,29,-2,-4,3,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,3,-1,-3,-29,-81,29,-52,-61,-74,-79,29,-30,-80,3,3,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,3,3,3,-62,]),'function':([0,1,30,31,40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,63,64,67,71,96,97,98,100,102,105,108,110,114,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,145,154,160,169,],[17,17,-2,-4,17,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,17,-1,-3,-29,-81,17,-52,-61,-74,-79,17,-30,-80,17,17,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,17,17,17,-62,]),'struct':([0,1,19,30,31,40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,63,64,67,71,96,97,98,100,102,105,108,110,114,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,145,154,160,169,],[18,18,39,-2,-4,18,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,18,-1,-3,-29,-81,18,-52,-61,-74,-79,18,-30,-80,18,18,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,18,18,18,-62,]),'mutable':([0,1,30,31,40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,63,64,67,71,96,97,98,100,102,105,108,110,114,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,145,154,160,169,],[19,19,-2,-4,19,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,19,-1,-3,-29,-81,19,-52,-61,-74,-79,19,-30,-80,19,19,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,19,19,19,-62,]),'id':([0,1,15,17,18,20,21,22,25,26,27,30,31,32,33,34,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,67,69,71,73,75,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,102,105,106,108,110,111,114,117,119,120,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,145,154,155,160,161,166,169,],[16,16,35,37,38,55,55,61,55,-22,-23,-2,-4,55,67,55,55,74,77,16,55,55,-92,-63,55,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,55,-75,-76,55,16,-1,-3,-29,55,-81,112,74,-41,74,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,16,-52,-61,-74,-79,16,55,-30,-80,55,16,-43,-40,74,16,55,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,16,16,112,16,55,-42,-62,]),'if':([0,1,30,31,40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,63,64,67,71,96,97,98,100,102,105,108,110,114,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,145,154,160,169,],[20,20,-2,-4,20,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,20,-1,-3,-29,-81,20,-52,-61,-74,-79,20,-30,-80,20,20,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,20,20,20,-62,]),'while':([0,1,30,31,40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,63,64,67,71,96,97,98,100,102,105,108,110,114,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,145,154,160,169,],[21,21,-2,-4,21,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,21,-1,-3,-29,-81,21,-52,-61,-74,-79,21,-30,-80,21,21,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,21,21,21,-62,]),'for':([0,1,30,31,40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,63,64,67,71,96,97,98,100,102,105,108,110,114,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,145,154,160,169,],[22,22,-2,-4,22,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,22,-1,-3,-29,-81,22,-52,-61,-74,-79,22,-30,-80,22,22,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,22,22,22,-62,]),'break':([0,1,30,31,40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,63,64,67,71,96,97,98,100,102,105,108,110,114,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,145,154,160,169,],[23,23,-2,-4,23,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,23,-1,-3,-29,-81,23,-52,-61,-74,-79,23,-30,-80,23,23,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,23,23,23,-62,]),'continue':([0,1,30,31,40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,63,64,67,71,96,97,98,100,102,105,108,110,114,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,145,154,160,169,],[24,24,-2,-4,24,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,24,-1,-3,-29,-81,24,-52,-61,-74,-79,24,-30,-80,24,24,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,24,24,24,-62,]),'return':([0,1,30,31,40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,63,64,67,71,96,97,98,100,102,105,108,110,114,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,145,154,160,169,],[25,25,-2,-4,25,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,25,-1,-3,-29,-81,25,-52,-61,-74,-79,25,-30,-80,25,25,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,25,25,25,-62,]),'local':([0,1,30,31,40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,63,64,67,71,96,97,98,100,102,105,108,110,114,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,145,154,160,169,],[26,26,-2,-4,26,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,26,-1,-3,-29,-81,26,-52,-61,-74,-79,26,-30,-80,26,26,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,26,26,26,-62,]),'global':([0,1,30,31,40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,63,64,67,71,96,97,98,100,102,105,108,110,114,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,145,154,160,169,],[27,27,-2,-4,27,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,27,-1,-3,-29,-81,27,-52,-61,-74,-79,27,-30,-80,27,27,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,27,27,27,-62,]),'$end':([1,30,31,63,64,],[0,-2,-4,-1,-3,]),'puntoycoma':([2,3,4,5,6,7,8,9,10,11,12,13,23,24,25,28,29,35,43,44,46,47,48,49,50,51,52,53,54,55,57,58,62,65,66,67,71,74,78,97,98,100,102,104,108,109,110,118,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,146,147,148,149,150,151,156,157,158,159,162,164,167,169,170,171,],[30,31,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-93,-94,-96,63,64,-26,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,-95,-24,-27,-29,-81,117,-82,-52,-61,-74,-79,-89,-30,-25,-80,-38,-83,-84,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-15,-64,-78,-77,-28,-17,-18,-19,-20,-21,-33,166,-39,-88,-90,-32,-85,-62,-86,-87,]),'igual':([14,16,35,67,108,],[32,-31,69,-29,-30,]),'punto':([14,16,44,55,67,108,],[33,-31,33,-31,-29,-30,]),'corA':([14,16,20,21,25,32,34,36,41,42,44,45,55,56,59,67,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,108,111,124,161,],[34,-31,56,56,56,56,56,56,56,56,34,56,-31,56,56,-29,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-30,56,56,56,]),'parA':([16,20,21,25,32,34,36,37,41,42,45,55,56,59,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,111,124,161,],[36,45,45,45,45,45,45,73,45,45,45,36,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'menos':([20,21,25,32,34,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,66,67,68,69,71,72,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,102,103,106,108,110,111,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,161,169,],[41,41,41,41,41,41,81,41,41,-92,-63,41,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,41,-75,-76,41,81,81,81,-29,81,41,-81,81,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-52,-61,81,-74,-79,81,41,-30,-80,41,41,-46,-47,-48,-49,-50,-51,81,81,81,81,81,81,81,81,81,81,-64,-78,-77,81,81,81,41,81,]),'not':([20,21,25,32,34,36,41,42,45,56,59,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,111,124,161,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'int64':([20,21,25,32,34,36,41,42,45,56,59,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,111,124,161,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'float64':([20,21,25,32,34,36,41,42,45,56,59,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,111,124,161,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'bool':([20,21,25,32,34,36,41,42,45,56,59,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,111,124,161,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'char':([20,21,25,32,34,36,41,42,45,56,59,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,111,124,161,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'Nothing':([20,21,25,32,34,36,41,42,45,56,59,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,111,124,161,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'dospuntos':([20,21,25,32,34,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,66,67,68,69,71,72,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,102,103,106,108,110,111,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,161,169,],[43,43,43,43,43,43,95,43,43,-92,-63,43,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,43,-75,-76,43,95,95,95,-29,95,43,-81,95,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-52,-61,95,-74,-79,95,43,-30,-80,43,43,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,161,95,-64,-78,-77,95,95,95,43,-62,]),'string':([20,21,25,32,34,36,41,42,45,53,56,57,58,59,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,100,106,111,124,144,161,],[58,58,58,58,58,58,58,58,58,58,58,-75,-76,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-74,58,58,58,-77,58,]),'llaveA':([20,21,25,32,34,36,41,42,45,53,56,57,58,59,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,100,106,111,124,144,161,],[59,59,59,59,59,59,59,59,59,59,59,-75,-76,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-74,59,59,59,-77,59,]),'end':([30,31,63,64,75,76,96,105,117,119,120,166,],[-2,-4,-1,-3,118,-41,141,141,-43,-40,158,-42,]),'else':([30,31,63,64,79,96,168,],[-2,-4,-1,-3,123,-16,123,]),'elseif':([30,31,63,64,79,96,168,],[-2,-4,-1,-3,124,-16,124,]),'parB':([36,43,44,46,47,48,49,50,51,52,53,54,55,57,58,67,70,71,72,73,97,98,99,100,102,108,110,112,113,115,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,147,148,149,150,151,152,163,165,169,],[71,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,-29,110,-81,-45,114,-52,-61,142,-74,-79,-30,-80,-36,154,-35,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,-17,-18,-19,-20,-21,-44,-37,-34,-62,]),'mas':([40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,62,66,67,68,71,72,97,98,99,100,102,103,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,169,],[80,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,80,80,80,-29,80,-81,80,-52,-61,80,-74,-79,80,-30,-80,-46,-47,-48,-49,-50,-51,80,80,80,80,80,80,80,80,80,80,-64,-78,-77,80,80,80,80,]),'asterisco':([40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,62,66,67,68,71,72,97,98,99,100,102,103,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,169,],[82,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,82,82,82,-29,82,-81,82,-52,-61,82,-74,-79,82,-30,-80,82,82,-48,-49,-50,-51,82,82,82,82,82,82,82,82,82,82,-64,-78,-77,82,82,82,82,]),'barra':([40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,62,66,67,68,71,72,97,98,99,100,102,103,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,169,],[83,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,83,83,83,-29,83,-81,83,-52,-61,83,-74,-79,83,-30,-80,83,83,-48,-49,-50,-51,83,83,83,83,83,83,83,83,83,83,-64,-78,-77,83,83,83,83,]),'caret':([40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,62,66,67,68,71,72,97,98,99,100,102,103,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,169,],[84,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,84,84,84,-29,84,-81,84,-52,-61,84,-74,-79,84,-30,-80,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-64,-78,-77,84,84,84,84,]),'modulo':([40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,62,66,67,68,71,72,97,98,99,100,102,103,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,169,],[85,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,85,85,85,-29,85,-81,85,-52,-61,85,-74,-79,85,-30,-80,85,85,-48,-49,-50,-51,85,85,85,85,85,85,85,85,85,85,-64,-78,-77,85,85,85,85,]),'mayor':([40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,62,66,67,68,71,72,97,98,99,100,102,103,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,169,],[86,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,86,86,86,-29,86,-81,86,-52,-61,86,-74,-79,86,-30,-80,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,86,86,86,86,86,86,-64,-78,-77,86,86,86,86,]),'menor':([40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,62,66,67,68,71,72,97,98,99,100,102,103,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,169,],[87,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,87,87,87,-29,87,-81,87,-52,-61,87,-74,-79,87,-30,-80,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,87,87,87,87,87,87,-64,-78,-77,87,87,87,87,]),'mayor_igual':([40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,62,66,67,68,71,72,97,98,99,100,102,103,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,169,],[88,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,88,88,88,-29,88,-81,88,-52,-61,88,-74,-79,88,-30,-80,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,88,88,88,88,88,88,-64,-78,-77,88,88,88,88,]),'menor_igual':([40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,62,66,67,68,71,72,97,98,99,100,102,103,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,169,],[89,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,89,89,89,-29,89,-81,89,-52,-61,89,-74,-79,89,-30,-80,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,89,89,89,89,89,89,-64,-78,-77,89,89,89,89,]),'igualacion':([40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,62,66,67,68,71,72,97,98,99,100,102,103,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,169,],[90,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,90,90,90,-29,90,-81,90,-52,-61,90,-74,-79,90,-30,-80,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,90,90,90,90,-64,-78,-77,90,90,90,90,]),'diferenciacion':([40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,62,66,67,68,71,72,97,98,99,100,102,103,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,169,],[91,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,91,91,91,-29,91,-81,91,-52,-61,91,-74,-79,91,-30,-80,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,91,91,91,91,-64,-78,-77,91,91,91,91,]),'or':([40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,62,66,67,68,71,72,97,98,99,100,102,103,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,169,],[92,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,92,92,92,-29,92,-81,92,-52,-61,92,-74,-79,92,-30,-80,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,92,92,-64,-78,-77,92,92,92,92,]),'and':([40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,62,66,67,68,71,72,97,98,99,100,102,103,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,169,],[93,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,93,93,93,-29,93,-81,93,-52,-61,93,-74,-79,93,-30,-80,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,93,-60,93,93,-64,-78,-77,93,93,93,93,]),'interrog':([40,43,44,46,47,48,49,50,51,52,53,54,55,57,58,60,62,66,67,68,71,72,97,98,99,100,102,103,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,152,160,169,],[94,-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,94,94,94,-29,94,-81,94,-52,-61,94,-74,-79,94,-30,-80,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,94,94,-64,-78,-77,94,94,94,-62,]),'tipo':([43,44,46,47,48,49,50,51,52,53,54,55,57,58,66,67,71,74,97,98,100,102,108,110,112,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,169,],[-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,107,-29,-81,116,-52,-61,-74,-79,-30,-80,153,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,-62,]),'corB':([43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,67,68,71,72,97,98,100,101,102,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,152,169,],[-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,102,-75,-76,-29,108,-81,-45,-52,-61,-74,143,-79,-30,-80,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,-44,-62,]),'coma':([43,44,46,47,48,49,50,51,52,53,54,55,57,58,67,70,71,72,97,98,100,101,102,108,110,112,113,115,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,147,148,149,150,151,152,163,165,169,],[-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,-29,111,-81,-45,-52,-61,-74,111,-79,-30,-80,-36,155,-35,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,-17,-18,-19,-20,-21,-44,-37,-34,-62,]),'llaveB':([43,44,46,47,48,49,50,51,52,53,54,55,57,58,67,71,97,98,100,102,103,108,110,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,169,],[-92,-63,-65,-66,-67,-68,-69,-70,-71,-72,-73,-31,-75,-76,-29,-81,-52,-61,-74,-79,144,-30,-80,-46,-47,-48,-49,-50,-51,-53,-54,-55,-56,-57,-58,-59,-60,-91,-64,-78,-77,-62,]),'in':([61,],[106,]),'Int64':([107,116,153,],[147,147,147,]),'Float64':([107,116,153,],[148,148,148,]),'Bool':([107,116,153,],[149,149,149,]),'Char':([107,116,153,],[150,150,150,]),'String':([107,116,153,],[151,151,151,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INS':([0,40,60,114,123,145,154,160,],[1,96,105,105,105,105,105,96,]),'I':([0,1,40,60,96,105,114,123,145,154,160,],[2,28,2,2,28,28,2,2,2,2,2,]),'ASIGNACION':([0,1,40,60,96,105,114,123,145,154,160,],[4,4,4,4,4,4,4,4,4,4,4,]),'FUNCION':([0,1,40,60,96,105,114,123,145,154,160,],[5,5,5,5,5,5,5,5,5,5,5,]),'STRUCT':([0,1,40,60,96,105,114,123,145,154,160,],[6,6,6,6,6,6,6,6,6,6,6,]),'LLAMADA':([0,1,20,21,25,32,34,36,40,41,42,45,56,59,60,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,106,111,114,123,124,145,154,160,161,],[7,7,46,46,46,46,46,46,7,46,46,46,46,46,7,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,7,7,46,46,7,7,46,7,7,7,46,]),'IF':([0,1,40,60,96,105,114,123,145,154,160,],[8,8,8,8,8,8,8,8,8,8,8,]),'WHILE':([0,1,40,60,96,105,114,123,145,154,160,],[9,9,9,9,9,9,9,9,9,9,9,]),'FOR':([0,1,40,60,96,105,114,123,145,154,160,],[10,10,10,10,10,10,10,10,10,10,10,]),'BREAK':([0,1,40,60,96,105,114,123,145,154,160,],[11,11,11,11,11,11,11,11,11,11,11,]),'CONTINUE':([0,1,40,60,96,105,114,123,145,154,160,],[12,12,12,12,12,12,12,12,12,12,12,]),'RETURN':([0,1,40,60,96,105,114,123,145,154,160,],[13,13,13,13,13,13,13,13,13,13,13,]),'ID':([0,1,20,21,25,32,34,36,40,41,42,45,56,59,60,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,106,111,114,123,124,145,154,160,161,],[14,14,44,44,44,44,44,44,14,44,44,44,44,44,14,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,14,14,44,44,14,14,44,14,14,14,44,]),'SCOPE':([0,1,40,60,96,105,114,123,145,154,160,],[15,15,15,15,15,15,15,15,15,15,15,]),'E':([20,21,25,32,34,36,41,42,45,56,59,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,111,124,161,],[40,60,62,66,68,72,97,98,99,72,103,66,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,145,152,160,169,]),'RANGO':([20,21,25,32,34,36,41,42,45,56,59,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,111,124,161,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'ARREGLO':([20,21,25,32,34,36,41,42,45,56,59,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,111,124,161,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'STRING':([20,21,25,32,34,36,41,42,45,56,59,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,111,124,161,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'S':([20,21,25,32,34,36,41,42,45,53,56,59,69,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,106,111,124,161,],[57,57,57,57,57,57,57,57,57,100,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ASIGNACION_VALOR':([32,69,],[65,109,]),'EXP':([36,56,],[70,101,]),'ATR':([38,77,],[75,120,]),'A':([38,75,77,120,],[76,119,76,119,]),'BLOQUE':([40,60,114,123,145,154,160,],[78,104,156,159,162,164,167,]),'BLOQUE_ABIERTO':([40,160,],[79,168,]),'PAR':([73,],[113,]),'P':([73,155,],[115,165,]),'ELSE':([79,168,],[121,171,]),'ELSEIF':([79,168,],[122,170,]),'TIPO':([107,116,153,],[146,157,163,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INS","S'",1,None,None,None),
  ('INS -> INS I puntoycoma','INS',3,'p_INS','analyzer.py',245),
  ('INS -> I puntoycoma','INS',2,'p_INS','analyzer.py',246),
  ('INS -> INS error puntoycoma','INS',3,'p_INS_error','analyzer.py',256),
  ('INS -> error puntoycoma','INS',2,'p_INS_error','analyzer.py',257),
  ('I -> ASIGNACION','I',1,'p_I','analyzer.py',263),
  ('I -> FUNCION','I',1,'p_I','analyzer.py',264),
  ('I -> STRUCT','I',1,'p_I','analyzer.py',265),
  ('I -> LLAMADA','I',1,'p_I','analyzer.py',266),
  ('I -> IF','I',1,'p_I','analyzer.py',267),
  ('I -> WHILE','I',1,'p_I','analyzer.py',268),
  ('I -> FOR','I',1,'p_I','analyzer.py',269),
  ('I -> BREAK','I',1,'p_I','analyzer.py',270),
  ('I -> CONTINUE','I',1,'p_I','analyzer.py',271),
  ('I -> RETURN','I',1,'p_I','analyzer.py',272),
  ('BLOQUE -> INS end','BLOQUE',2,'p_BLOQUE','analyzer.py',278),
  ('BLOQUE_ABIERTO -> INS','BLOQUE_ABIERTO',1,'p_BLOQUE_ABIERTO','analyzer.py',284),
  ('TIPO -> Int64','TIPO',1,'p_TIPO','analyzer.py',290),
  ('TIPO -> Float64','TIPO',1,'p_TIPO','analyzer.py',291),
  ('TIPO -> Bool','TIPO',1,'p_TIPO','analyzer.py',292),
  ('TIPO -> Char','TIPO',1,'p_TIPO','analyzer.py',293),
  ('TIPO -> String','TIPO',1,'p_TIPO','analyzer.py',294),
  ('SCOPE -> local','SCOPE',1,'p_SCOPE','analyzer.py',300),
  ('SCOPE -> global','SCOPE',1,'p_SCOPE','analyzer.py',301),
  ('ASIGNACION -> ID igual ASIGNACION_VALOR','ASIGNACION',3,'p_ASIGNACION','analyzer.py',307),
  ('ASIGNACION -> SCOPE id igual ASIGNACION_VALOR','ASIGNACION',4,'p_ASIGNACION','analyzer.py',308),
  ('ASIGNACION -> SCOPE id','ASIGNACION',2,'p_ASIGNACION','analyzer.py',309),
  ('ASIGNACION_VALOR -> E','ASIGNACION_VALOR',1,'p_ASIGNACION_VALOR','analyzer.py',328),
  ('ASIGNACION_VALOR -> E tipo TIPO','ASIGNACION_VALOR',3,'p_ASIGNACION_VALOR','analyzer.py',329),
  ('ID -> ID punto id','ID',3,'p_ID','analyzer.py',338),
  ('ID -> ID corA E corB','ID',4,'p_ID','analyzer.py',339),
  ('ID -> id','ID',1,'p_ID','analyzer.py',340),
  ('FUNCION -> function id parA PAR parB BLOQUE','FUNCION',6,'p_FUNCION','analyzer.py',352),
  ('FUNCION -> function id parA parB BLOQUE','FUNCION',5,'p_FUNCION','analyzer.py',353),
  ('PAR -> PAR coma P','PAR',3,'p_PAR','analyzer.py',365),
  ('PAR -> P','PAR',1,'p_PAR','analyzer.py',366),
  ('P -> id','P',1,'p_P','analyzer.py',375),
  ('P -> id tipo TIPO','P',3,'p_P','analyzer.py',376),
  ('STRUCT -> struct id ATR end','STRUCT',4,'p_STRUCT','analyzer.py',382),
  ('STRUCT -> mutable struct id ATR end','STRUCT',5,'p_STRUCT','analyzer.py',383),
  ('ATR -> ATR A','ATR',2,'p_ATR','analyzer.py',396),
  ('ATR -> A','ATR',1,'p_ATR','analyzer.py',397),
  ('A -> id tipo TIPO puntoycoma','A',4,'p_A','analyzer.py',406),
  ('A -> id puntoycoma','A',2,'p_A','analyzer.py',407),
  ('EXP -> EXP coma E','EXP',3,'p_EXP','analyzer.py',418),
  ('EXP -> E','EXP',1,'p_EXP','analyzer.py',419),
  ('E -> E mas E','E',3,'p_E','analyzer.py',428),
  ('E -> E menos E','E',3,'p_E','analyzer.py',429),
  ('E -> E asterisco E','E',3,'p_E','analyzer.py',430),
  ('E -> E barra E','E',3,'p_E','analyzer.py',431),
  ('E -> E caret E','E',3,'p_E','analyzer.py',432),
  ('E -> E modulo E','E',3,'p_E','analyzer.py',433),
  ('E -> menos E','E',2,'p_E','analyzer.py',434),
  ('E -> E mayor E','E',3,'p_E','analyzer.py',435),
  ('E -> E menor E','E',3,'p_E','analyzer.py',436),
  ('E -> E mayor_igual E','E',3,'p_E','analyzer.py',437),
  ('E -> E menor_igual E','E',3,'p_E','analyzer.py',438),
  ('E -> E igualacion E','E',3,'p_E','analyzer.py',439),
  ('E -> E diferenciacion E','E',3,'p_E','analyzer.py',440),
  ('E -> E or E','E',3,'p_E','analyzer.py',441),
  ('E -> E and E','E',3,'p_E','analyzer.py',442),
  ('E -> not E','E',2,'p_E','analyzer.py',443),
  ('E -> E interrog E dospuntos E','E',5,'p_E','analyzer.py',444),
  ('E -> ID','E',1,'p_E','analyzer.py',445),
  ('E -> parA E parB','E',3,'p_E','analyzer.py',446),
  ('E -> LLAMADA','E',1,'p_E','analyzer.py',447),
  ('E -> RANGO','E',1,'p_E','analyzer.py',448),
  ('E -> ARREGLO','E',1,'p_E','analyzer.py',449),
  ('E -> int64','E',1,'p_E','analyzer.py',450),
  ('E -> float64','E',1,'p_E','analyzer.py',451),
  ('E -> bool','E',1,'p_E','analyzer.py',452),
  ('E -> char','E',1,'p_E','analyzer.py',453),
  ('E -> STRING','E',1,'p_E','analyzer.py',454),
  ('E -> Nothing','E',1,'p_E','analyzer.py',455),
  ('STRING -> STRING S','STRING',2,'p_STRING','analyzer.py',485),
  ('STRING -> S','STRING',1,'p_STRING','analyzer.py',486),
  ('S -> string','S',1,'p_S','analyzer.py',497),
  ('S -> llaveA E llaveB','S',3,'p_S','analyzer.py',498),
  ('ARREGLO -> corA EXP corB','ARREGLO',3,'p_ARREGLO','analyzer.py',504),
  ('ARREGLO -> corA corB','ARREGLO',2,'p_ARREGLO','analyzer.py',505),
  ('LLAMADA -> id parA EXP parB','LLAMADA',4,'p_LLAMADA','analyzer.py',513),
  ('LLAMADA -> id parA parB','LLAMADA',3,'p_LLAMADA','analyzer.py',514),
  ('IF -> if E BLOQUE','IF',3,'p_IF','analyzer.py',525),
  ('IF -> if E BLOQUE_ABIERTO ELSE','IF',4,'p_IF','analyzer.py',526),
  ('IF -> if E BLOQUE_ABIERTO ELSEIF','IF',4,'p_IF','analyzer.py',527),
  ('ELSEIF -> elseif E BLOQUE','ELSEIF',3,'p_ELSEIF','analyzer.py',538),
  ('ELSEIF -> elseif E BLOQUE_ABIERTO ELSEIF','ELSEIF',4,'p_ELSEIF','analyzer.py',539),
  ('ELSEIF -> elseif E BLOQUE_ABIERTO ELSE','ELSEIF',4,'p_ELSEIF','analyzer.py',540),
  ('ELSE -> else BLOQUE','ELSE',2,'p_ELSE','analyzer.py',551),
  ('WHILE -> while E BLOQUE','WHILE',3,'p_WHILE','analyzer.py',558),
  ('FOR -> for id in E BLOQUE','FOR',5,'p_FOR','analyzer.py',565),
  ('RANGO -> E dospuntos E','RANGO',3,'p_RANGO','analyzer.py',572),
  ('RANGO -> dospuntos','RANGO',1,'p_RANGO','analyzer.py',573),
  ('BREAK -> break','BREAK',1,'p_BREAK','analyzer.py',582),
  ('CONTINUE -> continue','CONTINUE',1,'p_CONTINUE','analyzer.py',588),
  ('RETURN -> return E','RETURN',2,'p_RETURN','analyzer.py',594),
  ('RETURN -> return','RETURN',1,'p_RETURN','analyzer.py',595),
]
