Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> INS
Rule 1     INS -> INS I puntoycoma
Rule 2     INS -> I puntoycoma
Rule 3     INS -> INS error puntoycoma
Rule 4     INS -> error puntoycoma
Rule 5     I -> ASIGNACION
Rule 6     I -> FUNCION
Rule 7     I -> STRUCT
Rule 8     I -> LLAMADA
Rule 9     I -> IF
Rule 10    I -> WHILE
Rule 11    I -> FOR
Rule 12    I -> BREAK
Rule 13    I -> CONTINUE
Rule 14    I -> RETURN
Rule 15    BLOQUE -> INS end
Rule 16    BLOQUE_ABIERTO -> INS
Rule 17    TIPO -> Int64
Rule 18    TIPO -> Float64
Rule 19    TIPO -> Bool
Rule 20    TIPO -> Char
Rule 21    TIPO -> String
Rule 22    SCOPE -> local
Rule 23    SCOPE -> global
Rule 24    ASIGNACION -> ID igual ASIGNACION_VALOR
Rule 25    ASIGNACION -> SCOPE id igual ASIGNACION_VALOR
Rule 26    ASIGNACION -> SCOPE id
Rule 27    ASIGNACION_VALOR -> E
Rule 28    ASIGNACION_VALOR -> E tipo TIPO
Rule 29    ID -> ID punto id
Rule 30    ID -> ID corchete_A E corchete_B
Rule 31    ID -> id
Rule 32    FUNCION -> function id parentesis_A PAR parentesis_B BLOQUE
Rule 33    FUNCION -> function id parentesis_A parentesis_B BLOQUE
Rule 34    PAR -> PAR coma P
Rule 35    PAR -> P
Rule 36    P -> id
Rule 37    STRUCT -> struct id ATR end
Rule 38    STRUCT -> mutable struct id ATR end
Rule 39    ATR -> ATR A
Rule 40    ATR -> A
Rule 41    A -> id tipo TIPO puntoycoma
Rule 42    A -> id puntoycoma
Rule 43    EXP -> EXP coma E
Rule 44    EXP -> E
Rule 45    E -> E mas E
Rule 46    E -> E menos E
Rule 47    E -> E asterisco E
Rule 48    E -> E barra E
Rule 49    E -> E caret E
Rule 50    E -> E modulo E
Rule 51    E -> menos E
Rule 52    E -> E mayor E
Rule 53    E -> E menor E
Rule 54    E -> E mayor_igual E
Rule 55    E -> E menor_igual E
Rule 56    E -> E igualacion E
Rule 57    E -> E diferenciacion E
Rule 58    E -> E or E
Rule 59    E -> E and E
Rule 60    E -> not E
Rule 61    E -> ID
Rule 62    E -> parentesis_A E parentesis_B
Rule 63    E -> LLAMADA
Rule 64    E -> RANGO
Rule 65    E -> ARREGLO
Rule 66    E -> int64
Rule 67    E -> float64
Rule 68    E -> bool
Rule 69    E -> char
Rule 70    E -> string
Rule 71    E -> Nothing
Rule 72    ARREGLO -> corchete_A EXP corchete_B
Rule 73    ARREGLO -> corchete_A corchete_B
Rule 74    LLAMADA -> id parentesis_A EXP parentesis_B
Rule 75    LLAMADA -> id parentesis_A parentesis_B
Rule 76    IF -> if E BLOQUE
Rule 77    IF -> if E BLOQUE_ABIERTO ELSE
Rule 78    IF -> if E BLOQUE_ABIERTO ELSEIF
Rule 79    ELSEIF -> elseif E BLOQUE
Rule 80    ELSEIF -> elseif E BLOQUE_ABIERTO ELSEIF
Rule 81    ELSEIF -> elseif E BLOQUE_ABIERTO ELSE
Rule 82    ELSE -> else BLOQUE
Rule 83    WHILE -> while E BLOQUE
Rule 84    FOR -> for id in E BLOQUE
Rule 85    RANGO -> E dospuntos E
Rule 86    RANGO -> dospuntos
Rule 87    BREAK -> break
Rule 88    CONTINUE -> continue
Rule 89    RETURN -> return E
Rule 90    RETURN -> return

Terminals, with rules where they appear

Bool                 : 19
Char                 : 20
Float64              : 18
Int64                : 17
Nothing              : 71
String               : 21
and                  : 59
asterisco            : 47
barra                : 48
bool                 : 68
break                : 87
caret                : 49
char                 : 69
coma                 : 34 43
continue             : 88
corchete_A           : 30 72 73
corchete_B           : 30 72 73
diferenciacion       : 57
dospuntos            : 85 86
else                 : 82
elseif               : 79 80 81
end                  : 15 37 38
error                : 3 4
float64              : 67
for                  : 84
function             : 32 33
global               : 23
id                   : 25 26 29 31 32 33 36 37 38 41 42 74 75 84
if                   : 76 77 78
igual                : 24 25
igualacion           : 56
in                   : 84
int64                : 66
local                : 22
mas                  : 45
mayor                : 52
mayor_igual          : 54
menor                : 53
menor_igual          : 55
menos                : 46 51
modulo               : 50
mutable              : 38
not                  : 60
or                   : 58
parentesis_A         : 32 33 62 74 75
parentesis_B         : 32 33 62 74 75
punto                : 29
puntoycoma           : 1 2 3 4 41 42
return               : 89 90
string               : 70
struct               : 37 38
tipo                 : 28 41
while                : 83

Nonterminals, with rules where they appear

A                    : 39 40
ARREGLO              : 65
ASIGNACION           : 5
ASIGNACION_VALOR     : 24 25
ATR                  : 37 38 39
BLOQUE               : 32 33 76 79 82 83 84
BLOQUE_ABIERTO       : 77 78 80 81
BREAK                : 12
CONTINUE             : 13
E                    : 27 28 30 43 44 45 45 46 46 47 47 48 48 49 49 50 50 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 62 76 77 78 79 80 81 83 84 85 85 89
ELSE                 : 77 81
ELSEIF               : 78 80
EXP                  : 43 72 74
FOR                  : 11
FUNCION              : 6
I                    : 1 2
ID                   : 24 29 30 61
IF                   : 9
INS                  : 1 3 15 16 0
LLAMADA              : 8 63
P                    : 34 35
PAR                  : 32 34
RANGO                : 64
RETURN               : 14
SCOPE                : 25 26
STRUCT               : 7
TIPO                 : 28 41
WHILE                : 10

Parsing method: LALR

state 0

    (0) S' -> . INS
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . FUNCION
    (7) I -> . STRUCT
    (8) I -> . LLAMADA
    (9) I -> . IF
    (10) I -> . WHILE
    (11) I -> . FOR
    (12) I -> . BREAK
    (13) I -> . CONTINUE
    (14) I -> . RETURN
    (24) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (25) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (26) ASIGNACION -> . SCOPE id
    (32) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (33) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (37) STRUCT -> . struct id ATR end
    (38) STRUCT -> . mutable struct id ATR end
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (76) IF -> . if E BLOQUE
    (77) IF -> . if E BLOQUE_ABIERTO ELSE
    (78) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (83) WHILE -> . while E BLOQUE
    (84) FOR -> . for id in E BLOQUE
    (87) BREAK -> . break
    (88) CONTINUE -> . continue
    (89) RETURN -> . return E
    (90) RETURN -> . return
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (22) SCOPE -> . local
    (23) SCOPE -> . global

    error           shift and go to state 3
    function        shift and go to state 17
    struct          shift and go to state 18
    mutable         shift and go to state 19
    id              shift and go to state 16
    if              shift and go to state 20
    while           shift and go to state 21
    for             shift and go to state 22
    break           shift and go to state 23
    continue        shift and go to state 24
    return          shift and go to state 25
    local           shift and go to state 26
    global          shift and go to state 27

    INS                            shift and go to state 1
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    FUNCION                        shift and go to state 5
    STRUCT                         shift and go to state 6
    LLAMADA                        shift and go to state 7
    IF                             shift and go to state 8
    WHILE                          shift and go to state 9
    FOR                            shift and go to state 10
    BREAK                          shift and go to state 11
    CONTINUE                       shift and go to state 12
    RETURN                         shift and go to state 13
    ID                             shift and go to state 14
    SCOPE                          shift and go to state 15

state 1

    (0) S' -> INS .
    (1) INS -> INS . I puntoycoma
    (3) INS -> INS . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . FUNCION
    (7) I -> . STRUCT
    (8) I -> . LLAMADA
    (9) I -> . IF
    (10) I -> . WHILE
    (11) I -> . FOR
    (12) I -> . BREAK
    (13) I -> . CONTINUE
    (14) I -> . RETURN
    (24) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (25) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (26) ASIGNACION -> . SCOPE id
    (32) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (33) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (37) STRUCT -> . struct id ATR end
    (38) STRUCT -> . mutable struct id ATR end
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (76) IF -> . if E BLOQUE
    (77) IF -> . if E BLOQUE_ABIERTO ELSE
    (78) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (83) WHILE -> . while E BLOQUE
    (84) FOR -> . for id in E BLOQUE
    (87) BREAK -> . break
    (88) CONTINUE -> . continue
    (89) RETURN -> . return E
    (90) RETURN -> . return
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (22) SCOPE -> . local
    (23) SCOPE -> . global

    error           shift and go to state 29
    function        shift and go to state 17
    struct          shift and go to state 18
    mutable         shift and go to state 19
    id              shift and go to state 16
    if              shift and go to state 20
    while           shift and go to state 21
    for             shift and go to state 22
    break           shift and go to state 23
    continue        shift and go to state 24
    return          shift and go to state 25
    local           shift and go to state 26
    global          shift and go to state 27

    I                              shift and go to state 28
    ASIGNACION                     shift and go to state 4
    FUNCION                        shift and go to state 5
    STRUCT                         shift and go to state 6
    LLAMADA                        shift and go to state 7
    IF                             shift and go to state 8
    WHILE                          shift and go to state 9
    FOR                            shift and go to state 10
    BREAK                          shift and go to state 11
    CONTINUE                       shift and go to state 12
    RETURN                         shift and go to state 13
    ID                             shift and go to state 14
    SCOPE                          shift and go to state 15

state 2

    (2) INS -> I . puntoycoma

    puntoycoma      shift and go to state 30


state 3

    (4) INS -> error . puntoycoma

    puntoycoma      shift and go to state 31


state 4

    (5) I -> ASIGNACION .

    puntoycoma      reduce using rule 5 (I -> ASIGNACION .)


state 5

    (6) I -> FUNCION .

    puntoycoma      reduce using rule 6 (I -> FUNCION .)


state 6

    (7) I -> STRUCT .

    puntoycoma      reduce using rule 7 (I -> STRUCT .)


state 7

    (8) I -> LLAMADA .

    puntoycoma      reduce using rule 8 (I -> LLAMADA .)


state 8

    (9) I -> IF .

    puntoycoma      reduce using rule 9 (I -> IF .)


state 9

    (10) I -> WHILE .

    puntoycoma      reduce using rule 10 (I -> WHILE .)


state 10

    (11) I -> FOR .

    puntoycoma      reduce using rule 11 (I -> FOR .)


state 11

    (12) I -> BREAK .

    puntoycoma      reduce using rule 12 (I -> BREAK .)


state 12

    (13) I -> CONTINUE .

    puntoycoma      reduce using rule 13 (I -> CONTINUE .)


state 13

    (14) I -> RETURN .

    puntoycoma      reduce using rule 14 (I -> RETURN .)


state 14

    (24) ASIGNACION -> ID . igual ASIGNACION_VALOR
    (29) ID -> ID . punto id
    (30) ID -> ID . corchete_A E corchete_B

    igual           shift and go to state 32
    punto           shift and go to state 33
    corchete_A      shift and go to state 34


state 15

    (25) ASIGNACION -> SCOPE . id igual ASIGNACION_VALOR
    (26) ASIGNACION -> SCOPE . id

    id              shift and go to state 35


state 16

    (74) LLAMADA -> id . parentesis_A EXP parentesis_B
    (75) LLAMADA -> id . parentesis_A parentesis_B
    (31) ID -> id .

    parentesis_A    shift and go to state 36
    igual           reduce using rule 31 (ID -> id .)
    punto           reduce using rule 31 (ID -> id .)
    corchete_A      reduce using rule 31 (ID -> id .)


state 17

    (32) FUNCION -> function . id parentesis_A PAR parentesis_B BLOQUE
    (33) FUNCION -> function . id parentesis_A parentesis_B BLOQUE

    id              shift and go to state 37


state 18

    (37) STRUCT -> struct . id ATR end

    id              shift and go to state 38


state 19

    (38) STRUCT -> mutable . struct id ATR end

    struct          shift and go to state 39


state 20

    (76) IF -> if . E BLOQUE
    (77) IF -> if . E BLOQUE_ABIERTO ELSE
    (78) IF -> if . E BLOQUE_ABIERTO ELSEIF
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 40
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 21

    (83) WHILE -> while . E BLOQUE
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 57
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 22

    (84) FOR -> for . id in E BLOQUE

    id              shift and go to state 58


state 23

    (87) BREAK -> break .

    puntoycoma      reduce using rule 87 (BREAK -> break .)


state 24

    (88) CONTINUE -> continue .

    puntoycoma      reduce using rule 88 (CONTINUE -> continue .)


state 25

    (89) RETURN -> return . E
    (90) RETURN -> return .
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    puntoycoma      reduce using rule 90 (RETURN -> return .)
    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 59
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 26

    (22) SCOPE -> local .

    id              reduce using rule 22 (SCOPE -> local .)


state 27

    (23) SCOPE -> global .

    id              reduce using rule 23 (SCOPE -> global .)


state 28

    (1) INS -> INS I . puntoycoma

    puntoycoma      shift and go to state 60


state 29

    (3) INS -> INS error . puntoycoma

    puntoycoma      shift and go to state 61


state 30

    (2) INS -> I puntoycoma .

    error           reduce using rule 2 (INS -> I puntoycoma .)
    function        reduce using rule 2 (INS -> I puntoycoma .)
    struct          reduce using rule 2 (INS -> I puntoycoma .)
    mutable         reduce using rule 2 (INS -> I puntoycoma .)
    id              reduce using rule 2 (INS -> I puntoycoma .)
    if              reduce using rule 2 (INS -> I puntoycoma .)
    while           reduce using rule 2 (INS -> I puntoycoma .)
    for             reduce using rule 2 (INS -> I puntoycoma .)
    break           reduce using rule 2 (INS -> I puntoycoma .)
    continue        reduce using rule 2 (INS -> I puntoycoma .)
    return          reduce using rule 2 (INS -> I puntoycoma .)
    local           reduce using rule 2 (INS -> I puntoycoma .)
    global          reduce using rule 2 (INS -> I puntoycoma .)
    $end            reduce using rule 2 (INS -> I puntoycoma .)
    end             reduce using rule 2 (INS -> I puntoycoma .)
    else            reduce using rule 2 (INS -> I puntoycoma .)
    elseif          reduce using rule 2 (INS -> I puntoycoma .)


state 31

    (4) INS -> error puntoycoma .

    error           reduce using rule 4 (INS -> error puntoycoma .)
    function        reduce using rule 4 (INS -> error puntoycoma .)
    struct          reduce using rule 4 (INS -> error puntoycoma .)
    mutable         reduce using rule 4 (INS -> error puntoycoma .)
    id              reduce using rule 4 (INS -> error puntoycoma .)
    if              reduce using rule 4 (INS -> error puntoycoma .)
    while           reduce using rule 4 (INS -> error puntoycoma .)
    for             reduce using rule 4 (INS -> error puntoycoma .)
    break           reduce using rule 4 (INS -> error puntoycoma .)
    continue        reduce using rule 4 (INS -> error puntoycoma .)
    return          reduce using rule 4 (INS -> error puntoycoma .)
    local           reduce using rule 4 (INS -> error puntoycoma .)
    global          reduce using rule 4 (INS -> error puntoycoma .)
    $end            reduce using rule 4 (INS -> error puntoycoma .)
    end             reduce using rule 4 (INS -> error puntoycoma .)
    else            reduce using rule 4 (INS -> error puntoycoma .)
    elseif          reduce using rule 4 (INS -> error puntoycoma .)


state 32

    (24) ASIGNACION -> ID igual . ASIGNACION_VALOR
    (27) ASIGNACION_VALOR -> . E
    (28) ASIGNACION_VALOR -> . E tipo TIPO
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    ID                             shift and go to state 43
    ASIGNACION_VALOR               shift and go to state 62
    E                              shift and go to state 63
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 33

    (29) ID -> ID punto . id

    id              shift and go to state 64


state 34

    (30) ID -> ID corchete_A . E corchete_B
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    ID                             shift and go to state 43
    E                              shift and go to state 65
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 35

    (25) ASIGNACION -> SCOPE id . igual ASIGNACION_VALOR
    (26) ASIGNACION -> SCOPE id .

    igual           shift and go to state 66
    puntoycoma      reduce using rule 26 (ASIGNACION -> SCOPE id .)


state 36

    (74) LLAMADA -> id parentesis_A . EXP parentesis_B
    (75) LLAMADA -> id parentesis_A . parentesis_B
    (43) EXP -> . EXP coma E
    (44) EXP -> . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    parentesis_B    shift and go to state 68
    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    EXP                            shift and go to state 67
    E                              shift and go to state 69
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 37

    (32) FUNCION -> function id . parentesis_A PAR parentesis_B BLOQUE
    (33) FUNCION -> function id . parentesis_A parentesis_B BLOQUE

    parentesis_A    shift and go to state 70


state 38

    (37) STRUCT -> struct id . ATR end
    (39) ATR -> . ATR A
    (40) ATR -> . A
    (41) A -> . id tipo TIPO puntoycoma
    (42) A -> . id puntoycoma

    id              shift and go to state 71

    ATR                            shift and go to state 72
    A                              shift and go to state 73

state 39

    (38) STRUCT -> mutable struct . id ATR end

    id              shift and go to state 74


state 40

    (76) IF -> if E . BLOQUE
    (77) IF -> if E . BLOQUE_ABIERTO ELSE
    (78) IF -> if E . BLOQUE_ABIERTO ELSEIF
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E
    (15) BLOQUE -> . INS end
    (16) BLOQUE_ABIERTO -> . INS
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . FUNCION
    (7) I -> . STRUCT
    (8) I -> . LLAMADA
    (9) I -> . IF
    (10) I -> . WHILE
    (11) I -> . FOR
    (12) I -> . BREAK
    (13) I -> . CONTINUE
    (14) I -> . RETURN
    (24) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (25) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (26) ASIGNACION -> . SCOPE id
    (32) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (33) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (37) STRUCT -> . struct id ATR end
    (38) STRUCT -> . mutable struct id ATR end
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (76) IF -> . if E BLOQUE
    (77) IF -> . if E BLOQUE_ABIERTO ELSE
    (78) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (83) WHILE -> . while E BLOQUE
    (84) FOR -> . for id in E BLOQUE
    (87) BREAK -> . break
    (88) CONTINUE -> . continue
    (89) RETURN -> . return E
    (90) RETURN -> . return
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (22) SCOPE -> . local
    (23) SCOPE -> . global

    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82
    mayor           shift and go to state 83
    menor           shift and go to state 84
    mayor_igual     shift and go to state 85
    menor_igual     shift and go to state 86
    igualacion      shift and go to state 87
    diferenciacion  shift and go to state 88
    or              shift and go to state 89
    and             shift and go to state 90
    dospuntos       shift and go to state 91
    error           shift and go to state 3
    function        shift and go to state 17
    struct          shift and go to state 18
    mutable         shift and go to state 19
    id              shift and go to state 16
    if              shift and go to state 20
    while           shift and go to state 21
    for             shift and go to state 22
    break           shift and go to state 23
    continue        shift and go to state 24
    return          shift and go to state 25
    local           shift and go to state 26
    global          shift and go to state 27

    BLOQUE                         shift and go to state 75
    BLOQUE_ABIERTO                 shift and go to state 76
    INS                            shift and go to state 92
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    FUNCION                        shift and go to state 5
    STRUCT                         shift and go to state 6
    LLAMADA                        shift and go to state 7
    IF                             shift and go to state 8
    WHILE                          shift and go to state 9
    FOR                            shift and go to state 10
    BREAK                          shift and go to state 11
    CONTINUE                       shift and go to state 12
    RETURN                         shift and go to state 13
    ID                             shift and go to state 14
    SCOPE                          shift and go to state 15

state 41

    (51) E -> menos . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 93
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 42

    (60) E -> not . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 94
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 43

    (61) E -> ID .
    (29) ID -> ID . punto id
    (30) ID -> ID . corchete_A E corchete_B

    mas             reduce using rule 61 (E -> ID .)
    menos           reduce using rule 61 (E -> ID .)
    asterisco       reduce using rule 61 (E -> ID .)
    barra           reduce using rule 61 (E -> ID .)
    caret           reduce using rule 61 (E -> ID .)
    modulo          reduce using rule 61 (E -> ID .)
    mayor           reduce using rule 61 (E -> ID .)
    menor           reduce using rule 61 (E -> ID .)
    mayor_igual     reduce using rule 61 (E -> ID .)
    menor_igual     reduce using rule 61 (E -> ID .)
    igualacion      reduce using rule 61 (E -> ID .)
    diferenciacion  reduce using rule 61 (E -> ID .)
    or              reduce using rule 61 (E -> ID .)
    and             reduce using rule 61 (E -> ID .)
    dospuntos       reduce using rule 61 (E -> ID .)
    error           reduce using rule 61 (E -> ID .)
    function        reduce using rule 61 (E -> ID .)
    struct          reduce using rule 61 (E -> ID .)
    mutable         reduce using rule 61 (E -> ID .)
    id              reduce using rule 61 (E -> ID .)
    if              reduce using rule 61 (E -> ID .)
    while           reduce using rule 61 (E -> ID .)
    for             reduce using rule 61 (E -> ID .)
    break           reduce using rule 61 (E -> ID .)
    continue        reduce using rule 61 (E -> ID .)
    return          reduce using rule 61 (E -> ID .)
    local           reduce using rule 61 (E -> ID .)
    global          reduce using rule 61 (E -> ID .)
    puntoycoma      reduce using rule 61 (E -> ID .)
    tipo            reduce using rule 61 (E -> ID .)
    corchete_B      reduce using rule 61 (E -> ID .)
    parentesis_B    reduce using rule 61 (E -> ID .)
    coma            reduce using rule 61 (E -> ID .)
    punto           shift and go to state 33
    corchete_A      shift and go to state 34


state 44

    (62) E -> parentesis_A . E parentesis_B
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 95
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 45

    (63) E -> LLAMADA .

    mas             reduce using rule 63 (E -> LLAMADA .)
    menos           reduce using rule 63 (E -> LLAMADA .)
    asterisco       reduce using rule 63 (E -> LLAMADA .)
    barra           reduce using rule 63 (E -> LLAMADA .)
    caret           reduce using rule 63 (E -> LLAMADA .)
    modulo          reduce using rule 63 (E -> LLAMADA .)
    mayor           reduce using rule 63 (E -> LLAMADA .)
    menor           reduce using rule 63 (E -> LLAMADA .)
    mayor_igual     reduce using rule 63 (E -> LLAMADA .)
    menor_igual     reduce using rule 63 (E -> LLAMADA .)
    igualacion      reduce using rule 63 (E -> LLAMADA .)
    diferenciacion  reduce using rule 63 (E -> LLAMADA .)
    or              reduce using rule 63 (E -> LLAMADA .)
    and             reduce using rule 63 (E -> LLAMADA .)
    dospuntos       reduce using rule 63 (E -> LLAMADA .)
    error           reduce using rule 63 (E -> LLAMADA .)
    function        reduce using rule 63 (E -> LLAMADA .)
    struct          reduce using rule 63 (E -> LLAMADA .)
    mutable         reduce using rule 63 (E -> LLAMADA .)
    id              reduce using rule 63 (E -> LLAMADA .)
    if              reduce using rule 63 (E -> LLAMADA .)
    while           reduce using rule 63 (E -> LLAMADA .)
    for             reduce using rule 63 (E -> LLAMADA .)
    break           reduce using rule 63 (E -> LLAMADA .)
    continue        reduce using rule 63 (E -> LLAMADA .)
    return          reduce using rule 63 (E -> LLAMADA .)
    local           reduce using rule 63 (E -> LLAMADA .)
    global          reduce using rule 63 (E -> LLAMADA .)
    puntoycoma      reduce using rule 63 (E -> LLAMADA .)
    tipo            reduce using rule 63 (E -> LLAMADA .)
    corchete_B      reduce using rule 63 (E -> LLAMADA .)
    parentesis_B    reduce using rule 63 (E -> LLAMADA .)
    coma            reduce using rule 63 (E -> LLAMADA .)


state 46

    (64) E -> RANGO .

    mas             reduce using rule 64 (E -> RANGO .)
    menos           reduce using rule 64 (E -> RANGO .)
    asterisco       reduce using rule 64 (E -> RANGO .)
    barra           reduce using rule 64 (E -> RANGO .)
    caret           reduce using rule 64 (E -> RANGO .)
    modulo          reduce using rule 64 (E -> RANGO .)
    mayor           reduce using rule 64 (E -> RANGO .)
    menor           reduce using rule 64 (E -> RANGO .)
    mayor_igual     reduce using rule 64 (E -> RANGO .)
    menor_igual     reduce using rule 64 (E -> RANGO .)
    igualacion      reduce using rule 64 (E -> RANGO .)
    diferenciacion  reduce using rule 64 (E -> RANGO .)
    or              reduce using rule 64 (E -> RANGO .)
    and             reduce using rule 64 (E -> RANGO .)
    dospuntos       reduce using rule 64 (E -> RANGO .)
    error           reduce using rule 64 (E -> RANGO .)
    function        reduce using rule 64 (E -> RANGO .)
    struct          reduce using rule 64 (E -> RANGO .)
    mutable         reduce using rule 64 (E -> RANGO .)
    id              reduce using rule 64 (E -> RANGO .)
    if              reduce using rule 64 (E -> RANGO .)
    while           reduce using rule 64 (E -> RANGO .)
    for             reduce using rule 64 (E -> RANGO .)
    break           reduce using rule 64 (E -> RANGO .)
    continue        reduce using rule 64 (E -> RANGO .)
    return          reduce using rule 64 (E -> RANGO .)
    local           reduce using rule 64 (E -> RANGO .)
    global          reduce using rule 64 (E -> RANGO .)
    puntoycoma      reduce using rule 64 (E -> RANGO .)
    tipo            reduce using rule 64 (E -> RANGO .)
    corchete_B      reduce using rule 64 (E -> RANGO .)
    parentesis_B    reduce using rule 64 (E -> RANGO .)
    coma            reduce using rule 64 (E -> RANGO .)


state 47

    (65) E -> ARREGLO .

    mas             reduce using rule 65 (E -> ARREGLO .)
    menos           reduce using rule 65 (E -> ARREGLO .)
    asterisco       reduce using rule 65 (E -> ARREGLO .)
    barra           reduce using rule 65 (E -> ARREGLO .)
    caret           reduce using rule 65 (E -> ARREGLO .)
    modulo          reduce using rule 65 (E -> ARREGLO .)
    mayor           reduce using rule 65 (E -> ARREGLO .)
    menor           reduce using rule 65 (E -> ARREGLO .)
    mayor_igual     reduce using rule 65 (E -> ARREGLO .)
    menor_igual     reduce using rule 65 (E -> ARREGLO .)
    igualacion      reduce using rule 65 (E -> ARREGLO .)
    diferenciacion  reduce using rule 65 (E -> ARREGLO .)
    or              reduce using rule 65 (E -> ARREGLO .)
    and             reduce using rule 65 (E -> ARREGLO .)
    dospuntos       reduce using rule 65 (E -> ARREGLO .)
    error           reduce using rule 65 (E -> ARREGLO .)
    function        reduce using rule 65 (E -> ARREGLO .)
    struct          reduce using rule 65 (E -> ARREGLO .)
    mutable         reduce using rule 65 (E -> ARREGLO .)
    id              reduce using rule 65 (E -> ARREGLO .)
    if              reduce using rule 65 (E -> ARREGLO .)
    while           reduce using rule 65 (E -> ARREGLO .)
    for             reduce using rule 65 (E -> ARREGLO .)
    break           reduce using rule 65 (E -> ARREGLO .)
    continue        reduce using rule 65 (E -> ARREGLO .)
    return          reduce using rule 65 (E -> ARREGLO .)
    local           reduce using rule 65 (E -> ARREGLO .)
    global          reduce using rule 65 (E -> ARREGLO .)
    puntoycoma      reduce using rule 65 (E -> ARREGLO .)
    tipo            reduce using rule 65 (E -> ARREGLO .)
    corchete_B      reduce using rule 65 (E -> ARREGLO .)
    parentesis_B    reduce using rule 65 (E -> ARREGLO .)
    coma            reduce using rule 65 (E -> ARREGLO .)


state 48

    (66) E -> int64 .

    mas             reduce using rule 66 (E -> int64 .)
    menos           reduce using rule 66 (E -> int64 .)
    asterisco       reduce using rule 66 (E -> int64 .)
    barra           reduce using rule 66 (E -> int64 .)
    caret           reduce using rule 66 (E -> int64 .)
    modulo          reduce using rule 66 (E -> int64 .)
    mayor           reduce using rule 66 (E -> int64 .)
    menor           reduce using rule 66 (E -> int64 .)
    mayor_igual     reduce using rule 66 (E -> int64 .)
    menor_igual     reduce using rule 66 (E -> int64 .)
    igualacion      reduce using rule 66 (E -> int64 .)
    diferenciacion  reduce using rule 66 (E -> int64 .)
    or              reduce using rule 66 (E -> int64 .)
    and             reduce using rule 66 (E -> int64 .)
    dospuntos       reduce using rule 66 (E -> int64 .)
    error           reduce using rule 66 (E -> int64 .)
    function        reduce using rule 66 (E -> int64 .)
    struct          reduce using rule 66 (E -> int64 .)
    mutable         reduce using rule 66 (E -> int64 .)
    id              reduce using rule 66 (E -> int64 .)
    if              reduce using rule 66 (E -> int64 .)
    while           reduce using rule 66 (E -> int64 .)
    for             reduce using rule 66 (E -> int64 .)
    break           reduce using rule 66 (E -> int64 .)
    continue        reduce using rule 66 (E -> int64 .)
    return          reduce using rule 66 (E -> int64 .)
    local           reduce using rule 66 (E -> int64 .)
    global          reduce using rule 66 (E -> int64 .)
    puntoycoma      reduce using rule 66 (E -> int64 .)
    tipo            reduce using rule 66 (E -> int64 .)
    corchete_B      reduce using rule 66 (E -> int64 .)
    parentesis_B    reduce using rule 66 (E -> int64 .)
    coma            reduce using rule 66 (E -> int64 .)


state 49

    (67) E -> float64 .

    mas             reduce using rule 67 (E -> float64 .)
    menos           reduce using rule 67 (E -> float64 .)
    asterisco       reduce using rule 67 (E -> float64 .)
    barra           reduce using rule 67 (E -> float64 .)
    caret           reduce using rule 67 (E -> float64 .)
    modulo          reduce using rule 67 (E -> float64 .)
    mayor           reduce using rule 67 (E -> float64 .)
    menor           reduce using rule 67 (E -> float64 .)
    mayor_igual     reduce using rule 67 (E -> float64 .)
    menor_igual     reduce using rule 67 (E -> float64 .)
    igualacion      reduce using rule 67 (E -> float64 .)
    diferenciacion  reduce using rule 67 (E -> float64 .)
    or              reduce using rule 67 (E -> float64 .)
    and             reduce using rule 67 (E -> float64 .)
    dospuntos       reduce using rule 67 (E -> float64 .)
    error           reduce using rule 67 (E -> float64 .)
    function        reduce using rule 67 (E -> float64 .)
    struct          reduce using rule 67 (E -> float64 .)
    mutable         reduce using rule 67 (E -> float64 .)
    id              reduce using rule 67 (E -> float64 .)
    if              reduce using rule 67 (E -> float64 .)
    while           reduce using rule 67 (E -> float64 .)
    for             reduce using rule 67 (E -> float64 .)
    break           reduce using rule 67 (E -> float64 .)
    continue        reduce using rule 67 (E -> float64 .)
    return          reduce using rule 67 (E -> float64 .)
    local           reduce using rule 67 (E -> float64 .)
    global          reduce using rule 67 (E -> float64 .)
    puntoycoma      reduce using rule 67 (E -> float64 .)
    tipo            reduce using rule 67 (E -> float64 .)
    corchete_B      reduce using rule 67 (E -> float64 .)
    parentesis_B    reduce using rule 67 (E -> float64 .)
    coma            reduce using rule 67 (E -> float64 .)


state 50

    (68) E -> bool .

    mas             reduce using rule 68 (E -> bool .)
    menos           reduce using rule 68 (E -> bool .)
    asterisco       reduce using rule 68 (E -> bool .)
    barra           reduce using rule 68 (E -> bool .)
    caret           reduce using rule 68 (E -> bool .)
    modulo          reduce using rule 68 (E -> bool .)
    mayor           reduce using rule 68 (E -> bool .)
    menor           reduce using rule 68 (E -> bool .)
    mayor_igual     reduce using rule 68 (E -> bool .)
    menor_igual     reduce using rule 68 (E -> bool .)
    igualacion      reduce using rule 68 (E -> bool .)
    diferenciacion  reduce using rule 68 (E -> bool .)
    or              reduce using rule 68 (E -> bool .)
    and             reduce using rule 68 (E -> bool .)
    dospuntos       reduce using rule 68 (E -> bool .)
    error           reduce using rule 68 (E -> bool .)
    function        reduce using rule 68 (E -> bool .)
    struct          reduce using rule 68 (E -> bool .)
    mutable         reduce using rule 68 (E -> bool .)
    id              reduce using rule 68 (E -> bool .)
    if              reduce using rule 68 (E -> bool .)
    while           reduce using rule 68 (E -> bool .)
    for             reduce using rule 68 (E -> bool .)
    break           reduce using rule 68 (E -> bool .)
    continue        reduce using rule 68 (E -> bool .)
    return          reduce using rule 68 (E -> bool .)
    local           reduce using rule 68 (E -> bool .)
    global          reduce using rule 68 (E -> bool .)
    puntoycoma      reduce using rule 68 (E -> bool .)
    tipo            reduce using rule 68 (E -> bool .)
    corchete_B      reduce using rule 68 (E -> bool .)
    parentesis_B    reduce using rule 68 (E -> bool .)
    coma            reduce using rule 68 (E -> bool .)


state 51

    (69) E -> char .

    mas             reduce using rule 69 (E -> char .)
    menos           reduce using rule 69 (E -> char .)
    asterisco       reduce using rule 69 (E -> char .)
    barra           reduce using rule 69 (E -> char .)
    caret           reduce using rule 69 (E -> char .)
    modulo          reduce using rule 69 (E -> char .)
    mayor           reduce using rule 69 (E -> char .)
    menor           reduce using rule 69 (E -> char .)
    mayor_igual     reduce using rule 69 (E -> char .)
    menor_igual     reduce using rule 69 (E -> char .)
    igualacion      reduce using rule 69 (E -> char .)
    diferenciacion  reduce using rule 69 (E -> char .)
    or              reduce using rule 69 (E -> char .)
    and             reduce using rule 69 (E -> char .)
    dospuntos       reduce using rule 69 (E -> char .)
    error           reduce using rule 69 (E -> char .)
    function        reduce using rule 69 (E -> char .)
    struct          reduce using rule 69 (E -> char .)
    mutable         reduce using rule 69 (E -> char .)
    id              reduce using rule 69 (E -> char .)
    if              reduce using rule 69 (E -> char .)
    while           reduce using rule 69 (E -> char .)
    for             reduce using rule 69 (E -> char .)
    break           reduce using rule 69 (E -> char .)
    continue        reduce using rule 69 (E -> char .)
    return          reduce using rule 69 (E -> char .)
    local           reduce using rule 69 (E -> char .)
    global          reduce using rule 69 (E -> char .)
    puntoycoma      reduce using rule 69 (E -> char .)
    tipo            reduce using rule 69 (E -> char .)
    corchete_B      reduce using rule 69 (E -> char .)
    parentesis_B    reduce using rule 69 (E -> char .)
    coma            reduce using rule 69 (E -> char .)


state 52

    (70) E -> string .

    mas             reduce using rule 70 (E -> string .)
    menos           reduce using rule 70 (E -> string .)
    asterisco       reduce using rule 70 (E -> string .)
    barra           reduce using rule 70 (E -> string .)
    caret           reduce using rule 70 (E -> string .)
    modulo          reduce using rule 70 (E -> string .)
    mayor           reduce using rule 70 (E -> string .)
    menor           reduce using rule 70 (E -> string .)
    mayor_igual     reduce using rule 70 (E -> string .)
    menor_igual     reduce using rule 70 (E -> string .)
    igualacion      reduce using rule 70 (E -> string .)
    diferenciacion  reduce using rule 70 (E -> string .)
    or              reduce using rule 70 (E -> string .)
    and             reduce using rule 70 (E -> string .)
    dospuntos       reduce using rule 70 (E -> string .)
    error           reduce using rule 70 (E -> string .)
    function        reduce using rule 70 (E -> string .)
    struct          reduce using rule 70 (E -> string .)
    mutable         reduce using rule 70 (E -> string .)
    id              reduce using rule 70 (E -> string .)
    if              reduce using rule 70 (E -> string .)
    while           reduce using rule 70 (E -> string .)
    for             reduce using rule 70 (E -> string .)
    break           reduce using rule 70 (E -> string .)
    continue        reduce using rule 70 (E -> string .)
    return          reduce using rule 70 (E -> string .)
    local           reduce using rule 70 (E -> string .)
    global          reduce using rule 70 (E -> string .)
    puntoycoma      reduce using rule 70 (E -> string .)
    tipo            reduce using rule 70 (E -> string .)
    corchete_B      reduce using rule 70 (E -> string .)
    parentesis_B    reduce using rule 70 (E -> string .)
    coma            reduce using rule 70 (E -> string .)


state 53

    (71) E -> Nothing .

    mas             reduce using rule 71 (E -> Nothing .)
    menos           reduce using rule 71 (E -> Nothing .)
    asterisco       reduce using rule 71 (E -> Nothing .)
    barra           reduce using rule 71 (E -> Nothing .)
    caret           reduce using rule 71 (E -> Nothing .)
    modulo          reduce using rule 71 (E -> Nothing .)
    mayor           reduce using rule 71 (E -> Nothing .)
    menor           reduce using rule 71 (E -> Nothing .)
    mayor_igual     reduce using rule 71 (E -> Nothing .)
    menor_igual     reduce using rule 71 (E -> Nothing .)
    igualacion      reduce using rule 71 (E -> Nothing .)
    diferenciacion  reduce using rule 71 (E -> Nothing .)
    or              reduce using rule 71 (E -> Nothing .)
    and             reduce using rule 71 (E -> Nothing .)
    dospuntos       reduce using rule 71 (E -> Nothing .)
    error           reduce using rule 71 (E -> Nothing .)
    function        reduce using rule 71 (E -> Nothing .)
    struct          reduce using rule 71 (E -> Nothing .)
    mutable         reduce using rule 71 (E -> Nothing .)
    id              reduce using rule 71 (E -> Nothing .)
    if              reduce using rule 71 (E -> Nothing .)
    while           reduce using rule 71 (E -> Nothing .)
    for             reduce using rule 71 (E -> Nothing .)
    break           reduce using rule 71 (E -> Nothing .)
    continue        reduce using rule 71 (E -> Nothing .)
    return          reduce using rule 71 (E -> Nothing .)
    local           reduce using rule 71 (E -> Nothing .)
    global          reduce using rule 71 (E -> Nothing .)
    puntoycoma      reduce using rule 71 (E -> Nothing .)
    tipo            reduce using rule 71 (E -> Nothing .)
    corchete_B      reduce using rule 71 (E -> Nothing .)
    parentesis_B    reduce using rule 71 (E -> Nothing .)
    coma            reduce using rule 71 (E -> Nothing .)


state 54

    (31) ID -> id .
    (74) LLAMADA -> id . parentesis_A EXP parentesis_B
    (75) LLAMADA -> id . parentesis_A parentesis_B

    punto           reduce using rule 31 (ID -> id .)
    corchete_A      reduce using rule 31 (ID -> id .)
    mas             reduce using rule 31 (ID -> id .)
    menos           reduce using rule 31 (ID -> id .)
    asterisco       reduce using rule 31 (ID -> id .)
    barra           reduce using rule 31 (ID -> id .)
    caret           reduce using rule 31 (ID -> id .)
    modulo          reduce using rule 31 (ID -> id .)
    mayor           reduce using rule 31 (ID -> id .)
    menor           reduce using rule 31 (ID -> id .)
    mayor_igual     reduce using rule 31 (ID -> id .)
    menor_igual     reduce using rule 31 (ID -> id .)
    igualacion      reduce using rule 31 (ID -> id .)
    diferenciacion  reduce using rule 31 (ID -> id .)
    or              reduce using rule 31 (ID -> id .)
    and             reduce using rule 31 (ID -> id .)
    dospuntos       reduce using rule 31 (ID -> id .)
    error           reduce using rule 31 (ID -> id .)
    function        reduce using rule 31 (ID -> id .)
    struct          reduce using rule 31 (ID -> id .)
    mutable         reduce using rule 31 (ID -> id .)
    id              reduce using rule 31 (ID -> id .)
    if              reduce using rule 31 (ID -> id .)
    while           reduce using rule 31 (ID -> id .)
    for             reduce using rule 31 (ID -> id .)
    break           reduce using rule 31 (ID -> id .)
    continue        reduce using rule 31 (ID -> id .)
    return          reduce using rule 31 (ID -> id .)
    local           reduce using rule 31 (ID -> id .)
    global          reduce using rule 31 (ID -> id .)
    puntoycoma      reduce using rule 31 (ID -> id .)
    tipo            reduce using rule 31 (ID -> id .)
    corchete_B      reduce using rule 31 (ID -> id .)
    parentesis_B    reduce using rule 31 (ID -> id .)
    coma            reduce using rule 31 (ID -> id .)
    parentesis_A    shift and go to state 36


state 55

    (72) ARREGLO -> corchete_A . EXP corchete_B
    (73) ARREGLO -> corchete_A . corchete_B
    (43) EXP -> . EXP coma E
    (44) EXP -> . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    corchete_B      shift and go to state 97
    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    EXP                            shift and go to state 96
    E                              shift and go to state 69
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 56

    (86) RANGO -> dospuntos .

    mas             reduce using rule 86 (RANGO -> dospuntos .)
    menos           reduce using rule 86 (RANGO -> dospuntos .)
    asterisco       reduce using rule 86 (RANGO -> dospuntos .)
    barra           reduce using rule 86 (RANGO -> dospuntos .)
    caret           reduce using rule 86 (RANGO -> dospuntos .)
    modulo          reduce using rule 86 (RANGO -> dospuntos .)
    mayor           reduce using rule 86 (RANGO -> dospuntos .)
    menor           reduce using rule 86 (RANGO -> dospuntos .)
    mayor_igual     reduce using rule 86 (RANGO -> dospuntos .)
    menor_igual     reduce using rule 86 (RANGO -> dospuntos .)
    igualacion      reduce using rule 86 (RANGO -> dospuntos .)
    diferenciacion  reduce using rule 86 (RANGO -> dospuntos .)
    or              reduce using rule 86 (RANGO -> dospuntos .)
    and             reduce using rule 86 (RANGO -> dospuntos .)
    dospuntos       reduce using rule 86 (RANGO -> dospuntos .)
    error           reduce using rule 86 (RANGO -> dospuntos .)
    function        reduce using rule 86 (RANGO -> dospuntos .)
    struct          reduce using rule 86 (RANGO -> dospuntos .)
    mutable         reduce using rule 86 (RANGO -> dospuntos .)
    id              reduce using rule 86 (RANGO -> dospuntos .)
    if              reduce using rule 86 (RANGO -> dospuntos .)
    while           reduce using rule 86 (RANGO -> dospuntos .)
    for             reduce using rule 86 (RANGO -> dospuntos .)
    break           reduce using rule 86 (RANGO -> dospuntos .)
    continue        reduce using rule 86 (RANGO -> dospuntos .)
    return          reduce using rule 86 (RANGO -> dospuntos .)
    local           reduce using rule 86 (RANGO -> dospuntos .)
    global          reduce using rule 86 (RANGO -> dospuntos .)
    puntoycoma      reduce using rule 86 (RANGO -> dospuntos .)
    tipo            reduce using rule 86 (RANGO -> dospuntos .)
    corchete_B      reduce using rule 86 (RANGO -> dospuntos .)
    parentesis_B    reduce using rule 86 (RANGO -> dospuntos .)
    coma            reduce using rule 86 (RANGO -> dospuntos .)


state 57

    (83) WHILE -> while E . BLOQUE
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E
    (15) BLOQUE -> . INS end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . FUNCION
    (7) I -> . STRUCT
    (8) I -> . LLAMADA
    (9) I -> . IF
    (10) I -> . WHILE
    (11) I -> . FOR
    (12) I -> . BREAK
    (13) I -> . CONTINUE
    (14) I -> . RETURN
    (24) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (25) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (26) ASIGNACION -> . SCOPE id
    (32) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (33) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (37) STRUCT -> . struct id ATR end
    (38) STRUCT -> . mutable struct id ATR end
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (76) IF -> . if E BLOQUE
    (77) IF -> . if E BLOQUE_ABIERTO ELSE
    (78) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (83) WHILE -> . while E BLOQUE
    (84) FOR -> . for id in E BLOQUE
    (87) BREAK -> . break
    (88) CONTINUE -> . continue
    (89) RETURN -> . return E
    (90) RETURN -> . return
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (22) SCOPE -> . local
    (23) SCOPE -> . global

    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82
    mayor           shift and go to state 83
    menor           shift and go to state 84
    mayor_igual     shift and go to state 85
    menor_igual     shift and go to state 86
    igualacion      shift and go to state 87
    diferenciacion  shift and go to state 88
    or              shift and go to state 89
    and             shift and go to state 90
    dospuntos       shift and go to state 91
    error           shift and go to state 3
    function        shift and go to state 17
    struct          shift and go to state 18
    mutable         shift and go to state 19
    id              shift and go to state 16
    if              shift and go to state 20
    while           shift and go to state 21
    for             shift and go to state 22
    break           shift and go to state 23
    continue        shift and go to state 24
    return          shift and go to state 25
    local           shift and go to state 26
    global          shift and go to state 27

    BLOQUE                         shift and go to state 98
    INS                            shift and go to state 99
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    FUNCION                        shift and go to state 5
    STRUCT                         shift and go to state 6
    LLAMADA                        shift and go to state 7
    IF                             shift and go to state 8
    WHILE                          shift and go to state 9
    FOR                            shift and go to state 10
    BREAK                          shift and go to state 11
    CONTINUE                       shift and go to state 12
    RETURN                         shift and go to state 13
    ID                             shift and go to state 14
    SCOPE                          shift and go to state 15

state 58

    (84) FOR -> for id . in E BLOQUE

    in              shift and go to state 100


state 59

    (89) RETURN -> return E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    puntoycoma      reduce using rule 89 (RETURN -> return E .)
    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82
    mayor           shift and go to state 83
    menor           shift and go to state 84
    mayor_igual     shift and go to state 85
    menor_igual     shift and go to state 86
    igualacion      shift and go to state 87
    diferenciacion  shift and go to state 88
    or              shift and go to state 89
    and             shift and go to state 90
    dospuntos       shift and go to state 91


state 60

    (1) INS -> INS I puntoycoma .

    error           reduce using rule 1 (INS -> INS I puntoycoma .)
    function        reduce using rule 1 (INS -> INS I puntoycoma .)
    struct          reduce using rule 1 (INS -> INS I puntoycoma .)
    mutable         reduce using rule 1 (INS -> INS I puntoycoma .)
    id              reduce using rule 1 (INS -> INS I puntoycoma .)
    if              reduce using rule 1 (INS -> INS I puntoycoma .)
    while           reduce using rule 1 (INS -> INS I puntoycoma .)
    for             reduce using rule 1 (INS -> INS I puntoycoma .)
    break           reduce using rule 1 (INS -> INS I puntoycoma .)
    continue        reduce using rule 1 (INS -> INS I puntoycoma .)
    return          reduce using rule 1 (INS -> INS I puntoycoma .)
    local           reduce using rule 1 (INS -> INS I puntoycoma .)
    global          reduce using rule 1 (INS -> INS I puntoycoma .)
    $end            reduce using rule 1 (INS -> INS I puntoycoma .)
    end             reduce using rule 1 (INS -> INS I puntoycoma .)
    else            reduce using rule 1 (INS -> INS I puntoycoma .)
    elseif          reduce using rule 1 (INS -> INS I puntoycoma .)


state 61

    (3) INS -> INS error puntoycoma .

    error           reduce using rule 3 (INS -> INS error puntoycoma .)
    function        reduce using rule 3 (INS -> INS error puntoycoma .)
    struct          reduce using rule 3 (INS -> INS error puntoycoma .)
    mutable         reduce using rule 3 (INS -> INS error puntoycoma .)
    id              reduce using rule 3 (INS -> INS error puntoycoma .)
    if              reduce using rule 3 (INS -> INS error puntoycoma .)
    while           reduce using rule 3 (INS -> INS error puntoycoma .)
    for             reduce using rule 3 (INS -> INS error puntoycoma .)
    break           reduce using rule 3 (INS -> INS error puntoycoma .)
    continue        reduce using rule 3 (INS -> INS error puntoycoma .)
    return          reduce using rule 3 (INS -> INS error puntoycoma .)
    local           reduce using rule 3 (INS -> INS error puntoycoma .)
    global          reduce using rule 3 (INS -> INS error puntoycoma .)
    $end            reduce using rule 3 (INS -> INS error puntoycoma .)
    end             reduce using rule 3 (INS -> INS error puntoycoma .)
    else            reduce using rule 3 (INS -> INS error puntoycoma .)
    elseif          reduce using rule 3 (INS -> INS error puntoycoma .)


state 62

    (24) ASIGNACION -> ID igual ASIGNACION_VALOR .

    puntoycoma      reduce using rule 24 (ASIGNACION -> ID igual ASIGNACION_VALOR .)


state 63

    (27) ASIGNACION_VALOR -> E .
    (28) ASIGNACION_VALOR -> E . tipo TIPO
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    puntoycoma      reduce using rule 27 (ASIGNACION_VALOR -> E .)
    tipo            shift and go to state 101
    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82
    mayor           shift and go to state 83
    menor           shift and go to state 84
    mayor_igual     shift and go to state 85
    menor_igual     shift and go to state 86
    igualacion      shift and go to state 87
    diferenciacion  shift and go to state 88
    or              shift and go to state 89
    and             shift and go to state 90
    dospuntos       shift and go to state 91


state 64

    (29) ID -> ID punto id .

    igual           reduce using rule 29 (ID -> ID punto id .)
    punto           reduce using rule 29 (ID -> ID punto id .)
    corchete_A      reduce using rule 29 (ID -> ID punto id .)
    mas             reduce using rule 29 (ID -> ID punto id .)
    menos           reduce using rule 29 (ID -> ID punto id .)
    asterisco       reduce using rule 29 (ID -> ID punto id .)
    barra           reduce using rule 29 (ID -> ID punto id .)
    caret           reduce using rule 29 (ID -> ID punto id .)
    modulo          reduce using rule 29 (ID -> ID punto id .)
    mayor           reduce using rule 29 (ID -> ID punto id .)
    menor           reduce using rule 29 (ID -> ID punto id .)
    mayor_igual     reduce using rule 29 (ID -> ID punto id .)
    menor_igual     reduce using rule 29 (ID -> ID punto id .)
    igualacion      reduce using rule 29 (ID -> ID punto id .)
    diferenciacion  reduce using rule 29 (ID -> ID punto id .)
    or              reduce using rule 29 (ID -> ID punto id .)
    and             reduce using rule 29 (ID -> ID punto id .)
    dospuntos       reduce using rule 29 (ID -> ID punto id .)
    error           reduce using rule 29 (ID -> ID punto id .)
    function        reduce using rule 29 (ID -> ID punto id .)
    struct          reduce using rule 29 (ID -> ID punto id .)
    mutable         reduce using rule 29 (ID -> ID punto id .)
    id              reduce using rule 29 (ID -> ID punto id .)
    if              reduce using rule 29 (ID -> ID punto id .)
    while           reduce using rule 29 (ID -> ID punto id .)
    for             reduce using rule 29 (ID -> ID punto id .)
    break           reduce using rule 29 (ID -> ID punto id .)
    continue        reduce using rule 29 (ID -> ID punto id .)
    return          reduce using rule 29 (ID -> ID punto id .)
    local           reduce using rule 29 (ID -> ID punto id .)
    global          reduce using rule 29 (ID -> ID punto id .)
    puntoycoma      reduce using rule 29 (ID -> ID punto id .)
    tipo            reduce using rule 29 (ID -> ID punto id .)
    corchete_B      reduce using rule 29 (ID -> ID punto id .)
    parentesis_B    reduce using rule 29 (ID -> ID punto id .)
    coma            reduce using rule 29 (ID -> ID punto id .)


state 65

    (30) ID -> ID corchete_A E . corchete_B
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    corchete_B      shift and go to state 102
    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82
    mayor           shift and go to state 83
    menor           shift and go to state 84
    mayor_igual     shift and go to state 85
    menor_igual     shift and go to state 86
    igualacion      shift and go to state 87
    diferenciacion  shift and go to state 88
    or              shift and go to state 89
    and             shift and go to state 90
    dospuntos       shift and go to state 91


state 66

    (25) ASIGNACION -> SCOPE id igual . ASIGNACION_VALOR
    (27) ASIGNACION_VALOR -> . E
    (28) ASIGNACION_VALOR -> . E tipo TIPO
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    ASIGNACION_VALOR               shift and go to state 103
    E                              shift and go to state 63
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 67

    (74) LLAMADA -> id parentesis_A EXP . parentesis_B
    (43) EXP -> EXP . coma E

    parentesis_B    shift and go to state 104
    coma            shift and go to state 105


state 68

    (75) LLAMADA -> id parentesis_A parentesis_B .

    puntoycoma      reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    mas             reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    menos           reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    asterisco       reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    barra           reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    caret           reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    modulo          reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    mayor           reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    menor           reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    mayor_igual     reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    menor_igual     reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    igualacion      reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    diferenciacion  reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    or              reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    and             reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    dospuntos       reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    error           reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    function        reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    struct          reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    mutable         reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    id              reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    if              reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    while           reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    for             reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    break           reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    continue        reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    return          reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    local           reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    global          reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    tipo            reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    corchete_B      reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    parentesis_B    reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)
    coma            reduce using rule 75 (LLAMADA -> id parentesis_A parentesis_B .)


state 69

    (44) EXP -> E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    parentesis_B    reduce using rule 44 (EXP -> E .)
    coma            reduce using rule 44 (EXP -> E .)
    corchete_B      reduce using rule 44 (EXP -> E .)
    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82
    mayor           shift and go to state 83
    menor           shift and go to state 84
    mayor_igual     shift and go to state 85
    menor_igual     shift and go to state 86
    igualacion      shift and go to state 87
    diferenciacion  shift and go to state 88
    or              shift and go to state 89
    and             shift and go to state 90
    dospuntos       shift and go to state 91


state 70

    (32) FUNCION -> function id parentesis_A . PAR parentesis_B BLOQUE
    (33) FUNCION -> function id parentesis_A . parentesis_B BLOQUE
    (34) PAR -> . PAR coma P
    (35) PAR -> . P
    (36) P -> . id

    parentesis_B    shift and go to state 108
    id              shift and go to state 106

    PAR                            shift and go to state 107
    P                              shift and go to state 109

state 71

    (41) A -> id . tipo TIPO puntoycoma
    (42) A -> id . puntoycoma

    tipo            shift and go to state 110
    puntoycoma      shift and go to state 111


state 72

    (37) STRUCT -> struct id ATR . end
    (39) ATR -> ATR . A
    (41) A -> . id tipo TIPO puntoycoma
    (42) A -> . id puntoycoma

    end             shift and go to state 112
    id              shift and go to state 71

    A                              shift and go to state 113

state 73

    (40) ATR -> A .

    end             reduce using rule 40 (ATR -> A .)
    id              reduce using rule 40 (ATR -> A .)


state 74

    (38) STRUCT -> mutable struct id . ATR end
    (39) ATR -> . ATR A
    (40) ATR -> . A
    (41) A -> . id tipo TIPO puntoycoma
    (42) A -> . id puntoycoma

    id              shift and go to state 71

    ATR                            shift and go to state 114
    A                              shift and go to state 73

state 75

    (76) IF -> if E BLOQUE .

    puntoycoma      reduce using rule 76 (IF -> if E BLOQUE .)


state 76

    (77) IF -> if E BLOQUE_ABIERTO . ELSE
    (78) IF -> if E BLOQUE_ABIERTO . ELSEIF
    (82) ELSE -> . else BLOQUE
    (79) ELSEIF -> . elseif E BLOQUE
    (80) ELSEIF -> . elseif E BLOQUE_ABIERTO ELSEIF
    (81) ELSEIF -> . elseif E BLOQUE_ABIERTO ELSE

    else            shift and go to state 117
    elseif          shift and go to state 118

    ELSE                           shift and go to state 115
    ELSEIF                         shift and go to state 116

state 77

    (45) E -> E mas . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 119
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 78

    (46) E -> E menos . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 120
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 79

    (47) E -> E asterisco . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 121
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 80

    (48) E -> E barra . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 122
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 81

    (49) E -> E caret . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 123
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 82

    (50) E -> E modulo . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 124
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 83

    (52) E -> E mayor . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 125
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 84

    (53) E -> E menor . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 126
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 85

    (54) E -> E mayor_igual . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 127
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 86

    (55) E -> E menor_igual . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 128
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 87

    (56) E -> E igualacion . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 129
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 88

    (57) E -> E diferenciacion . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 130
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 89

    (58) E -> E or . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 131
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 90

    (59) E -> E and . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 132
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 91

    (85) RANGO -> E dospuntos . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 133
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 92

    (15) BLOQUE -> INS . end
    (16) BLOQUE_ABIERTO -> INS .
    (1) INS -> INS . I puntoycoma
    (3) INS -> INS . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . FUNCION
    (7) I -> . STRUCT
    (8) I -> . LLAMADA
    (9) I -> . IF
    (10) I -> . WHILE
    (11) I -> . FOR
    (12) I -> . BREAK
    (13) I -> . CONTINUE
    (14) I -> . RETURN
    (24) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (25) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (26) ASIGNACION -> . SCOPE id
    (32) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (33) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (37) STRUCT -> . struct id ATR end
    (38) STRUCT -> . mutable struct id ATR end
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (76) IF -> . if E BLOQUE
    (77) IF -> . if E BLOQUE_ABIERTO ELSE
    (78) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (83) WHILE -> . while E BLOQUE
    (84) FOR -> . for id in E BLOQUE
    (87) BREAK -> . break
    (88) CONTINUE -> . continue
    (89) RETURN -> . return E
    (90) RETURN -> . return
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (22) SCOPE -> . local
    (23) SCOPE -> . global

    end             shift and go to state 134
    else            reduce using rule 16 (BLOQUE_ABIERTO -> INS .)
    elseif          reduce using rule 16 (BLOQUE_ABIERTO -> INS .)
    error           shift and go to state 29
    function        shift and go to state 17
    struct          shift and go to state 18
    mutable         shift and go to state 19
    id              shift and go to state 16
    if              shift and go to state 20
    while           shift and go to state 21
    for             shift and go to state 22
    break           shift and go to state 23
    continue        shift and go to state 24
    return          shift and go to state 25
    local           shift and go to state 26
    global          shift and go to state 27

    I                              shift and go to state 28
    ASIGNACION                     shift and go to state 4
    FUNCION                        shift and go to state 5
    STRUCT                         shift and go to state 6
    LLAMADA                        shift and go to state 7
    IF                             shift and go to state 8
    WHILE                          shift and go to state 9
    FOR                            shift and go to state 10
    BREAK                          shift and go to state 11
    CONTINUE                       shift and go to state 12
    RETURN                         shift and go to state 13
    ID                             shift and go to state 14
    SCOPE                          shift and go to state 15

state 93

    (51) E -> menos E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    mas             reduce using rule 51 (E -> menos E .)
    menos           reduce using rule 51 (E -> menos E .)
    asterisco       reduce using rule 51 (E -> menos E .)
    barra           reduce using rule 51 (E -> menos E .)
    caret           reduce using rule 51 (E -> menos E .)
    modulo          reduce using rule 51 (E -> menos E .)
    mayor           reduce using rule 51 (E -> menos E .)
    menor           reduce using rule 51 (E -> menos E .)
    mayor_igual     reduce using rule 51 (E -> menos E .)
    menor_igual     reduce using rule 51 (E -> menos E .)
    igualacion      reduce using rule 51 (E -> menos E .)
    diferenciacion  reduce using rule 51 (E -> menos E .)
    or              reduce using rule 51 (E -> menos E .)
    and             reduce using rule 51 (E -> menos E .)
    dospuntos       reduce using rule 51 (E -> menos E .)
    error           reduce using rule 51 (E -> menos E .)
    function        reduce using rule 51 (E -> menos E .)
    struct          reduce using rule 51 (E -> menos E .)
    mutable         reduce using rule 51 (E -> menos E .)
    id              reduce using rule 51 (E -> menos E .)
    if              reduce using rule 51 (E -> menos E .)
    while           reduce using rule 51 (E -> menos E .)
    for             reduce using rule 51 (E -> menos E .)
    break           reduce using rule 51 (E -> menos E .)
    continue        reduce using rule 51 (E -> menos E .)
    return          reduce using rule 51 (E -> menos E .)
    local           reduce using rule 51 (E -> menos E .)
    global          reduce using rule 51 (E -> menos E .)
    puntoycoma      reduce using rule 51 (E -> menos E .)
    tipo            reduce using rule 51 (E -> menos E .)
    corchete_B      reduce using rule 51 (E -> menos E .)
    parentesis_B    reduce using rule 51 (E -> menos E .)
    coma            reduce using rule 51 (E -> menos E .)

  ! mas             [ shift and go to state 77 ]
  ! menos           [ shift and go to state 78 ]
  ! asterisco       [ shift and go to state 79 ]
  ! barra           [ shift and go to state 80 ]
  ! caret           [ shift and go to state 81 ]
  ! modulo          [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! menor           [ shift and go to state 84 ]
  ! mayor_igual     [ shift and go to state 85 ]
  ! menor_igual     [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferenciacion  [ shift and go to state 88 ]
  ! or              [ shift and go to state 89 ]
  ! and             [ shift and go to state 90 ]
  ! dospuntos       [ shift and go to state 91 ]


state 94

    (60) E -> not E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    mas             reduce using rule 60 (E -> not E .)
    menos           reduce using rule 60 (E -> not E .)
    asterisco       reduce using rule 60 (E -> not E .)
    barra           reduce using rule 60 (E -> not E .)
    caret           reduce using rule 60 (E -> not E .)
    modulo          reduce using rule 60 (E -> not E .)
    mayor           reduce using rule 60 (E -> not E .)
    menor           reduce using rule 60 (E -> not E .)
    mayor_igual     reduce using rule 60 (E -> not E .)
    menor_igual     reduce using rule 60 (E -> not E .)
    igualacion      reduce using rule 60 (E -> not E .)
    diferenciacion  reduce using rule 60 (E -> not E .)
    or              reduce using rule 60 (E -> not E .)
    and             reduce using rule 60 (E -> not E .)
    dospuntos       reduce using rule 60 (E -> not E .)
    error           reduce using rule 60 (E -> not E .)
    function        reduce using rule 60 (E -> not E .)
    struct          reduce using rule 60 (E -> not E .)
    mutable         reduce using rule 60 (E -> not E .)
    id              reduce using rule 60 (E -> not E .)
    if              reduce using rule 60 (E -> not E .)
    while           reduce using rule 60 (E -> not E .)
    for             reduce using rule 60 (E -> not E .)
    break           reduce using rule 60 (E -> not E .)
    continue        reduce using rule 60 (E -> not E .)
    return          reduce using rule 60 (E -> not E .)
    local           reduce using rule 60 (E -> not E .)
    global          reduce using rule 60 (E -> not E .)
    puntoycoma      reduce using rule 60 (E -> not E .)
    tipo            reduce using rule 60 (E -> not E .)
    corchete_B      reduce using rule 60 (E -> not E .)
    parentesis_B    reduce using rule 60 (E -> not E .)
    coma            reduce using rule 60 (E -> not E .)

  ! mas             [ shift and go to state 77 ]
  ! menos           [ shift and go to state 78 ]
  ! asterisco       [ shift and go to state 79 ]
  ! barra           [ shift and go to state 80 ]
  ! caret           [ shift and go to state 81 ]
  ! modulo          [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! menor           [ shift and go to state 84 ]
  ! mayor_igual     [ shift and go to state 85 ]
  ! menor_igual     [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferenciacion  [ shift and go to state 88 ]
  ! or              [ shift and go to state 89 ]
  ! and             [ shift and go to state 90 ]
  ! dospuntos       [ shift and go to state 91 ]


state 95

    (62) E -> parentesis_A E . parentesis_B
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    parentesis_B    shift and go to state 135
    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82
    mayor           shift and go to state 83
    menor           shift and go to state 84
    mayor_igual     shift and go to state 85
    menor_igual     shift and go to state 86
    igualacion      shift and go to state 87
    diferenciacion  shift and go to state 88
    or              shift and go to state 89
    and             shift and go to state 90
    dospuntos       shift and go to state 91


state 96

    (72) ARREGLO -> corchete_A EXP . corchete_B
    (43) EXP -> EXP . coma E

    corchete_B      shift and go to state 136
    coma            shift and go to state 105


state 97

    (73) ARREGLO -> corchete_A corchete_B .

    mas             reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    menos           reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    asterisco       reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    barra           reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    caret           reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    modulo          reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    mayor           reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    menor           reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    mayor_igual     reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    menor_igual     reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    igualacion      reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    diferenciacion  reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    or              reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    and             reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    dospuntos       reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    error           reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    function        reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    struct          reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    mutable         reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    id              reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    if              reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    while           reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    for             reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    break           reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    continue        reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    return          reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    local           reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    global          reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    puntoycoma      reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    tipo            reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    corchete_B      reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    parentesis_B    reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)
    coma            reduce using rule 73 (ARREGLO -> corchete_A corchete_B .)


state 98

    (83) WHILE -> while E BLOQUE .

    puntoycoma      reduce using rule 83 (WHILE -> while E BLOQUE .)


state 99

    (15) BLOQUE -> INS . end
    (1) INS -> INS . I puntoycoma
    (3) INS -> INS . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . FUNCION
    (7) I -> . STRUCT
    (8) I -> . LLAMADA
    (9) I -> . IF
    (10) I -> . WHILE
    (11) I -> . FOR
    (12) I -> . BREAK
    (13) I -> . CONTINUE
    (14) I -> . RETURN
    (24) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (25) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (26) ASIGNACION -> . SCOPE id
    (32) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (33) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (37) STRUCT -> . struct id ATR end
    (38) STRUCT -> . mutable struct id ATR end
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (76) IF -> . if E BLOQUE
    (77) IF -> . if E BLOQUE_ABIERTO ELSE
    (78) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (83) WHILE -> . while E BLOQUE
    (84) FOR -> . for id in E BLOQUE
    (87) BREAK -> . break
    (88) CONTINUE -> . continue
    (89) RETURN -> . return E
    (90) RETURN -> . return
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (22) SCOPE -> . local
    (23) SCOPE -> . global

    end             shift and go to state 134
    error           shift and go to state 29
    function        shift and go to state 17
    struct          shift and go to state 18
    mutable         shift and go to state 19
    id              shift and go to state 16
    if              shift and go to state 20
    while           shift and go to state 21
    for             shift and go to state 22
    break           shift and go to state 23
    continue        shift and go to state 24
    return          shift and go to state 25
    local           shift and go to state 26
    global          shift and go to state 27

    I                              shift and go to state 28
    ASIGNACION                     shift and go to state 4
    FUNCION                        shift and go to state 5
    STRUCT                         shift and go to state 6
    LLAMADA                        shift and go to state 7
    IF                             shift and go to state 8
    WHILE                          shift and go to state 9
    FOR                            shift and go to state 10
    BREAK                          shift and go to state 11
    CONTINUE                       shift and go to state 12
    RETURN                         shift and go to state 13
    ID                             shift and go to state 14
    SCOPE                          shift and go to state 15

state 100

    (84) FOR -> for id in . E BLOQUE
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 137
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 101

    (28) ASIGNACION_VALOR -> E tipo . TIPO
    (17) TIPO -> . Int64
    (18) TIPO -> . Float64
    (19) TIPO -> . Bool
    (20) TIPO -> . Char
    (21) TIPO -> . String

    Int64           shift and go to state 139
    Float64         shift and go to state 140
    Bool            shift and go to state 141
    Char            shift and go to state 142
    String          shift and go to state 143

    TIPO                           shift and go to state 138

state 102

    (30) ID -> ID corchete_A E corchete_B .

    igual           reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    punto           reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    corchete_A      reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    mas             reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    menos           reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    asterisco       reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    barra           reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    caret           reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    modulo          reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    mayor           reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    menor           reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    mayor_igual     reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    menor_igual     reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    igualacion      reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    diferenciacion  reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    or              reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    and             reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    dospuntos       reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    error           reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    function        reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    struct          reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    mutable         reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    id              reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    if              reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    while           reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    for             reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    break           reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    continue        reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    return          reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    local           reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    global          reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    puntoycoma      reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    tipo            reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    corchete_B      reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    parentesis_B    reduce using rule 30 (ID -> ID corchete_A E corchete_B .)
    coma            reduce using rule 30 (ID -> ID corchete_A E corchete_B .)


state 103

    (25) ASIGNACION -> SCOPE id igual ASIGNACION_VALOR .

    puntoycoma      reduce using rule 25 (ASIGNACION -> SCOPE id igual ASIGNACION_VALOR .)


state 104

    (74) LLAMADA -> id parentesis_A EXP parentesis_B .

    puntoycoma      reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    mas             reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    menos           reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    asterisco       reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    barra           reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    caret           reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    modulo          reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    mayor           reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    menor           reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    mayor_igual     reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    menor_igual     reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    igualacion      reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    diferenciacion  reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    or              reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    and             reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    dospuntos       reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    error           reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    function        reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    struct          reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    mutable         reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    id              reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    if              reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    while           reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    for             reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    break           reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    continue        reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    return          reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    local           reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    global          reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    tipo            reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    corchete_B      reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    parentesis_B    reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)
    coma            reduce using rule 74 (LLAMADA -> id parentesis_A EXP parentesis_B .)


state 105

    (43) EXP -> EXP coma . E
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 144
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 106

    (36) P -> id .

    parentesis_B    reduce using rule 36 (P -> id .)
    coma            reduce using rule 36 (P -> id .)


state 107

    (32) FUNCION -> function id parentesis_A PAR . parentesis_B BLOQUE
    (34) PAR -> PAR . coma P

    parentesis_B    shift and go to state 145
    coma            shift and go to state 146


state 108

    (33) FUNCION -> function id parentesis_A parentesis_B . BLOQUE
    (15) BLOQUE -> . INS end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . FUNCION
    (7) I -> . STRUCT
    (8) I -> . LLAMADA
    (9) I -> . IF
    (10) I -> . WHILE
    (11) I -> . FOR
    (12) I -> . BREAK
    (13) I -> . CONTINUE
    (14) I -> . RETURN
    (24) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (25) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (26) ASIGNACION -> . SCOPE id
    (32) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (33) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (37) STRUCT -> . struct id ATR end
    (38) STRUCT -> . mutable struct id ATR end
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (76) IF -> . if E BLOQUE
    (77) IF -> . if E BLOQUE_ABIERTO ELSE
    (78) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (83) WHILE -> . while E BLOQUE
    (84) FOR -> . for id in E BLOQUE
    (87) BREAK -> . break
    (88) CONTINUE -> . continue
    (89) RETURN -> . return E
    (90) RETURN -> . return
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (22) SCOPE -> . local
    (23) SCOPE -> . global

    error           shift and go to state 3
    function        shift and go to state 17
    struct          shift and go to state 18
    mutable         shift and go to state 19
    id              shift and go to state 16
    if              shift and go to state 20
    while           shift and go to state 21
    for             shift and go to state 22
    break           shift and go to state 23
    continue        shift and go to state 24
    return          shift and go to state 25
    local           shift and go to state 26
    global          shift and go to state 27

    BLOQUE                         shift and go to state 147
    INS                            shift and go to state 99
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    FUNCION                        shift and go to state 5
    STRUCT                         shift and go to state 6
    LLAMADA                        shift and go to state 7
    IF                             shift and go to state 8
    WHILE                          shift and go to state 9
    FOR                            shift and go to state 10
    BREAK                          shift and go to state 11
    CONTINUE                       shift and go to state 12
    RETURN                         shift and go to state 13
    ID                             shift and go to state 14
    SCOPE                          shift and go to state 15

state 109

    (35) PAR -> P .

    parentesis_B    reduce using rule 35 (PAR -> P .)
    coma            reduce using rule 35 (PAR -> P .)


state 110

    (41) A -> id tipo . TIPO puntoycoma
    (17) TIPO -> . Int64
    (18) TIPO -> . Float64
    (19) TIPO -> . Bool
    (20) TIPO -> . Char
    (21) TIPO -> . String

    Int64           shift and go to state 139
    Float64         shift and go to state 140
    Bool            shift and go to state 141
    Char            shift and go to state 142
    String          shift and go to state 143

    TIPO                           shift and go to state 148

state 111

    (42) A -> id puntoycoma .

    end             reduce using rule 42 (A -> id puntoycoma .)
    id              reduce using rule 42 (A -> id puntoycoma .)


state 112

    (37) STRUCT -> struct id ATR end .

    puntoycoma      reduce using rule 37 (STRUCT -> struct id ATR end .)


state 113

    (39) ATR -> ATR A .

    end             reduce using rule 39 (ATR -> ATR A .)
    id              reduce using rule 39 (ATR -> ATR A .)


state 114

    (38) STRUCT -> mutable struct id ATR . end
    (39) ATR -> ATR . A
    (41) A -> . id tipo TIPO puntoycoma
    (42) A -> . id puntoycoma

    end             shift and go to state 149
    id              shift and go to state 71

    A                              shift and go to state 113

state 115

    (77) IF -> if E BLOQUE_ABIERTO ELSE .

    puntoycoma      reduce using rule 77 (IF -> if E BLOQUE_ABIERTO ELSE .)


state 116

    (78) IF -> if E BLOQUE_ABIERTO ELSEIF .

    puntoycoma      reduce using rule 78 (IF -> if E BLOQUE_ABIERTO ELSEIF .)


state 117

    (82) ELSE -> else . BLOQUE
    (15) BLOQUE -> . INS end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . FUNCION
    (7) I -> . STRUCT
    (8) I -> . LLAMADA
    (9) I -> . IF
    (10) I -> . WHILE
    (11) I -> . FOR
    (12) I -> . BREAK
    (13) I -> . CONTINUE
    (14) I -> . RETURN
    (24) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (25) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (26) ASIGNACION -> . SCOPE id
    (32) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (33) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (37) STRUCT -> . struct id ATR end
    (38) STRUCT -> . mutable struct id ATR end
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (76) IF -> . if E BLOQUE
    (77) IF -> . if E BLOQUE_ABIERTO ELSE
    (78) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (83) WHILE -> . while E BLOQUE
    (84) FOR -> . for id in E BLOQUE
    (87) BREAK -> . break
    (88) CONTINUE -> . continue
    (89) RETURN -> . return E
    (90) RETURN -> . return
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (22) SCOPE -> . local
    (23) SCOPE -> . global

    error           shift and go to state 3
    function        shift and go to state 17
    struct          shift and go to state 18
    mutable         shift and go to state 19
    id              shift and go to state 16
    if              shift and go to state 20
    while           shift and go to state 21
    for             shift and go to state 22
    break           shift and go to state 23
    continue        shift and go to state 24
    return          shift and go to state 25
    local           shift and go to state 26
    global          shift and go to state 27

    BLOQUE                         shift and go to state 150
    INS                            shift and go to state 99
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    FUNCION                        shift and go to state 5
    STRUCT                         shift and go to state 6
    LLAMADA                        shift and go to state 7
    IF                             shift and go to state 8
    WHILE                          shift and go to state 9
    FOR                            shift and go to state 10
    BREAK                          shift and go to state 11
    CONTINUE                       shift and go to state 12
    RETURN                         shift and go to state 13
    ID                             shift and go to state 14
    SCOPE                          shift and go to state 15

state 118

    (79) ELSEIF -> elseif . E BLOQUE
    (80) ELSEIF -> elseif . E BLOQUE_ABIERTO ELSEIF
    (81) ELSEIF -> elseif . E BLOQUE_ABIERTO ELSE
    (45) E -> . E mas E
    (46) E -> . E menos E
    (47) E -> . E asterisco E
    (48) E -> . E barra E
    (49) E -> . E caret E
    (50) E -> . E modulo E
    (51) E -> . menos E
    (52) E -> . E mayor E
    (53) E -> . E menor E
    (54) E -> . E mayor_igual E
    (55) E -> . E menor_igual E
    (56) E -> . E igualacion E
    (57) E -> . E diferenciacion E
    (58) E -> . E or E
    (59) E -> . E and E
    (60) E -> . not E
    (61) E -> . ID
    (62) E -> . parentesis_A E parentesis_B
    (63) E -> . LLAMADA
    (64) E -> . RANGO
    (65) E -> . ARREGLO
    (66) E -> . int64
    (67) E -> . float64
    (68) E -> . bool
    (69) E -> . char
    (70) E -> . string
    (71) E -> . Nothing
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (85) RANGO -> . E dospuntos E
    (86) RANGO -> . dospuntos
    (72) ARREGLO -> . corchete_A EXP corchete_B
    (73) ARREGLO -> . corchete_A corchete_B

    menos           shift and go to state 41
    not             shift and go to state 42
    parentesis_A    shift and go to state 44
    int64           shift and go to state 48
    float64         shift and go to state 49
    bool            shift and go to state 50
    char            shift and go to state 51
    string          shift and go to state 52
    Nothing         shift and go to state 53
    id              shift and go to state 54
    dospuntos       shift and go to state 56
    corchete_A      shift and go to state 55

    E                              shift and go to state 151
    ID                             shift and go to state 43
    LLAMADA                        shift and go to state 45
    RANGO                          shift and go to state 46
    ARREGLO                        shift and go to state 47

state 119

    (45) E -> E mas E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    mas             reduce using rule 45 (E -> E mas E .)
    menos           reduce using rule 45 (E -> E mas E .)
    mayor           reduce using rule 45 (E -> E mas E .)
    menor           reduce using rule 45 (E -> E mas E .)
    mayor_igual     reduce using rule 45 (E -> E mas E .)
    menor_igual     reduce using rule 45 (E -> E mas E .)
    igualacion      reduce using rule 45 (E -> E mas E .)
    diferenciacion  reduce using rule 45 (E -> E mas E .)
    or              reduce using rule 45 (E -> E mas E .)
    and             reduce using rule 45 (E -> E mas E .)
    dospuntos       reduce using rule 45 (E -> E mas E .)
    error           reduce using rule 45 (E -> E mas E .)
    function        reduce using rule 45 (E -> E mas E .)
    struct          reduce using rule 45 (E -> E mas E .)
    mutable         reduce using rule 45 (E -> E mas E .)
    id              reduce using rule 45 (E -> E mas E .)
    if              reduce using rule 45 (E -> E mas E .)
    while           reduce using rule 45 (E -> E mas E .)
    for             reduce using rule 45 (E -> E mas E .)
    break           reduce using rule 45 (E -> E mas E .)
    continue        reduce using rule 45 (E -> E mas E .)
    return          reduce using rule 45 (E -> E mas E .)
    local           reduce using rule 45 (E -> E mas E .)
    global          reduce using rule 45 (E -> E mas E .)
    puntoycoma      reduce using rule 45 (E -> E mas E .)
    tipo            reduce using rule 45 (E -> E mas E .)
    corchete_B      reduce using rule 45 (E -> E mas E .)
    parentesis_B    reduce using rule 45 (E -> E mas E .)
    coma            reduce using rule 45 (E -> E mas E .)
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82

  ! asterisco       [ reduce using rule 45 (E -> E mas E .) ]
  ! barra           [ reduce using rule 45 (E -> E mas E .) ]
  ! caret           [ reduce using rule 45 (E -> E mas E .) ]
  ! modulo          [ reduce using rule 45 (E -> E mas E .) ]
  ! mas             [ shift and go to state 77 ]
  ! menos           [ shift and go to state 78 ]
  ! mayor           [ shift and go to state 83 ]
  ! menor           [ shift and go to state 84 ]
  ! mayor_igual     [ shift and go to state 85 ]
  ! menor_igual     [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferenciacion  [ shift and go to state 88 ]
  ! or              [ shift and go to state 89 ]
  ! and             [ shift and go to state 90 ]
  ! dospuntos       [ shift and go to state 91 ]


state 120

    (46) E -> E menos E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    mas             reduce using rule 46 (E -> E menos E .)
    menos           reduce using rule 46 (E -> E menos E .)
    mayor           reduce using rule 46 (E -> E menos E .)
    menor           reduce using rule 46 (E -> E menos E .)
    mayor_igual     reduce using rule 46 (E -> E menos E .)
    menor_igual     reduce using rule 46 (E -> E menos E .)
    igualacion      reduce using rule 46 (E -> E menos E .)
    diferenciacion  reduce using rule 46 (E -> E menos E .)
    or              reduce using rule 46 (E -> E menos E .)
    and             reduce using rule 46 (E -> E menos E .)
    dospuntos       reduce using rule 46 (E -> E menos E .)
    error           reduce using rule 46 (E -> E menos E .)
    function        reduce using rule 46 (E -> E menos E .)
    struct          reduce using rule 46 (E -> E menos E .)
    mutable         reduce using rule 46 (E -> E menos E .)
    id              reduce using rule 46 (E -> E menos E .)
    if              reduce using rule 46 (E -> E menos E .)
    while           reduce using rule 46 (E -> E menos E .)
    for             reduce using rule 46 (E -> E menos E .)
    break           reduce using rule 46 (E -> E menos E .)
    continue        reduce using rule 46 (E -> E menos E .)
    return          reduce using rule 46 (E -> E menos E .)
    local           reduce using rule 46 (E -> E menos E .)
    global          reduce using rule 46 (E -> E menos E .)
    puntoycoma      reduce using rule 46 (E -> E menos E .)
    tipo            reduce using rule 46 (E -> E menos E .)
    corchete_B      reduce using rule 46 (E -> E menos E .)
    parentesis_B    reduce using rule 46 (E -> E menos E .)
    coma            reduce using rule 46 (E -> E menos E .)
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82

  ! asterisco       [ reduce using rule 46 (E -> E menos E .) ]
  ! barra           [ reduce using rule 46 (E -> E menos E .) ]
  ! caret           [ reduce using rule 46 (E -> E menos E .) ]
  ! modulo          [ reduce using rule 46 (E -> E menos E .) ]
  ! mas             [ shift and go to state 77 ]
  ! menos           [ shift and go to state 78 ]
  ! mayor           [ shift and go to state 83 ]
  ! menor           [ shift and go to state 84 ]
  ! mayor_igual     [ shift and go to state 85 ]
  ! menor_igual     [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferenciacion  [ shift and go to state 88 ]
  ! or              [ shift and go to state 89 ]
  ! and             [ shift and go to state 90 ]
  ! dospuntos       [ shift and go to state 91 ]


state 121

    (47) E -> E asterisco E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    mas             reduce using rule 47 (E -> E asterisco E .)
    menos           reduce using rule 47 (E -> E asterisco E .)
    asterisco       reduce using rule 47 (E -> E asterisco E .)
    barra           reduce using rule 47 (E -> E asterisco E .)
    modulo          reduce using rule 47 (E -> E asterisco E .)
    mayor           reduce using rule 47 (E -> E asterisco E .)
    menor           reduce using rule 47 (E -> E asterisco E .)
    mayor_igual     reduce using rule 47 (E -> E asterisco E .)
    menor_igual     reduce using rule 47 (E -> E asterisco E .)
    igualacion      reduce using rule 47 (E -> E asterisco E .)
    diferenciacion  reduce using rule 47 (E -> E asterisco E .)
    or              reduce using rule 47 (E -> E asterisco E .)
    and             reduce using rule 47 (E -> E asterisco E .)
    dospuntos       reduce using rule 47 (E -> E asterisco E .)
    error           reduce using rule 47 (E -> E asterisco E .)
    function        reduce using rule 47 (E -> E asterisco E .)
    struct          reduce using rule 47 (E -> E asterisco E .)
    mutable         reduce using rule 47 (E -> E asterisco E .)
    id              reduce using rule 47 (E -> E asterisco E .)
    if              reduce using rule 47 (E -> E asterisco E .)
    while           reduce using rule 47 (E -> E asterisco E .)
    for             reduce using rule 47 (E -> E asterisco E .)
    break           reduce using rule 47 (E -> E asterisco E .)
    continue        reduce using rule 47 (E -> E asterisco E .)
    return          reduce using rule 47 (E -> E asterisco E .)
    local           reduce using rule 47 (E -> E asterisco E .)
    global          reduce using rule 47 (E -> E asterisco E .)
    puntoycoma      reduce using rule 47 (E -> E asterisco E .)
    tipo            reduce using rule 47 (E -> E asterisco E .)
    corchete_B      reduce using rule 47 (E -> E asterisco E .)
    parentesis_B    reduce using rule 47 (E -> E asterisco E .)
    coma            reduce using rule 47 (E -> E asterisco E .)
    caret           shift and go to state 81

  ! caret           [ reduce using rule 47 (E -> E asterisco E .) ]
  ! mas             [ shift and go to state 77 ]
  ! menos           [ shift and go to state 78 ]
  ! asterisco       [ shift and go to state 79 ]
  ! barra           [ shift and go to state 80 ]
  ! modulo          [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! menor           [ shift and go to state 84 ]
  ! mayor_igual     [ shift and go to state 85 ]
  ! menor_igual     [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferenciacion  [ shift and go to state 88 ]
  ! or              [ shift and go to state 89 ]
  ! and             [ shift and go to state 90 ]
  ! dospuntos       [ shift and go to state 91 ]


state 122

    (48) E -> E barra E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    mas             reduce using rule 48 (E -> E barra E .)
    menos           reduce using rule 48 (E -> E barra E .)
    asterisco       reduce using rule 48 (E -> E barra E .)
    barra           reduce using rule 48 (E -> E barra E .)
    modulo          reduce using rule 48 (E -> E barra E .)
    mayor           reduce using rule 48 (E -> E barra E .)
    menor           reduce using rule 48 (E -> E barra E .)
    mayor_igual     reduce using rule 48 (E -> E barra E .)
    menor_igual     reduce using rule 48 (E -> E barra E .)
    igualacion      reduce using rule 48 (E -> E barra E .)
    diferenciacion  reduce using rule 48 (E -> E barra E .)
    or              reduce using rule 48 (E -> E barra E .)
    and             reduce using rule 48 (E -> E barra E .)
    dospuntos       reduce using rule 48 (E -> E barra E .)
    error           reduce using rule 48 (E -> E barra E .)
    function        reduce using rule 48 (E -> E barra E .)
    struct          reduce using rule 48 (E -> E barra E .)
    mutable         reduce using rule 48 (E -> E barra E .)
    id              reduce using rule 48 (E -> E barra E .)
    if              reduce using rule 48 (E -> E barra E .)
    while           reduce using rule 48 (E -> E barra E .)
    for             reduce using rule 48 (E -> E barra E .)
    break           reduce using rule 48 (E -> E barra E .)
    continue        reduce using rule 48 (E -> E barra E .)
    return          reduce using rule 48 (E -> E barra E .)
    local           reduce using rule 48 (E -> E barra E .)
    global          reduce using rule 48 (E -> E barra E .)
    puntoycoma      reduce using rule 48 (E -> E barra E .)
    tipo            reduce using rule 48 (E -> E barra E .)
    corchete_B      reduce using rule 48 (E -> E barra E .)
    parentesis_B    reduce using rule 48 (E -> E barra E .)
    coma            reduce using rule 48 (E -> E barra E .)
    caret           shift and go to state 81

  ! caret           [ reduce using rule 48 (E -> E barra E .) ]
  ! mas             [ shift and go to state 77 ]
  ! menos           [ shift and go to state 78 ]
  ! asterisco       [ shift and go to state 79 ]
  ! barra           [ shift and go to state 80 ]
  ! modulo          [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! menor           [ shift and go to state 84 ]
  ! mayor_igual     [ shift and go to state 85 ]
  ! menor_igual     [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferenciacion  [ shift and go to state 88 ]
  ! or              [ shift and go to state 89 ]
  ! and             [ shift and go to state 90 ]
  ! dospuntos       [ shift and go to state 91 ]


state 123

    (49) E -> E caret E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    mas             reduce using rule 49 (E -> E caret E .)
    menos           reduce using rule 49 (E -> E caret E .)
    asterisco       reduce using rule 49 (E -> E caret E .)
    barra           reduce using rule 49 (E -> E caret E .)
    modulo          reduce using rule 49 (E -> E caret E .)
    mayor           reduce using rule 49 (E -> E caret E .)
    menor           reduce using rule 49 (E -> E caret E .)
    mayor_igual     reduce using rule 49 (E -> E caret E .)
    menor_igual     reduce using rule 49 (E -> E caret E .)
    igualacion      reduce using rule 49 (E -> E caret E .)
    diferenciacion  reduce using rule 49 (E -> E caret E .)
    or              reduce using rule 49 (E -> E caret E .)
    and             reduce using rule 49 (E -> E caret E .)
    dospuntos       reduce using rule 49 (E -> E caret E .)
    error           reduce using rule 49 (E -> E caret E .)
    function        reduce using rule 49 (E -> E caret E .)
    struct          reduce using rule 49 (E -> E caret E .)
    mutable         reduce using rule 49 (E -> E caret E .)
    id              reduce using rule 49 (E -> E caret E .)
    if              reduce using rule 49 (E -> E caret E .)
    while           reduce using rule 49 (E -> E caret E .)
    for             reduce using rule 49 (E -> E caret E .)
    break           reduce using rule 49 (E -> E caret E .)
    continue        reduce using rule 49 (E -> E caret E .)
    return          reduce using rule 49 (E -> E caret E .)
    local           reduce using rule 49 (E -> E caret E .)
    global          reduce using rule 49 (E -> E caret E .)
    puntoycoma      reduce using rule 49 (E -> E caret E .)
    tipo            reduce using rule 49 (E -> E caret E .)
    corchete_B      reduce using rule 49 (E -> E caret E .)
    parentesis_B    reduce using rule 49 (E -> E caret E .)
    coma            reduce using rule 49 (E -> E caret E .)
    caret           shift and go to state 81

  ! caret           [ reduce using rule 49 (E -> E caret E .) ]
  ! mas             [ shift and go to state 77 ]
  ! menos           [ shift and go to state 78 ]
  ! asterisco       [ shift and go to state 79 ]
  ! barra           [ shift and go to state 80 ]
  ! modulo          [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! menor           [ shift and go to state 84 ]
  ! mayor_igual     [ shift and go to state 85 ]
  ! menor_igual     [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferenciacion  [ shift and go to state 88 ]
  ! or              [ shift and go to state 89 ]
  ! and             [ shift and go to state 90 ]
  ! dospuntos       [ shift and go to state 91 ]


state 124

    (50) E -> E modulo E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    mas             reduce using rule 50 (E -> E modulo E .)
    menos           reduce using rule 50 (E -> E modulo E .)
    asterisco       reduce using rule 50 (E -> E modulo E .)
    barra           reduce using rule 50 (E -> E modulo E .)
    modulo          reduce using rule 50 (E -> E modulo E .)
    mayor           reduce using rule 50 (E -> E modulo E .)
    menor           reduce using rule 50 (E -> E modulo E .)
    mayor_igual     reduce using rule 50 (E -> E modulo E .)
    menor_igual     reduce using rule 50 (E -> E modulo E .)
    igualacion      reduce using rule 50 (E -> E modulo E .)
    diferenciacion  reduce using rule 50 (E -> E modulo E .)
    or              reduce using rule 50 (E -> E modulo E .)
    and             reduce using rule 50 (E -> E modulo E .)
    dospuntos       reduce using rule 50 (E -> E modulo E .)
    error           reduce using rule 50 (E -> E modulo E .)
    function        reduce using rule 50 (E -> E modulo E .)
    struct          reduce using rule 50 (E -> E modulo E .)
    mutable         reduce using rule 50 (E -> E modulo E .)
    id              reduce using rule 50 (E -> E modulo E .)
    if              reduce using rule 50 (E -> E modulo E .)
    while           reduce using rule 50 (E -> E modulo E .)
    for             reduce using rule 50 (E -> E modulo E .)
    break           reduce using rule 50 (E -> E modulo E .)
    continue        reduce using rule 50 (E -> E modulo E .)
    return          reduce using rule 50 (E -> E modulo E .)
    local           reduce using rule 50 (E -> E modulo E .)
    global          reduce using rule 50 (E -> E modulo E .)
    puntoycoma      reduce using rule 50 (E -> E modulo E .)
    tipo            reduce using rule 50 (E -> E modulo E .)
    corchete_B      reduce using rule 50 (E -> E modulo E .)
    parentesis_B    reduce using rule 50 (E -> E modulo E .)
    coma            reduce using rule 50 (E -> E modulo E .)
    caret           shift and go to state 81

  ! caret           [ reduce using rule 50 (E -> E modulo E .) ]
  ! mas             [ shift and go to state 77 ]
  ! menos           [ shift and go to state 78 ]
  ! asterisco       [ shift and go to state 79 ]
  ! barra           [ shift and go to state 80 ]
  ! modulo          [ shift and go to state 82 ]
  ! mayor           [ shift and go to state 83 ]
  ! menor           [ shift and go to state 84 ]
  ! mayor_igual     [ shift and go to state 85 ]
  ! menor_igual     [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferenciacion  [ shift and go to state 88 ]
  ! or              [ shift and go to state 89 ]
  ! and             [ shift and go to state 90 ]
  ! dospuntos       [ shift and go to state 91 ]


state 125

    (52) E -> E mayor E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    mayor           reduce using rule 52 (E -> E mayor E .)
    menor           reduce using rule 52 (E -> E mayor E .)
    mayor_igual     reduce using rule 52 (E -> E mayor E .)
    menor_igual     reduce using rule 52 (E -> E mayor E .)
    igualacion      reduce using rule 52 (E -> E mayor E .)
    diferenciacion  reduce using rule 52 (E -> E mayor E .)
    or              reduce using rule 52 (E -> E mayor E .)
    and             reduce using rule 52 (E -> E mayor E .)
    dospuntos       reduce using rule 52 (E -> E mayor E .)
    error           reduce using rule 52 (E -> E mayor E .)
    function        reduce using rule 52 (E -> E mayor E .)
    struct          reduce using rule 52 (E -> E mayor E .)
    mutable         reduce using rule 52 (E -> E mayor E .)
    id              reduce using rule 52 (E -> E mayor E .)
    if              reduce using rule 52 (E -> E mayor E .)
    while           reduce using rule 52 (E -> E mayor E .)
    for             reduce using rule 52 (E -> E mayor E .)
    break           reduce using rule 52 (E -> E mayor E .)
    continue        reduce using rule 52 (E -> E mayor E .)
    return          reduce using rule 52 (E -> E mayor E .)
    local           reduce using rule 52 (E -> E mayor E .)
    global          reduce using rule 52 (E -> E mayor E .)
    puntoycoma      reduce using rule 52 (E -> E mayor E .)
    tipo            reduce using rule 52 (E -> E mayor E .)
    corchete_B      reduce using rule 52 (E -> E mayor E .)
    parentesis_B    reduce using rule 52 (E -> E mayor E .)
    coma            reduce using rule 52 (E -> E mayor E .)
    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82

  ! mas             [ reduce using rule 52 (E -> E mayor E .) ]
  ! menos           [ reduce using rule 52 (E -> E mayor E .) ]
  ! asterisco       [ reduce using rule 52 (E -> E mayor E .) ]
  ! barra           [ reduce using rule 52 (E -> E mayor E .) ]
  ! caret           [ reduce using rule 52 (E -> E mayor E .) ]
  ! modulo          [ reduce using rule 52 (E -> E mayor E .) ]
  ! mayor           [ shift and go to state 83 ]
  ! menor           [ shift and go to state 84 ]
  ! mayor_igual     [ shift and go to state 85 ]
  ! menor_igual     [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferenciacion  [ shift and go to state 88 ]
  ! or              [ shift and go to state 89 ]
  ! and             [ shift and go to state 90 ]
  ! dospuntos       [ shift and go to state 91 ]


state 126

    (53) E -> E menor E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    mayor           reduce using rule 53 (E -> E menor E .)
    menor           reduce using rule 53 (E -> E menor E .)
    mayor_igual     reduce using rule 53 (E -> E menor E .)
    menor_igual     reduce using rule 53 (E -> E menor E .)
    igualacion      reduce using rule 53 (E -> E menor E .)
    diferenciacion  reduce using rule 53 (E -> E menor E .)
    or              reduce using rule 53 (E -> E menor E .)
    and             reduce using rule 53 (E -> E menor E .)
    dospuntos       reduce using rule 53 (E -> E menor E .)
    error           reduce using rule 53 (E -> E menor E .)
    function        reduce using rule 53 (E -> E menor E .)
    struct          reduce using rule 53 (E -> E menor E .)
    mutable         reduce using rule 53 (E -> E menor E .)
    id              reduce using rule 53 (E -> E menor E .)
    if              reduce using rule 53 (E -> E menor E .)
    while           reduce using rule 53 (E -> E menor E .)
    for             reduce using rule 53 (E -> E menor E .)
    break           reduce using rule 53 (E -> E menor E .)
    continue        reduce using rule 53 (E -> E menor E .)
    return          reduce using rule 53 (E -> E menor E .)
    local           reduce using rule 53 (E -> E menor E .)
    global          reduce using rule 53 (E -> E menor E .)
    puntoycoma      reduce using rule 53 (E -> E menor E .)
    tipo            reduce using rule 53 (E -> E menor E .)
    corchete_B      reduce using rule 53 (E -> E menor E .)
    parentesis_B    reduce using rule 53 (E -> E menor E .)
    coma            reduce using rule 53 (E -> E menor E .)
    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82

  ! mas             [ reduce using rule 53 (E -> E menor E .) ]
  ! menos           [ reduce using rule 53 (E -> E menor E .) ]
  ! asterisco       [ reduce using rule 53 (E -> E menor E .) ]
  ! barra           [ reduce using rule 53 (E -> E menor E .) ]
  ! caret           [ reduce using rule 53 (E -> E menor E .) ]
  ! modulo          [ reduce using rule 53 (E -> E menor E .) ]
  ! mayor           [ shift and go to state 83 ]
  ! menor           [ shift and go to state 84 ]
  ! mayor_igual     [ shift and go to state 85 ]
  ! menor_igual     [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferenciacion  [ shift and go to state 88 ]
  ! or              [ shift and go to state 89 ]
  ! and             [ shift and go to state 90 ]
  ! dospuntos       [ shift and go to state 91 ]


state 127

    (54) E -> E mayor_igual E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    mayor           reduce using rule 54 (E -> E mayor_igual E .)
    menor           reduce using rule 54 (E -> E mayor_igual E .)
    mayor_igual     reduce using rule 54 (E -> E mayor_igual E .)
    menor_igual     reduce using rule 54 (E -> E mayor_igual E .)
    igualacion      reduce using rule 54 (E -> E mayor_igual E .)
    diferenciacion  reduce using rule 54 (E -> E mayor_igual E .)
    or              reduce using rule 54 (E -> E mayor_igual E .)
    and             reduce using rule 54 (E -> E mayor_igual E .)
    dospuntos       reduce using rule 54 (E -> E mayor_igual E .)
    error           reduce using rule 54 (E -> E mayor_igual E .)
    function        reduce using rule 54 (E -> E mayor_igual E .)
    struct          reduce using rule 54 (E -> E mayor_igual E .)
    mutable         reduce using rule 54 (E -> E mayor_igual E .)
    id              reduce using rule 54 (E -> E mayor_igual E .)
    if              reduce using rule 54 (E -> E mayor_igual E .)
    while           reduce using rule 54 (E -> E mayor_igual E .)
    for             reduce using rule 54 (E -> E mayor_igual E .)
    break           reduce using rule 54 (E -> E mayor_igual E .)
    continue        reduce using rule 54 (E -> E mayor_igual E .)
    return          reduce using rule 54 (E -> E mayor_igual E .)
    local           reduce using rule 54 (E -> E mayor_igual E .)
    global          reduce using rule 54 (E -> E mayor_igual E .)
    puntoycoma      reduce using rule 54 (E -> E mayor_igual E .)
    tipo            reduce using rule 54 (E -> E mayor_igual E .)
    corchete_B      reduce using rule 54 (E -> E mayor_igual E .)
    parentesis_B    reduce using rule 54 (E -> E mayor_igual E .)
    coma            reduce using rule 54 (E -> E mayor_igual E .)
    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82

  ! mas             [ reduce using rule 54 (E -> E mayor_igual E .) ]
  ! menos           [ reduce using rule 54 (E -> E mayor_igual E .) ]
  ! asterisco       [ reduce using rule 54 (E -> E mayor_igual E .) ]
  ! barra           [ reduce using rule 54 (E -> E mayor_igual E .) ]
  ! caret           [ reduce using rule 54 (E -> E mayor_igual E .) ]
  ! modulo          [ reduce using rule 54 (E -> E mayor_igual E .) ]
  ! mayor           [ shift and go to state 83 ]
  ! menor           [ shift and go to state 84 ]
  ! mayor_igual     [ shift and go to state 85 ]
  ! menor_igual     [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferenciacion  [ shift and go to state 88 ]
  ! or              [ shift and go to state 89 ]
  ! and             [ shift and go to state 90 ]
  ! dospuntos       [ shift and go to state 91 ]


state 128

    (55) E -> E menor_igual E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    mayor           reduce using rule 55 (E -> E menor_igual E .)
    menor           reduce using rule 55 (E -> E menor_igual E .)
    mayor_igual     reduce using rule 55 (E -> E menor_igual E .)
    menor_igual     reduce using rule 55 (E -> E menor_igual E .)
    igualacion      reduce using rule 55 (E -> E menor_igual E .)
    diferenciacion  reduce using rule 55 (E -> E menor_igual E .)
    or              reduce using rule 55 (E -> E menor_igual E .)
    and             reduce using rule 55 (E -> E menor_igual E .)
    dospuntos       reduce using rule 55 (E -> E menor_igual E .)
    error           reduce using rule 55 (E -> E menor_igual E .)
    function        reduce using rule 55 (E -> E menor_igual E .)
    struct          reduce using rule 55 (E -> E menor_igual E .)
    mutable         reduce using rule 55 (E -> E menor_igual E .)
    id              reduce using rule 55 (E -> E menor_igual E .)
    if              reduce using rule 55 (E -> E menor_igual E .)
    while           reduce using rule 55 (E -> E menor_igual E .)
    for             reduce using rule 55 (E -> E menor_igual E .)
    break           reduce using rule 55 (E -> E menor_igual E .)
    continue        reduce using rule 55 (E -> E menor_igual E .)
    return          reduce using rule 55 (E -> E menor_igual E .)
    local           reduce using rule 55 (E -> E menor_igual E .)
    global          reduce using rule 55 (E -> E menor_igual E .)
    puntoycoma      reduce using rule 55 (E -> E menor_igual E .)
    tipo            reduce using rule 55 (E -> E menor_igual E .)
    corchete_B      reduce using rule 55 (E -> E menor_igual E .)
    parentesis_B    reduce using rule 55 (E -> E menor_igual E .)
    coma            reduce using rule 55 (E -> E menor_igual E .)
    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82

  ! mas             [ reduce using rule 55 (E -> E menor_igual E .) ]
  ! menos           [ reduce using rule 55 (E -> E menor_igual E .) ]
  ! asterisco       [ reduce using rule 55 (E -> E menor_igual E .) ]
  ! barra           [ reduce using rule 55 (E -> E menor_igual E .) ]
  ! caret           [ reduce using rule 55 (E -> E menor_igual E .) ]
  ! modulo          [ reduce using rule 55 (E -> E menor_igual E .) ]
  ! mayor           [ shift and go to state 83 ]
  ! menor           [ shift and go to state 84 ]
  ! mayor_igual     [ shift and go to state 85 ]
  ! menor_igual     [ shift and go to state 86 ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferenciacion  [ shift and go to state 88 ]
  ! or              [ shift and go to state 89 ]
  ! and             [ shift and go to state 90 ]
  ! dospuntos       [ shift and go to state 91 ]


state 129

    (56) E -> E igualacion E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    igualacion      reduce using rule 56 (E -> E igualacion E .)
    diferenciacion  reduce using rule 56 (E -> E igualacion E .)
    or              reduce using rule 56 (E -> E igualacion E .)
    and             reduce using rule 56 (E -> E igualacion E .)
    dospuntos       reduce using rule 56 (E -> E igualacion E .)
    error           reduce using rule 56 (E -> E igualacion E .)
    function        reduce using rule 56 (E -> E igualacion E .)
    struct          reduce using rule 56 (E -> E igualacion E .)
    mutable         reduce using rule 56 (E -> E igualacion E .)
    id              reduce using rule 56 (E -> E igualacion E .)
    if              reduce using rule 56 (E -> E igualacion E .)
    while           reduce using rule 56 (E -> E igualacion E .)
    for             reduce using rule 56 (E -> E igualacion E .)
    break           reduce using rule 56 (E -> E igualacion E .)
    continue        reduce using rule 56 (E -> E igualacion E .)
    return          reduce using rule 56 (E -> E igualacion E .)
    local           reduce using rule 56 (E -> E igualacion E .)
    global          reduce using rule 56 (E -> E igualacion E .)
    puntoycoma      reduce using rule 56 (E -> E igualacion E .)
    tipo            reduce using rule 56 (E -> E igualacion E .)
    corchete_B      reduce using rule 56 (E -> E igualacion E .)
    parentesis_B    reduce using rule 56 (E -> E igualacion E .)
    coma            reduce using rule 56 (E -> E igualacion E .)
    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82
    mayor           shift and go to state 83
    menor           shift and go to state 84
    mayor_igual     shift and go to state 85
    menor_igual     shift and go to state 86

  ! mas             [ reduce using rule 56 (E -> E igualacion E .) ]
  ! menos           [ reduce using rule 56 (E -> E igualacion E .) ]
  ! asterisco       [ reduce using rule 56 (E -> E igualacion E .) ]
  ! barra           [ reduce using rule 56 (E -> E igualacion E .) ]
  ! caret           [ reduce using rule 56 (E -> E igualacion E .) ]
  ! modulo          [ reduce using rule 56 (E -> E igualacion E .) ]
  ! mayor           [ reduce using rule 56 (E -> E igualacion E .) ]
  ! menor           [ reduce using rule 56 (E -> E igualacion E .) ]
  ! mayor_igual     [ reduce using rule 56 (E -> E igualacion E .) ]
  ! menor_igual     [ reduce using rule 56 (E -> E igualacion E .) ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferenciacion  [ shift and go to state 88 ]
  ! or              [ shift and go to state 89 ]
  ! and             [ shift and go to state 90 ]
  ! dospuntos       [ shift and go to state 91 ]


state 130

    (57) E -> E diferenciacion E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    igualacion      reduce using rule 57 (E -> E diferenciacion E .)
    diferenciacion  reduce using rule 57 (E -> E diferenciacion E .)
    or              reduce using rule 57 (E -> E diferenciacion E .)
    and             reduce using rule 57 (E -> E diferenciacion E .)
    dospuntos       reduce using rule 57 (E -> E diferenciacion E .)
    error           reduce using rule 57 (E -> E diferenciacion E .)
    function        reduce using rule 57 (E -> E diferenciacion E .)
    struct          reduce using rule 57 (E -> E diferenciacion E .)
    mutable         reduce using rule 57 (E -> E diferenciacion E .)
    id              reduce using rule 57 (E -> E diferenciacion E .)
    if              reduce using rule 57 (E -> E diferenciacion E .)
    while           reduce using rule 57 (E -> E diferenciacion E .)
    for             reduce using rule 57 (E -> E diferenciacion E .)
    break           reduce using rule 57 (E -> E diferenciacion E .)
    continue        reduce using rule 57 (E -> E diferenciacion E .)
    return          reduce using rule 57 (E -> E diferenciacion E .)
    local           reduce using rule 57 (E -> E diferenciacion E .)
    global          reduce using rule 57 (E -> E diferenciacion E .)
    puntoycoma      reduce using rule 57 (E -> E diferenciacion E .)
    tipo            reduce using rule 57 (E -> E diferenciacion E .)
    corchete_B      reduce using rule 57 (E -> E diferenciacion E .)
    parentesis_B    reduce using rule 57 (E -> E diferenciacion E .)
    coma            reduce using rule 57 (E -> E diferenciacion E .)
    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82
    mayor           shift and go to state 83
    menor           shift and go to state 84
    mayor_igual     shift and go to state 85
    menor_igual     shift and go to state 86

  ! mas             [ reduce using rule 57 (E -> E diferenciacion E .) ]
  ! menos           [ reduce using rule 57 (E -> E diferenciacion E .) ]
  ! asterisco       [ reduce using rule 57 (E -> E diferenciacion E .) ]
  ! barra           [ reduce using rule 57 (E -> E diferenciacion E .) ]
  ! caret           [ reduce using rule 57 (E -> E diferenciacion E .) ]
  ! modulo          [ reduce using rule 57 (E -> E diferenciacion E .) ]
  ! mayor           [ reduce using rule 57 (E -> E diferenciacion E .) ]
  ! menor           [ reduce using rule 57 (E -> E diferenciacion E .) ]
  ! mayor_igual     [ reduce using rule 57 (E -> E diferenciacion E .) ]
  ! menor_igual     [ reduce using rule 57 (E -> E diferenciacion E .) ]
  ! igualacion      [ shift and go to state 87 ]
  ! diferenciacion  [ shift and go to state 88 ]
  ! or              [ shift and go to state 89 ]
  ! and             [ shift and go to state 90 ]
  ! dospuntos       [ shift and go to state 91 ]


state 131

    (58) E -> E or E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    or              reduce using rule 58 (E -> E or E .)
    dospuntos       reduce using rule 58 (E -> E or E .)
    error           reduce using rule 58 (E -> E or E .)
    function        reduce using rule 58 (E -> E or E .)
    struct          reduce using rule 58 (E -> E or E .)
    mutable         reduce using rule 58 (E -> E or E .)
    id              reduce using rule 58 (E -> E or E .)
    if              reduce using rule 58 (E -> E or E .)
    while           reduce using rule 58 (E -> E or E .)
    for             reduce using rule 58 (E -> E or E .)
    break           reduce using rule 58 (E -> E or E .)
    continue        reduce using rule 58 (E -> E or E .)
    return          reduce using rule 58 (E -> E or E .)
    local           reduce using rule 58 (E -> E or E .)
    global          reduce using rule 58 (E -> E or E .)
    puntoycoma      reduce using rule 58 (E -> E or E .)
    tipo            reduce using rule 58 (E -> E or E .)
    corchete_B      reduce using rule 58 (E -> E or E .)
    parentesis_B    reduce using rule 58 (E -> E or E .)
    coma            reduce using rule 58 (E -> E or E .)
    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82
    mayor           shift and go to state 83
    menor           shift and go to state 84
    mayor_igual     shift and go to state 85
    menor_igual     shift and go to state 86
    igualacion      shift and go to state 87
    diferenciacion  shift and go to state 88
    and             shift and go to state 90

  ! mas             [ reduce using rule 58 (E -> E or E .) ]
  ! menos           [ reduce using rule 58 (E -> E or E .) ]
  ! asterisco       [ reduce using rule 58 (E -> E or E .) ]
  ! barra           [ reduce using rule 58 (E -> E or E .) ]
  ! caret           [ reduce using rule 58 (E -> E or E .) ]
  ! modulo          [ reduce using rule 58 (E -> E or E .) ]
  ! mayor           [ reduce using rule 58 (E -> E or E .) ]
  ! menor           [ reduce using rule 58 (E -> E or E .) ]
  ! mayor_igual     [ reduce using rule 58 (E -> E or E .) ]
  ! menor_igual     [ reduce using rule 58 (E -> E or E .) ]
  ! igualacion      [ reduce using rule 58 (E -> E or E .) ]
  ! diferenciacion  [ reduce using rule 58 (E -> E or E .) ]
  ! and             [ reduce using rule 58 (E -> E or E .) ]
  ! or              [ shift and go to state 89 ]
  ! dospuntos       [ shift and go to state 91 ]


state 132

    (59) E -> E and E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    or              reduce using rule 59 (E -> E and E .)
    and             reduce using rule 59 (E -> E and E .)
    dospuntos       reduce using rule 59 (E -> E and E .)
    error           reduce using rule 59 (E -> E and E .)
    function        reduce using rule 59 (E -> E and E .)
    struct          reduce using rule 59 (E -> E and E .)
    mutable         reduce using rule 59 (E -> E and E .)
    id              reduce using rule 59 (E -> E and E .)
    if              reduce using rule 59 (E -> E and E .)
    while           reduce using rule 59 (E -> E and E .)
    for             reduce using rule 59 (E -> E and E .)
    break           reduce using rule 59 (E -> E and E .)
    continue        reduce using rule 59 (E -> E and E .)
    return          reduce using rule 59 (E -> E and E .)
    local           reduce using rule 59 (E -> E and E .)
    global          reduce using rule 59 (E -> E and E .)
    puntoycoma      reduce using rule 59 (E -> E and E .)
    tipo            reduce using rule 59 (E -> E and E .)
    corchete_B      reduce using rule 59 (E -> E and E .)
    parentesis_B    reduce using rule 59 (E -> E and E .)
    coma            reduce using rule 59 (E -> E and E .)
    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82
    mayor           shift and go to state 83
    menor           shift and go to state 84
    mayor_igual     shift and go to state 85
    menor_igual     shift and go to state 86
    igualacion      shift and go to state 87
    diferenciacion  shift and go to state 88

  ! mas             [ reduce using rule 59 (E -> E and E .) ]
  ! menos           [ reduce using rule 59 (E -> E and E .) ]
  ! asterisco       [ reduce using rule 59 (E -> E and E .) ]
  ! barra           [ reduce using rule 59 (E -> E and E .) ]
  ! caret           [ reduce using rule 59 (E -> E and E .) ]
  ! modulo          [ reduce using rule 59 (E -> E and E .) ]
  ! mayor           [ reduce using rule 59 (E -> E and E .) ]
  ! menor           [ reduce using rule 59 (E -> E and E .) ]
  ! mayor_igual     [ reduce using rule 59 (E -> E and E .) ]
  ! menor_igual     [ reduce using rule 59 (E -> E and E .) ]
  ! igualacion      [ reduce using rule 59 (E -> E and E .) ]
  ! diferenciacion  [ reduce using rule 59 (E -> E and E .) ]
  ! or              [ shift and go to state 89 ]
  ! and             [ shift and go to state 90 ]
  ! dospuntos       [ shift and go to state 91 ]


state 133

    (85) RANGO -> E dospuntos E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for menos resolved as shift
  ! shift/reduce conflict for asterisco resolved as shift
  ! shift/reduce conflict for barra resolved as shift
  ! shift/reduce conflict for caret resolved as shift
  ! shift/reduce conflict for modulo resolved as shift
  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for mayor_igual resolved as shift
  ! shift/reduce conflict for menor_igual resolved as shift
  ! shift/reduce conflict for igualacion resolved as shift
  ! shift/reduce conflict for diferenciacion resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for and resolved as shift
  ! shift/reduce conflict for dospuntos resolved as shift
    error           reduce using rule 85 (RANGO -> E dospuntos E .)
    function        reduce using rule 85 (RANGO -> E dospuntos E .)
    struct          reduce using rule 85 (RANGO -> E dospuntos E .)
    mutable         reduce using rule 85 (RANGO -> E dospuntos E .)
    id              reduce using rule 85 (RANGO -> E dospuntos E .)
    if              reduce using rule 85 (RANGO -> E dospuntos E .)
    while           reduce using rule 85 (RANGO -> E dospuntos E .)
    for             reduce using rule 85 (RANGO -> E dospuntos E .)
    break           reduce using rule 85 (RANGO -> E dospuntos E .)
    continue        reduce using rule 85 (RANGO -> E dospuntos E .)
    return          reduce using rule 85 (RANGO -> E dospuntos E .)
    local           reduce using rule 85 (RANGO -> E dospuntos E .)
    global          reduce using rule 85 (RANGO -> E dospuntos E .)
    puntoycoma      reduce using rule 85 (RANGO -> E dospuntos E .)
    tipo            reduce using rule 85 (RANGO -> E dospuntos E .)
    corchete_B      reduce using rule 85 (RANGO -> E dospuntos E .)
    parentesis_B    reduce using rule 85 (RANGO -> E dospuntos E .)
    coma            reduce using rule 85 (RANGO -> E dospuntos E .)
    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82
    mayor           shift and go to state 83
    menor           shift and go to state 84
    mayor_igual     shift and go to state 85
    menor_igual     shift and go to state 86
    igualacion      shift and go to state 87
    diferenciacion  shift and go to state 88
    or              shift and go to state 89
    and             shift and go to state 90
    dospuntos       shift and go to state 91

  ! mas             [ reduce using rule 85 (RANGO -> E dospuntos E .) ]
  ! menos           [ reduce using rule 85 (RANGO -> E dospuntos E .) ]
  ! asterisco       [ reduce using rule 85 (RANGO -> E dospuntos E .) ]
  ! barra           [ reduce using rule 85 (RANGO -> E dospuntos E .) ]
  ! caret           [ reduce using rule 85 (RANGO -> E dospuntos E .) ]
  ! modulo          [ reduce using rule 85 (RANGO -> E dospuntos E .) ]
  ! mayor           [ reduce using rule 85 (RANGO -> E dospuntos E .) ]
  ! menor           [ reduce using rule 85 (RANGO -> E dospuntos E .) ]
  ! mayor_igual     [ reduce using rule 85 (RANGO -> E dospuntos E .) ]
  ! menor_igual     [ reduce using rule 85 (RANGO -> E dospuntos E .) ]
  ! igualacion      [ reduce using rule 85 (RANGO -> E dospuntos E .) ]
  ! diferenciacion  [ reduce using rule 85 (RANGO -> E dospuntos E .) ]
  ! or              [ reduce using rule 85 (RANGO -> E dospuntos E .) ]
  ! and             [ reduce using rule 85 (RANGO -> E dospuntos E .) ]
  ! dospuntos       [ reduce using rule 85 (RANGO -> E dospuntos E .) ]


state 134

    (15) BLOQUE -> INS end .

    puntoycoma      reduce using rule 15 (BLOQUE -> INS end .)


state 135

    (62) E -> parentesis_A E parentesis_B .

    mas             reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    menos           reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    asterisco       reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    barra           reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    caret           reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    modulo          reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    mayor           reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    menor           reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    mayor_igual     reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    menor_igual     reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    igualacion      reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    diferenciacion  reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    or              reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    and             reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    dospuntos       reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    error           reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    function        reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    struct          reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    mutable         reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    id              reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    if              reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    while           reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    for             reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    break           reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    continue        reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    return          reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    local           reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    global          reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    puntoycoma      reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    tipo            reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    corchete_B      reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    parentesis_B    reduce using rule 62 (E -> parentesis_A E parentesis_B .)
    coma            reduce using rule 62 (E -> parentesis_A E parentesis_B .)


state 136

    (72) ARREGLO -> corchete_A EXP corchete_B .

    mas             reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    menos           reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    asterisco       reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    barra           reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    caret           reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    modulo          reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    mayor           reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    menor           reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    mayor_igual     reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    menor_igual     reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    igualacion      reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    diferenciacion  reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    or              reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    and             reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    dospuntos       reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    error           reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    function        reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    struct          reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    mutable         reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    id              reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    if              reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    while           reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    for             reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    break           reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    continue        reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    return          reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    local           reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    global          reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    puntoycoma      reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    tipo            reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    corchete_B      reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    parentesis_B    reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)
    coma            reduce using rule 72 (ARREGLO -> corchete_A EXP corchete_B .)


state 137

    (84) FOR -> for id in E . BLOQUE
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E
    (15) BLOQUE -> . INS end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . FUNCION
    (7) I -> . STRUCT
    (8) I -> . LLAMADA
    (9) I -> . IF
    (10) I -> . WHILE
    (11) I -> . FOR
    (12) I -> . BREAK
    (13) I -> . CONTINUE
    (14) I -> . RETURN
    (24) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (25) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (26) ASIGNACION -> . SCOPE id
    (32) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (33) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (37) STRUCT -> . struct id ATR end
    (38) STRUCT -> . mutable struct id ATR end
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (76) IF -> . if E BLOQUE
    (77) IF -> . if E BLOQUE_ABIERTO ELSE
    (78) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (83) WHILE -> . while E BLOQUE
    (84) FOR -> . for id in E BLOQUE
    (87) BREAK -> . break
    (88) CONTINUE -> . continue
    (89) RETURN -> . return E
    (90) RETURN -> . return
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (22) SCOPE -> . local
    (23) SCOPE -> . global

    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82
    mayor           shift and go to state 83
    menor           shift and go to state 84
    mayor_igual     shift and go to state 85
    menor_igual     shift and go to state 86
    igualacion      shift and go to state 87
    diferenciacion  shift and go to state 88
    or              shift and go to state 89
    and             shift and go to state 90
    dospuntos       shift and go to state 91
    error           shift and go to state 3
    function        shift and go to state 17
    struct          shift and go to state 18
    mutable         shift and go to state 19
    id              shift and go to state 16
    if              shift and go to state 20
    while           shift and go to state 21
    for             shift and go to state 22
    break           shift and go to state 23
    continue        shift and go to state 24
    return          shift and go to state 25
    local           shift and go to state 26
    global          shift and go to state 27

    BLOQUE                         shift and go to state 152
    INS                            shift and go to state 99
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    FUNCION                        shift and go to state 5
    STRUCT                         shift and go to state 6
    LLAMADA                        shift and go to state 7
    IF                             shift and go to state 8
    WHILE                          shift and go to state 9
    FOR                            shift and go to state 10
    BREAK                          shift and go to state 11
    CONTINUE                       shift and go to state 12
    RETURN                         shift and go to state 13
    ID                             shift and go to state 14
    SCOPE                          shift and go to state 15

state 138

    (28) ASIGNACION_VALOR -> E tipo TIPO .

    puntoycoma      reduce using rule 28 (ASIGNACION_VALOR -> E tipo TIPO .)


state 139

    (17) TIPO -> Int64 .

    puntoycoma      reduce using rule 17 (TIPO -> Int64 .)


state 140

    (18) TIPO -> Float64 .

    puntoycoma      reduce using rule 18 (TIPO -> Float64 .)


state 141

    (19) TIPO -> Bool .

    puntoycoma      reduce using rule 19 (TIPO -> Bool .)


state 142

    (20) TIPO -> Char .

    puntoycoma      reduce using rule 20 (TIPO -> Char .)


state 143

    (21) TIPO -> String .

    puntoycoma      reduce using rule 21 (TIPO -> String .)


state 144

    (43) EXP -> EXP coma E .
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E

    parentesis_B    reduce using rule 43 (EXP -> EXP coma E .)
    coma            reduce using rule 43 (EXP -> EXP coma E .)
    corchete_B      reduce using rule 43 (EXP -> EXP coma E .)
    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82
    mayor           shift and go to state 83
    menor           shift and go to state 84
    mayor_igual     shift and go to state 85
    menor_igual     shift and go to state 86
    igualacion      shift and go to state 87
    diferenciacion  shift and go to state 88
    or              shift and go to state 89
    and             shift and go to state 90
    dospuntos       shift and go to state 91


state 145

    (32) FUNCION -> function id parentesis_A PAR parentesis_B . BLOQUE
    (15) BLOQUE -> . INS end
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . FUNCION
    (7) I -> . STRUCT
    (8) I -> . LLAMADA
    (9) I -> . IF
    (10) I -> . WHILE
    (11) I -> . FOR
    (12) I -> . BREAK
    (13) I -> . CONTINUE
    (14) I -> . RETURN
    (24) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (25) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (26) ASIGNACION -> . SCOPE id
    (32) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (33) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (37) STRUCT -> . struct id ATR end
    (38) STRUCT -> . mutable struct id ATR end
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (76) IF -> . if E BLOQUE
    (77) IF -> . if E BLOQUE_ABIERTO ELSE
    (78) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (83) WHILE -> . while E BLOQUE
    (84) FOR -> . for id in E BLOQUE
    (87) BREAK -> . break
    (88) CONTINUE -> . continue
    (89) RETURN -> . return E
    (90) RETURN -> . return
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (22) SCOPE -> . local
    (23) SCOPE -> . global

    error           shift and go to state 3
    function        shift and go to state 17
    struct          shift and go to state 18
    mutable         shift and go to state 19
    id              shift and go to state 16
    if              shift and go to state 20
    while           shift and go to state 21
    for             shift and go to state 22
    break           shift and go to state 23
    continue        shift and go to state 24
    return          shift and go to state 25
    local           shift and go to state 26
    global          shift and go to state 27

    BLOQUE                         shift and go to state 153
    INS                            shift and go to state 99
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    FUNCION                        shift and go to state 5
    STRUCT                         shift and go to state 6
    LLAMADA                        shift and go to state 7
    IF                             shift and go to state 8
    WHILE                          shift and go to state 9
    FOR                            shift and go to state 10
    BREAK                          shift and go to state 11
    CONTINUE                       shift and go to state 12
    RETURN                         shift and go to state 13
    ID                             shift and go to state 14
    SCOPE                          shift and go to state 15

state 146

    (34) PAR -> PAR coma . P
    (36) P -> . id

    id              shift and go to state 106

    P                              shift and go to state 154

state 147

    (33) FUNCION -> function id parentesis_A parentesis_B BLOQUE .

    puntoycoma      reduce using rule 33 (FUNCION -> function id parentesis_A parentesis_B BLOQUE .)


state 148

    (41) A -> id tipo TIPO . puntoycoma

    puntoycoma      shift and go to state 155


state 149

    (38) STRUCT -> mutable struct id ATR end .

    puntoycoma      reduce using rule 38 (STRUCT -> mutable struct id ATR end .)


state 150

    (82) ELSE -> else BLOQUE .

    puntoycoma      reduce using rule 82 (ELSE -> else BLOQUE .)


state 151

    (79) ELSEIF -> elseif E . BLOQUE
    (80) ELSEIF -> elseif E . BLOQUE_ABIERTO ELSEIF
    (81) ELSEIF -> elseif E . BLOQUE_ABIERTO ELSE
    (45) E -> E . mas E
    (46) E -> E . menos E
    (47) E -> E . asterisco E
    (48) E -> E . barra E
    (49) E -> E . caret E
    (50) E -> E . modulo E
    (52) E -> E . mayor E
    (53) E -> E . menor E
    (54) E -> E . mayor_igual E
    (55) E -> E . menor_igual E
    (56) E -> E . igualacion E
    (57) E -> E . diferenciacion E
    (58) E -> E . or E
    (59) E -> E . and E
    (85) RANGO -> E . dospuntos E
    (15) BLOQUE -> . INS end
    (16) BLOQUE_ABIERTO -> . INS
    (1) INS -> . INS I puntoycoma
    (2) INS -> . I puntoycoma
    (3) INS -> . INS error puntoycoma
    (4) INS -> . error puntoycoma
    (5) I -> . ASIGNACION
    (6) I -> . FUNCION
    (7) I -> . STRUCT
    (8) I -> . LLAMADA
    (9) I -> . IF
    (10) I -> . WHILE
    (11) I -> . FOR
    (12) I -> . BREAK
    (13) I -> . CONTINUE
    (14) I -> . RETURN
    (24) ASIGNACION -> . ID igual ASIGNACION_VALOR
    (25) ASIGNACION -> . SCOPE id igual ASIGNACION_VALOR
    (26) ASIGNACION -> . SCOPE id
    (32) FUNCION -> . function id parentesis_A PAR parentesis_B BLOQUE
    (33) FUNCION -> . function id parentesis_A parentesis_B BLOQUE
    (37) STRUCT -> . struct id ATR end
    (38) STRUCT -> . mutable struct id ATR end
    (74) LLAMADA -> . id parentesis_A EXP parentesis_B
    (75) LLAMADA -> . id parentesis_A parentesis_B
    (76) IF -> . if E BLOQUE
    (77) IF -> . if E BLOQUE_ABIERTO ELSE
    (78) IF -> . if E BLOQUE_ABIERTO ELSEIF
    (83) WHILE -> . while E BLOQUE
    (84) FOR -> . for id in E BLOQUE
    (87) BREAK -> . break
    (88) CONTINUE -> . continue
    (89) RETURN -> . return E
    (90) RETURN -> . return
    (29) ID -> . ID punto id
    (30) ID -> . ID corchete_A E corchete_B
    (31) ID -> . id
    (22) SCOPE -> . local
    (23) SCOPE -> . global

    mas             shift and go to state 77
    menos           shift and go to state 78
    asterisco       shift and go to state 79
    barra           shift and go to state 80
    caret           shift and go to state 81
    modulo          shift and go to state 82
    mayor           shift and go to state 83
    menor           shift and go to state 84
    mayor_igual     shift and go to state 85
    menor_igual     shift and go to state 86
    igualacion      shift and go to state 87
    diferenciacion  shift and go to state 88
    or              shift and go to state 89
    and             shift and go to state 90
    dospuntos       shift and go to state 91
    error           shift and go to state 3
    function        shift and go to state 17
    struct          shift and go to state 18
    mutable         shift and go to state 19
    id              shift and go to state 16
    if              shift and go to state 20
    while           shift and go to state 21
    for             shift and go to state 22
    break           shift and go to state 23
    continue        shift and go to state 24
    return          shift and go to state 25
    local           shift and go to state 26
    global          shift and go to state 27

    BLOQUE                         shift and go to state 156
    BLOQUE_ABIERTO                 shift and go to state 157
    INS                            shift and go to state 92
    I                              shift and go to state 2
    ASIGNACION                     shift and go to state 4
    FUNCION                        shift and go to state 5
    STRUCT                         shift and go to state 6
    LLAMADA                        shift and go to state 7
    IF                             shift and go to state 8
    WHILE                          shift and go to state 9
    FOR                            shift and go to state 10
    BREAK                          shift and go to state 11
    CONTINUE                       shift and go to state 12
    RETURN                         shift and go to state 13
    ID                             shift and go to state 14
    SCOPE                          shift and go to state 15

state 152

    (84) FOR -> for id in E BLOQUE .

    puntoycoma      reduce using rule 84 (FOR -> for id in E BLOQUE .)


state 153

    (32) FUNCION -> function id parentesis_A PAR parentesis_B BLOQUE .

    puntoycoma      reduce using rule 32 (FUNCION -> function id parentesis_A PAR parentesis_B BLOQUE .)


state 154

    (34) PAR -> PAR coma P .

    parentesis_B    reduce using rule 34 (PAR -> PAR coma P .)
    coma            reduce using rule 34 (PAR -> PAR coma P .)


state 155

    (41) A -> id tipo TIPO puntoycoma .

    end             reduce using rule 41 (A -> id tipo TIPO puntoycoma .)
    id              reduce using rule 41 (A -> id tipo TIPO puntoycoma .)


state 156

    (79) ELSEIF -> elseif E BLOQUE .

    puntoycoma      reduce using rule 79 (ELSEIF -> elseif E BLOQUE .)


state 157

    (80) ELSEIF -> elseif E BLOQUE_ABIERTO . ELSEIF
    (81) ELSEIF -> elseif E BLOQUE_ABIERTO . ELSE
    (79) ELSEIF -> . elseif E BLOQUE
    (80) ELSEIF -> . elseif E BLOQUE_ABIERTO ELSEIF
    (81) ELSEIF -> . elseif E BLOQUE_ABIERTO ELSE
    (82) ELSE -> . else BLOQUE

    elseif          shift and go to state 118
    else            shift and go to state 117

    ELSEIF                         shift and go to state 158
    ELSE                           shift and go to state 159

state 158

    (80) ELSEIF -> elseif E BLOQUE_ABIERTO ELSEIF .

    puntoycoma      reduce using rule 80 (ELSEIF -> elseif E BLOQUE_ABIERTO ELSEIF .)


state 159

    (81) ELSEIF -> elseif E BLOQUE_ABIERTO ELSE .

    puntoycoma      reduce using rule 81 (ELSEIF -> elseif E BLOQUE_ABIERTO ELSE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for mas in state 133 resolved as shift
WARNING: shift/reduce conflict for menos in state 133 resolved as shift
WARNING: shift/reduce conflict for asterisco in state 133 resolved as shift
WARNING: shift/reduce conflict for barra in state 133 resolved as shift
WARNING: shift/reduce conflict for caret in state 133 resolved as shift
WARNING: shift/reduce conflict for modulo in state 133 resolved as shift
WARNING: shift/reduce conflict for mayor in state 133 resolved as shift
WARNING: shift/reduce conflict for menor in state 133 resolved as shift
WARNING: shift/reduce conflict for mayor_igual in state 133 resolved as shift
WARNING: shift/reduce conflict for menor_igual in state 133 resolved as shift
WARNING: shift/reduce conflict for igualacion in state 133 resolved as shift
WARNING: shift/reduce conflict for diferenciacion in state 133 resolved as shift
WARNING: shift/reduce conflict for or in state 133 resolved as shift
WARNING: shift/reduce conflict for and in state 133 resolved as shift
WARNING: shift/reduce conflict for dospuntos in state 133 resolved as shift
